# Enviroment variables/secrets that are needed
# CLI_SERVER_URL contains the CLI server URL
# GLOBAL_ACCOUNT contains the subdomain of the global account
# IDP_URL contains the URL of an IDP that can be connected to the global account
# SECOND_DIRECTORY_ADMIN_EMAIL contains a second email (different from the technical user's email) for the directory
# CIS_CENTRAL_BINDING contents from the service binding of a `cis-central` service
# BTP_TECHNICAL_USER
# TECHNICAL_USER_EMAIL contains the email of the BTP_TECHNICAL_USER
# More information in the README.md

name: E2E Test

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      checkout-ref:
        description: 'the ref for the repo checkout step'
        default: ''
        required: false
        type: string
      environment:
        description: 'the environment to run in'
        default: 'pr-e2e-approval'
        required: false
        type: string
    secrets:
      CLI_SERVER_URL:
        description: contains the CLI server URL
        required: true
      GLOBAL_ACCOUNT:
        description: contains the subdomain of the global account
        required: true
      IDP_URL:
        description: contains the URL of an IDP that can be connected to the global account
        required: true
      SECOND_DIRECTORY_ADMIN_EMAIL:
        description: contains a second email (different from the technical user's email) for the directory
        required: true
      CIS_CENTRAL_BINDING:
        description: contents from the service binding of a `cis-central` service
        required: true
      BTP_TECHNICAL_USER:
        required: true
      TECHNICAL_USER_EMAIL:
        description: contains the email of the BTP_TECHNICAL_USER
        required: true

permissions:
  contents: read

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      # hardcoded BTP CLI version
      btp_cli_version: 2.64.0
    steps:
      - name: checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          #use inputs.checkout-ref to be able to call it from a pull_request_target workflow, since there it needs to be github.event.pull_request.merge_commit_sha and not the default
          ref: ${{ inputs.checkout-ref }}
          submodules: true 

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: '1.21'
      - run: go version

      - name: Install Helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | sudo gpg --dearmor -o /usr/share/keyrings/helm.gpg
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install -y helm

      - name: Install BTP CLI
      #hardcoded version
        run: |
          curl -LJO https://tools.hana.ondemand.com/additional/btp-cli-linux-amd64-$btp_cli_version.tar.gz --cookie "eula_3_2_agreed=tools.hana.ondemand.com/developer-license-3_2.txt"
          tar -xzf btp-cli-linux-amd64-$btp_cli_version.tar.gz
          cd linux-amd64
          mv btp /usr/local/bin

      - name: Set BUILD_ID
        run: |
          echo "BUILD_ID=${{github.run_number}}" >> $GITHUB_ENV

      - name: Install gettext for envsubst
        run: sudo apt-get update && sudo apt-get install -y gettext

      - name: Run e2e test
        timeout-minutes: 120
        run: |
          make e2e
        env:
          BUILD_ID: ${{ env.BUILD_ID }}
          CIS_CENTRAL_BINDING: ${{ secrets.CIS_CENTRAL_BINDING }}
          BTP_TECHNICAL_USER: ${{ secrets.BTP_TECHNICAL_USER }}
          CLI_SERVER_URL: ${{ secrets.CLI_SERVER_URL }}
          GLOBAL_ACCOUNT: ${{ secrets.GLOBAL_ACCOUNT }}
          TECHNICAL_USER_EMAIL: ${{ secrets.TECHNICAL_USER_EMAIL }}
          SECOND_DIRECTORY_ADMIN_EMAIL: ${{ secrets.SECOND_DIRECTORY_ADMIN_EMAIL }}
          IDP_URL: ${{ secrets.IDP_URL }}

      - name: clean up cluster
        if: always()
        run: |
          go run .github/workflows/cleanup.go
        env:
          BUILD_ID: ${{ env.BUILD_ID }}
          CIS_CENTRAL_BINDING: ${{ secrets.CIS_CENTRAL_BINDING }}
          BTP_TECHNICAL_USER: ${{ secrets.BTP_TECHNICAL_USER }}
          CLI_SERVER_URL: ${{ secrets.CLI_SERVER_URL }}
          GLOBAL_ACCOUNT: ${{ secrets.GLOBAL_ACCOUNT }}
