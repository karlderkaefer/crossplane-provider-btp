/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SubaccountServiceInstanceInitParameters struct {

	// (Map of Set of String) The set of words or phrases assigned to the service instance.
	// The set of words or phrases assigned to the service instance.
	Labels map[string][]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The name of the service instance.
	// The name of the service instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) The configuration parameters for the service instance.
	// The configuration parameters for the service instance.
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// (String) The ID of the service plan.
	// The ID of the service plan.
	ServiceplanID *string `json:"serviceplanId,omitempty" tf:"serviceplan_id,omitempty"`

	// (Boolean) The configuration parameter for service instance sharing. Ensure that the instance is created with a plan that supports instance sharing.
	// The configuration parameter for service instance sharing. Ensure that the instance is created with a plan that supports instance sharing.
	Shared *bool `json:"shared,omitempty" tf:"shared,omitempty"`

	// (String) The ID of the subaccount.
	// The ID of the subaccount.
	SubaccountID *string `json:"subaccountId,omitempty" tf:"subaccount_id,omitempty"`
}

type SubaccountServiceInstanceObservation struct {

	// (String) Contextual data for the resource.
	// Contextual data for the resource.
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// (String) The date and time when the resource was created in RFC3339 format.
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate *string `json:"createdDate,omitempty" tf:"created_date,omitempty"`

	// based management UI for the service instance.
	// The URL of the web-based management UI for the service instance.
	DashboardURL *string `json:"dashboardUrl,omitempty" tf:"dashboard_url,omitempty"`

	// (String) The ID of the service instance.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Map of Set of String) The set of words or phrases assigned to the service instance.
	// The set of words or phrases assigned to the service instance.
	Labels map[string][]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The date and time when the resource was last modified in RFC3339 format.
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified *string `json:"lastModified,omitempty" tf:"last_modified,omitempty"`

	// (String) The name of the service instance.
	// The name of the service instance.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) The configuration parameters for the service instance.
	// The configuration parameters for the service instance.
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// (String) The platform ID.
	// The platform ID.
	PlatformID *string `json:"platformId,omitempty" tf:"platform_id,omitempty"`

	// (Boolean)
	Ready *bool `json:"ready,omitempty" tf:"ready,omitempty"`

	// (String) The ID of the instance to which the service instance refers.
	// The ID of the instance to which the service instance refers.
	ReferencedInstanceID *string `json:"referencedInstanceId,omitempty" tf:"referenced_instance_id,omitempty"`

	// (String) The ID of the service plan.
	// The ID of the service plan.
	ServiceplanID *string `json:"serviceplanId,omitempty" tf:"serviceplan_id,omitempty"`

	// (Boolean) The configuration parameter for service instance sharing. Ensure that the instance is created with a plan that supports instance sharing.
	// The configuration parameter for service instance sharing. Ensure that the instance is created with a plan that supports instance sharing.
	Shared *bool `json:"shared,omitempty" tf:"shared,omitempty"`

	// (String) The current state of the service instance.
	// The current state of the service instance.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The ID of the subaccount.
	// The ID of the subaccount.
	SubaccountID *string `json:"subaccountId,omitempty" tf:"subaccount_id,omitempty"`

	// (Boolean) Shows whether the resource can be used.
	// Shows whether the resource can be used.
	Usable *bool `json:"usable,omitempty" tf:"usable,omitempty"`
}

type SubaccountServiceInstanceParameters struct {

	// (Map of Set of String) The set of words or phrases assigned to the service instance.
	// The set of words or phrases assigned to the service instance.
	// +kubebuilder:validation:Optional
	Labels map[string][]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The name of the service instance.
	// The name of the service instance.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) The configuration parameters for the service instance.
	// The configuration parameters for the service instance.
	// +kubebuilder:validation:Optional
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// (String) The ID of the service plan.
	// The ID of the service plan.
	// +kubebuilder:validation:Optional
	ServiceplanID *string `json:"serviceplanId,omitempty" tf:"serviceplan_id,omitempty"`

	// (Boolean) The configuration parameter for service instance sharing. Ensure that the instance is created with a plan that supports instance sharing.
	// The configuration parameter for service instance sharing. Ensure that the instance is created with a plan that supports instance sharing.
	// +kubebuilder:validation:Optional
	Shared *bool `json:"shared,omitempty" tf:"shared,omitempty"`

	// (String) The ID of the subaccount.
	// The ID of the subaccount.
	// +kubebuilder:validation:Optional
	SubaccountID *string `json:"subaccountId,omitempty" tf:"subaccount_id,omitempty"`
}

// SubaccountServiceInstanceSpec defines the desired state of SubaccountServiceInstance
type SubaccountServiceInstanceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SubaccountServiceInstanceParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SubaccountServiceInstanceInitParameters `json:"initProvider,omitempty"`
}

// SubaccountServiceInstanceStatus defines the observed state of SubaccountServiceInstance.
type SubaccountServiceInstanceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SubaccountServiceInstanceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SubaccountServiceInstance is the Schema for the SubaccountServiceInstances API. Creates a service instance in a subaccount. Tip: You must be assigned to the admin or the service administrator role of the subaccount.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,account}
type SubaccountServiceInstance struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceplanId) || (has(self.initProvider) && has(self.initProvider.serviceplanId))",message="spec.forProvider.serviceplanId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subaccountId) || (has(self.initProvider) && has(self.initProvider.subaccountId))",message="spec.forProvider.subaccountId is a required parameter"
	Spec   SubaccountServiceInstanceSpec   `json:"spec"`
	Status SubaccountServiceInstanceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SubaccountServiceInstanceList contains a list of SubaccountServiceInstances
type SubaccountServiceInstanceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SubaccountServiceInstance `json:"items"`
}

// Repository type metadata.
var (
	SubaccountServiceInstance_Kind             = "SubaccountServiceInstance"
	SubaccountServiceInstance_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SubaccountServiceInstance_Kind}.String()
	SubaccountServiceInstance_KindAPIVersion   = SubaccountServiceInstance_Kind + "." + CRDGroupVersion.String()
	SubaccountServiceInstance_GroupVersionKind = CRDGroupVersion.WithKind(SubaccountServiceInstance_Kind)
)

func init() {
	SchemeBuilder.Register(&SubaccountServiceInstance{}, &SubaccountServiceInstanceList{})
}
