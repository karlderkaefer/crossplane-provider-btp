/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SubaccountServiceBindingInitParameters struct {

	// (Map of Set of String) The set of words or phrases assigned to the service binding.
	// The set of words or phrases assigned to the service binding.
	Labels map[string][]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The name of the service binding.
	// The name of the service binding.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The parameters of the service binding as a valid JSON object.
	// The parameters of the service binding as a valid JSON object.
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// (String) The ID of the service instance associated with the binding.
	// The ID of the service instance associated with the binding.
	ServiceInstanceID *string `json:"serviceInstanceId,omitempty" tf:"service_instance_id,omitempty"`

	// (String) The ID of the subaccount.
	// The ID of the subaccount.
	SubaccountID *string `json:"subaccountId,omitempty" tf:"subaccount_id,omitempty"`
}

type SubaccountServiceBindingObservation struct {

	// (Map of String) Contains the resources associated with the binding.
	// Contains the resources associated with the binding.
	// +mapType=granular
	BindResource map[string]*string `json:"bindResource,omitempty" tf:"bind_resource,omitempty"`

	// (String) The contextual data for the resource.
	// The contextual data for the resource.
	Context *string `json:"context,omitempty" tf:"context,omitempty"`

	// (String) The date and time when the resource was created in RFC3339 format.
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate *string `json:"createdDate,omitempty" tf:"created_date,omitempty"`

	// (String) The ID of the service binding.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Map of Set of String) The set of words or phrases assigned to the service binding.
	// The set of words or phrases assigned to the service binding.
	Labels map[string][]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The date and time when the resource was last modified in RFC3339 format.
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified *string `json:"lastModified,omitempty" tf:"last_modified,omitempty"`

	// (String) The name of the service binding.
	// The name of the service binding.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The parameters of the service binding as a valid JSON object.
	// The parameters of the service binding as a valid JSON object.
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// (Boolean) Shows whether the service binding is ready.
	// Shows whether the service binding is ready.
	Ready *bool `json:"ready,omitempty" tf:"ready,omitempty"`

	// (String) The ID of the service instance associated with the binding.
	// The ID of the service instance associated with the binding.
	ServiceInstanceID *string `json:"serviceInstanceId,omitempty" tf:"service_instance_id,omitempty"`

	// (String) The current state of the service binding. Possible values are:
	// The current state of the service binding. Possible values are:
	//
	// | state | description |
	// | --- | --- |
	// | `in progress` | The operation or processing is in progress |
	// | `failed` | The operation or processing failed |
	// | `succeeded` | The operation or processing succeeded |
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (String) The ID of the subaccount.
	// The ID of the subaccount.
	SubaccountID *string `json:"subaccountId,omitempty" tf:"subaccount_id,omitempty"`
}

type SubaccountServiceBindingParameters struct {

	// (Map of Set of String) The set of words or phrases assigned to the service binding.
	// The set of words or phrases assigned to the service binding.
	// +kubebuilder:validation:Optional
	Labels map[string][]*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// (String) The name of the service binding.
	// The name of the service binding.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The parameters of the service binding as a valid JSON object.
	// The parameters of the service binding as a valid JSON object.
	// +kubebuilder:validation:Optional
	Parameters *string `json:"parameters,omitempty" tf:"parameters,omitempty"`

	// (String) The ID of the service instance associated with the binding.
	// The ID of the service instance associated with the binding.
	// +kubebuilder:validation:Optional
	ServiceInstanceID *string `json:"serviceInstanceId,omitempty" tf:"service_instance_id,omitempty"`

	// (String) The ID of the subaccount.
	// The ID of the subaccount.
	// +kubebuilder:validation:Optional
	SubaccountID *string `json:"subaccountId,omitempty" tf:"subaccount_id,omitempty"`
}

// SubaccountServiceBindingSpec defines the desired state of SubaccountServiceBinding
type SubaccountServiceBindingSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SubaccountServiceBindingParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SubaccountServiceBindingInitParameters `json:"initProvider,omitempty"`
}

// SubaccountServiceBindingStatus defines the observed state of SubaccountServiceBinding.
type SubaccountServiceBindingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SubaccountServiceBindingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SubaccountServiceBinding is the Schema for the SubaccountServiceBindings API. Creates a service binding, i.e. generates access details to consume a service. Tip: You must be assigned to the admin or the service administrator role of the subaccount.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,account}
type SubaccountServiceBinding struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceInstanceId) || (has(self.initProvider) && has(self.initProvider.serviceInstanceId))",message="spec.forProvider.serviceInstanceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.subaccountId) || (has(self.initProvider) && has(self.initProvider.subaccountId))",message="spec.forProvider.subaccountId is a required parameter"
	Spec   SubaccountServiceBindingSpec   `json:"spec"`
	Status SubaccountServiceBindingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SubaccountServiceBindingList contains a list of SubaccountServiceBindings
type SubaccountServiceBindingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SubaccountServiceBinding `json:"items"`
}

// Repository type metadata.
var (
	SubaccountServiceBinding_Kind             = "SubaccountServiceBinding"
	SubaccountServiceBinding_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SubaccountServiceBinding_Kind}.String()
	SubaccountServiceBinding_KindAPIVersion   = SubaccountServiceBinding_Kind + "." + CRDGroupVersion.String()
	SubaccountServiceBinding_GroupVersionKind = CRDGroupVersion.WithKind(SubaccountServiceBinding_Kind)
)

func init() {
	SchemeBuilder.Register(&SubaccountServiceBinding{}, &SubaccountServiceBindingList{})
}
