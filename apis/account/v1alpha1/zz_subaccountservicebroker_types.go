/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SubaccountServiceBrokerInitParameters struct {

	// (String) The description of the service broker.
	// The description of the service broker.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The name of the service broker.
	// The name of the service broker.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The ID of the subaccount.
	// The ID of the subaccount.
	// +crossplane:generate:reference:type=github.com/sap/crossplane-provider-btp/apis/account/v1alpha1.Subaccount
	// +crossplane:generate:reference:extractor=github.com/crossplane/crossplane-runtime/pkg/reference.ExternalName()
	// +crossplane:generate:reference:refFieldName=SubaccountRef
	// +crossplane:generate:reference:selectorFieldName=SubaccountSelector
	SubaccountID *string `json:"subaccountId,omitempty" tf:"subaccount_id,omitempty"`

	// Reference to a Subaccount in account to populate subaccountId.
	// +kubebuilder:validation:Optional
	SubaccountRef *v1.Reference `json:"subaccountRef,omitempty" tf:"-"`

	// Selector for a Subaccount in account to populate subaccountId.
	// +kubebuilder:validation:Optional
	SubaccountSelector *v1.Selector `json:"subaccountSelector,omitempty" tf:"-"`

	// (String) The URL of the service broker.
	// The URL of the service broker.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// (String) The username for basic authentication against the service broker.
	// The username for basic authentication against the service broker.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type SubaccountServiceBrokerObservation struct {

	// (String) The date and time when the resource was created in RFC3339 format.
	// The date and time when the resource was created in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	CreatedDate *string `json:"createdDate,omitempty" tf:"created_date,omitempty"`

	// (String) The description of the service broker.
	// The description of the service broker.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The ID of the service broker.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The date and time when the resource was last modified in RFC3339 format.
	// The date and time when the resource was last modified in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) format.
	LastModified *string `json:"lastModified,omitempty" tf:"last_modified,omitempty"`

	// (String) The name of the service broker.
	// The name of the service broker.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Boolean) Shows whether the service broker is ready.
	// Shows whether the service broker is ready.
	Ready *bool `json:"ready,omitempty" tf:"ready,omitempty"`

	// (String) The ID of the subaccount.
	// The ID of the subaccount.
	SubaccountID *string `json:"subaccountId,omitempty" tf:"subaccount_id,omitempty"`

	// (String) The URL of the service broker.
	// The URL of the service broker.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// (String) The username for basic authentication against the service broker.
	// The username for basic authentication against the service broker.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type SubaccountServiceBrokerParameters struct {

	// (String) The description of the service broker.
	// The description of the service broker.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (String) The name of the service broker.
	// The name of the service broker.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String, Sensitive) The password for basic authentication against the service broker.
	// The password for basic authentication against the service broker.
	// +kubebuilder:validation:Optional
	PasswordSecretRef v1.SecretKeySelector `json:"passwordSecretRef" tf:"-"`

	// (String) The ID of the subaccount.
	// The ID of the subaccount.
	// +crossplane:generate:reference:type=github.com/sap/crossplane-provider-btp/apis/account/v1alpha1.Subaccount
	// +crossplane:generate:reference:extractor=github.com/crossplane/crossplane-runtime/pkg/reference.ExternalName()
	// +crossplane:generate:reference:refFieldName=SubaccountRef
	// +crossplane:generate:reference:selectorFieldName=SubaccountSelector
	// +kubebuilder:validation:Optional
	SubaccountID *string `json:"subaccountId,omitempty" tf:"subaccount_id,omitempty"`

	// Reference to a Subaccount in account to populate subaccountId.
	// +kubebuilder:validation:Optional
	SubaccountRef *v1.Reference `json:"subaccountRef,omitempty" tf:"-"`

	// Selector for a Subaccount in account to populate subaccountId.
	// +kubebuilder:validation:Optional
	SubaccountSelector *v1.Selector `json:"subaccountSelector,omitempty" tf:"-"`

	// (String) The URL of the service broker.
	// The URL of the service broker.
	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// (String) The username for basic authentication against the service broker.
	// The username for basic authentication against the service broker.
	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

// SubaccountServiceBrokerSpec defines the desired state of SubaccountServiceBroker
type SubaccountServiceBrokerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SubaccountServiceBrokerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SubaccountServiceBrokerInitParameters `json:"initProvider,omitempty"`
}

// SubaccountServiceBrokerStatus defines the observed state of SubaccountServiceBroker.
type SubaccountServiceBrokerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SubaccountServiceBrokerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SubaccountServiceBroker is the Schema for the SubaccountServiceBrokers API. Registers a service service broker in a subaccount. Tip: You must be assigned to the admin role of the subaccount.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,account}
type SubaccountServiceBroker struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.passwordSecretRef)",message="spec.forProvider.passwordSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.url) || (has(self.initProvider) && has(self.initProvider.url))",message="spec.forProvider.url is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.username) || (has(self.initProvider) && has(self.initProvider.username))",message="spec.forProvider.username is a required parameter"
	Spec   SubaccountServiceBrokerSpec   `json:"spec"`
	Status SubaccountServiceBrokerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SubaccountServiceBrokerList contains a list of SubaccountServiceBrokers
type SubaccountServiceBrokerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SubaccountServiceBroker `json:"items"`
}

// Repository type metadata.
var (
	SubaccountServiceBroker_Kind             = "SubaccountServiceBroker"
	SubaccountServiceBroker_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SubaccountServiceBroker_Kind}.String()
	SubaccountServiceBroker_KindAPIVersion   = SubaccountServiceBroker_Kind + "." + CRDGroupVersion.String()
	SubaccountServiceBroker_GroupVersionKind = CRDGroupVersion.WithKind(SubaccountServiceBroker_Kind)
)

func init() {
	SchemeBuilder.Register(&SubaccountServiceBroker{}, &SubaccountServiceBrokerList{})
}
