//go:build !ignore_autogenerated

/*
Copyright 2022 The Crossplane Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Assignable) DeepCopyInto(out *Assignable) {
	*out = *in
	if in.Amount != nil {
		in, out := &in.Amount, &out.Amount
		*out = new(int)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*Resource, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Resource)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Assignable.
func (in *Assignable) DeepCopy() *Assignable {
	if in == nil {
		return nil
	}
	out := new(Assignable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Binding) DeepCopyInto(out *Binding) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Ready != nil {
		in, out := &in.Ready, &out.Ready
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServiceInstanceId != nil {
		in, out := &in.ServiceInstanceId, &out.ServiceInstanceId
		*out = new(string)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.BindResource != nil {
		in, out := &in.BindResource, &out.BindResource
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string][]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string][]string, len(*in))
			for key, val := range *in {
				var outVal []string
				if val == nil {
					(*out)[key] = nil
				} else {
					inVal := (*in)[key]
					in, out := &inVal, &outVal
					*out = make([]string, len(*in))
					copy(*out, *in)
				}
				(*out)[key] = outVal
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Binding.
func (in *Binding) DeepCopy() *Binding {
	if in == nil {
		return nil
	}
	out := new(Binding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudManagement) DeepCopyInto(out *CloudManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudManagement.
func (in *CloudManagement) DeepCopy() *CloudManagement {
	if in == nil {
		return nil
	}
	out := new(CloudManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudManagementDataSourceLookup) DeepCopyInto(out *CloudManagementDataSourceLookup) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudManagementDataSourceLookup.
func (in *CloudManagementDataSourceLookup) DeepCopy() *CloudManagementDataSourceLookup {
	if in == nil {
		return nil
	}
	out := new(CloudManagementDataSourceLookup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudManagementList) DeepCopyInto(out *CloudManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CloudManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudManagementList.
func (in *CloudManagementList) DeepCopy() *CloudManagementList {
	if in == nil {
		return nil
	}
	out := new(CloudManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CloudManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudManagementObservation) DeepCopyInto(out *CloudManagementObservation) {
	*out = *in
	if in.Instance != nil {
		in, out := &in.Instance, &out.Instance
		*out = new(Instance)
		(*in).DeepCopyInto(*out)
	}
	if in.Binding != nil {
		in, out := &in.Binding, &out.Binding
		*out = new(Binding)
		(*in).DeepCopyInto(*out)
	}
	if in.DataSourceLookup != nil {
		in, out := &in.DataSourceLookup, &out.DataSourceLookup
		*out = new(CloudManagementDataSourceLookup)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudManagementObservation.
func (in *CloudManagementObservation) DeepCopy() *CloudManagementObservation {
	if in == nil {
		return nil
	}
	out := new(CloudManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudManagementParameters) DeepCopyInto(out *CloudManagementParameters) {
	*out = *in
	if in.SubaccountSelector != nil {
		in, out := &in.SubaccountSelector, &out.SubaccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubaccountRef != nil {
		in, out := &in.SubaccountRef, &out.SubaccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceManagerSelector != nil {
		in, out := &in.ServiceManagerSelector, &out.ServiceManagerSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceManagerRef != nil {
		in, out := &in.ServiceManagerRef, &out.ServiceManagerRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudManagementParameters.
func (in *CloudManagementParameters) DeepCopy() *CloudManagementParameters {
	if in == nil {
		return nil
	}
	out := new(CloudManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudManagementSpec) DeepCopyInto(out *CloudManagementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudManagementSpec.
func (in *CloudManagementSpec) DeepCopy() *CloudManagementSpec {
	if in == nil {
		return nil
	}
	out := new(CloudManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CloudManagementStatus) DeepCopyInto(out *CloudManagementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CloudManagementStatus.
func (in *CloudManagementStatus) DeepCopy() *CloudManagementStatus {
	if in == nil {
		return nil
	}
	out := new(CloudManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Directory) DeepCopyInto(out *Directory) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Directory.
func (in *Directory) DeepCopy() *Directory {
	if in == nil {
		return nil
	}
	out := new(Directory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Directory) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryEntitlement) DeepCopyInto(out *DirectoryEntitlement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryEntitlement.
func (in *DirectoryEntitlement) DeepCopy() *DirectoryEntitlement {
	if in == nil {
		return nil
	}
	out := new(DirectoryEntitlement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DirectoryEntitlement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryEntitlementInitParameters) DeepCopyInto(out *DirectoryEntitlementInitParameters) {
	*out = *in
	if in.Amount != nil {
		in, out := &in.Amount, &out.Amount
		*out = new(float64)
		**out = **in
	}
	if in.AutoAssign != nil {
		in, out := &in.AutoAssign, &out.AutoAssign
		*out = new(bool)
		**out = **in
	}
	if in.AutoDistributeAmount != nil {
		in, out := &in.AutoDistributeAmount, &out.AutoDistributeAmount
		*out = new(float64)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryRef != nil {
		in, out := &in.DirectoryRef, &out.DirectoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectorySelector != nil {
		in, out := &in.DirectorySelector, &out.DirectorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Distribute != nil {
		in, out := &in.Distribute, &out.Distribute
		*out = new(bool)
		**out = **in
	}
	if in.PlanName != nil {
		in, out := &in.PlanName, &out.PlanName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryEntitlementInitParameters.
func (in *DirectoryEntitlementInitParameters) DeepCopy() *DirectoryEntitlementInitParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryEntitlementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryEntitlementList) DeepCopyInto(out *DirectoryEntitlementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DirectoryEntitlement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryEntitlementList.
func (in *DirectoryEntitlementList) DeepCopy() *DirectoryEntitlementList {
	if in == nil {
		return nil
	}
	out := new(DirectoryEntitlementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DirectoryEntitlementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryEntitlementObservation) DeepCopyInto(out *DirectoryEntitlementObservation) {
	*out = *in
	if in.Amount != nil {
		in, out := &in.Amount, &out.Amount
		*out = new(float64)
		**out = **in
	}
	if in.AutoAssign != nil {
		in, out := &in.AutoAssign, &out.AutoAssign
		*out = new(bool)
		**out = **in
	}
	if in.AutoDistributeAmount != nil {
		in, out := &in.AutoDistributeAmount, &out.AutoDistributeAmount
		*out = new(float64)
		**out = **in
	}
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
	if in.Distribute != nil {
		in, out := &in.Distribute, &out.Distribute
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PlanID != nil {
		in, out := &in.PlanID, &out.PlanID
		*out = new(string)
		**out = **in
	}
	if in.PlanName != nil {
		in, out := &in.PlanName, &out.PlanName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryEntitlementObservation.
func (in *DirectoryEntitlementObservation) DeepCopy() *DirectoryEntitlementObservation {
	if in == nil {
		return nil
	}
	out := new(DirectoryEntitlementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryEntitlementParameters) DeepCopyInto(out *DirectoryEntitlementParameters) {
	*out = *in
	if in.Amount != nil {
		in, out := &in.Amount, &out.Amount
		*out = new(float64)
		**out = **in
	}
	if in.AutoAssign != nil {
		in, out := &in.AutoAssign, &out.AutoAssign
		*out = new(bool)
		**out = **in
	}
	if in.AutoDistributeAmount != nil {
		in, out := &in.AutoDistributeAmount, &out.AutoDistributeAmount
		*out = new(float64)
		**out = **in
	}
	if in.DirectoryID != nil {
		in, out := &in.DirectoryID, &out.DirectoryID
		*out = new(string)
		**out = **in
	}
	if in.DirectoryRef != nil {
		in, out := &in.DirectoryRef, &out.DirectoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectorySelector != nil {
		in, out := &in.DirectorySelector, &out.DirectorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Distribute != nil {
		in, out := &in.Distribute, &out.Distribute
		*out = new(bool)
		**out = **in
	}
	if in.PlanName != nil {
		in, out := &in.PlanName, &out.PlanName
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryEntitlementParameters.
func (in *DirectoryEntitlementParameters) DeepCopy() *DirectoryEntitlementParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryEntitlementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryEntitlementSpec) DeepCopyInto(out *DirectoryEntitlementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryEntitlementSpec.
func (in *DirectoryEntitlementSpec) DeepCopy() *DirectoryEntitlementSpec {
	if in == nil {
		return nil
	}
	out := new(DirectoryEntitlementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryEntitlementStatus) DeepCopyInto(out *DirectoryEntitlementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryEntitlementStatus.
func (in *DirectoryEntitlementStatus) DeepCopy() *DirectoryEntitlementStatus {
	if in == nil {
		return nil
	}
	out := new(DirectoryEntitlementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryList) DeepCopyInto(out *DirectoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Directory, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryList.
func (in *DirectoryList) DeepCopy() *DirectoryList {
	if in == nil {
		return nil
	}
	out := new(DirectoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DirectoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryObservation) DeepCopyInto(out *DirectoryObservation) {
	*out = *in
	if in.Guid != nil {
		in, out := &in.Guid, &out.Guid
		*out = new(string)
		**out = **in
	}
	if in.EntityState != nil {
		in, out := &in.EntityState, &out.EntityState
		*out = new(string)
		**out = **in
	}
	if in.StateMessage != nil {
		in, out := &in.StateMessage, &out.StateMessage
		*out = new(string)
		**out = **in
	}
	if in.Subdomain != nil {
		in, out := &in.Subdomain, &out.Subdomain
		*out = new(string)
		**out = **in
	}
	if in.DirectoryFeatures != nil {
		in, out := &in.DirectoryFeatures, &out.DirectoryFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryObservation.
func (in *DirectoryObservation) DeepCopy() *DirectoryObservation {
	if in == nil {
		return nil
	}
	out := new(DirectoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryParameters) DeepCopyInto(out *DirectoryParameters) {
	*out = *in
	if in.DirectoryAdmins != nil {
		in, out := &in.DirectoryAdmins, &out.DirectoryAdmins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DirectoryFeatures != nil {
		in, out := &in.DirectoryFeatures, &out.DirectoryFeatures
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.Subdomain != nil {
		in, out := &in.Subdomain, &out.Subdomain
		*out = new(string)
		**out = **in
	}
	if in.DirectorySelector != nil {
		in, out := &in.DirectorySelector, &out.DirectorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryRef != nil {
		in, out := &in.DirectoryRef, &out.DirectoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryParameters.
func (in *DirectoryParameters) DeepCopy() *DirectoryParameters {
	if in == nil {
		return nil
	}
	out := new(DirectoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectorySpec) DeepCopyInto(out *DirectorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectorySpec.
func (in *DirectorySpec) DeepCopy() *DirectorySpec {
	if in == nil {
		return nil
	}
	out := new(DirectorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DirectoryStatus) DeepCopyInto(out *DirectoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DirectoryStatus.
func (in *DirectoryStatus) DeepCopy() *DirectoryStatus {
	if in == nil {
		return nil
	}
	out := new(DirectoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Entitled) DeepCopyInto(out *Entitled) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*Resource, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Resource)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Entitled.
func (in *Entitled) DeepCopy() *Entitled {
	if in == nil {
		return nil
	}
	out := new(Entitled)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Entitlement) DeepCopyInto(out *Entitlement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Entitlement.
func (in *Entitlement) DeepCopy() *Entitlement {
	if in == nil {
		return nil
	}
	out := new(Entitlement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Entitlement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementList) DeepCopyInto(out *EntitlementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Entitlement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementList.
func (in *EntitlementList) DeepCopy() *EntitlementList {
	if in == nil {
		return nil
	}
	out := new(EntitlementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EntitlementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementObservation) DeepCopyInto(out *EntitlementObservation) {
	*out = *in
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(EntitlementSummary)
		(*in).DeepCopyInto(*out)
	}
	if in.Assigned != nil {
		in, out := &in.Assigned, &out.Assigned
		*out = new(Assignable)
		(*in).DeepCopyInto(*out)
	}
	in.Entitled.DeepCopyInto(&out.Entitled)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementObservation.
func (in *EntitlementObservation) DeepCopy() *EntitlementObservation {
	if in == nil {
		return nil
	}
	out := new(EntitlementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementParameters) DeepCopyInto(out *EntitlementParameters) {
	*out = *in
	if in.ServicePlanUniqueIdentifier != nil {
		in, out := &in.ServicePlanUniqueIdentifier, &out.ServicePlanUniqueIdentifier
		*out = new(string)
		**out = **in
	}
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Amount != nil {
		in, out := &in.Amount, &out.Amount
		*out = new(int)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*Resource, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Resource)
				**out = **in
			}
		}
	}
	if in.SubaccountSelector != nil {
		in, out := &in.SubaccountSelector, &out.SubaccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubaccountRef != nil {
		in, out := &in.SubaccountRef, &out.SubaccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementParameters.
func (in *EntitlementParameters) DeepCopy() *EntitlementParameters {
	if in == nil {
		return nil
	}
	out := new(EntitlementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementSpec) DeepCopyInto(out *EntitlementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementSpec.
func (in *EntitlementSpec) DeepCopy() *EntitlementSpec {
	if in == nil {
		return nil
	}
	out := new(EntitlementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementStatus) DeepCopyInto(out *EntitlementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	if in.AtProvider != nil {
		in, out := &in.AtProvider, &out.AtProvider
		*out = new(EntitlementObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementStatus.
func (in *EntitlementStatus) DeepCopy() *EntitlementStatus {
	if in == nil {
		return nil
	}
	out := new(EntitlementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EntitlementSummary) DeepCopyInto(out *EntitlementSummary) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.Amount != nil {
		in, out := &in.Amount, &out.Amount
		*out = new(int)
		**out = **in
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*Resource, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Resource)
				**out = **in
			}
		}
	}
	if in.EntitlementsCount != nil {
		in, out := &in.EntitlementsCount, &out.EntitlementsCount
		*out = new(int)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EntitlementSummary.
func (in *EntitlementSummary) DeepCopy() *EntitlementSummary {
	if in == nil {
		return nil
	}
	out := new(EntitlementSummary)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAccount) DeepCopyInto(out *GlobalAccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAccount.
func (in *GlobalAccount) DeepCopy() *GlobalAccount {
	if in == nil {
		return nil
	}
	out := new(GlobalAccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalAccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAccountList) DeepCopyInto(out *GlobalAccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalAccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAccountList.
func (in *GlobalAccountList) DeepCopy() *GlobalAccountList {
	if in == nil {
		return nil
	}
	out := new(GlobalAccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalAccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAccountObservation) DeepCopyInto(out *GlobalAccountObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAccountObservation.
func (in *GlobalAccountObservation) DeepCopy() *GlobalAccountObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalAccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAccountParameters) DeepCopyInto(out *GlobalAccountParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAccountParameters.
func (in *GlobalAccountParameters) DeepCopy() *GlobalAccountParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalAccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAccountSpec) DeepCopyInto(out *GlobalAccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	out.ForProvider = in.ForProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAccountSpec.
func (in *GlobalAccountSpec) DeepCopy() *GlobalAccountSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalAccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalAccountStatus) DeepCopyInto(out *GlobalAccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalAccountStatus.
func (in *GlobalAccountStatus) DeepCopy() *GlobalAccountStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalAccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
	if in.Ready != nil {
		in, out := &in.Ready, &out.Ready
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ServicePlanId != nil {
		in, out := &in.ServicePlanId, &out.ServicePlanId
		*out = new(string)
		**out = **in
	}
	if in.PlatformId != nil {
		in, out := &in.PlatformId, &out.PlatformId
		*out = new(string)
		**out = **in
	}
	if in.DashboardUrl != nil {
		in, out := &in.DashboardUrl, &out.DashboardUrl
		*out = new(string)
		**out = **in
	}
	if in.ReferencedInstanceId != nil {
		in, out := &in.ReferencedInstanceId, &out.ReferencedInstanceId
		*out = new(string)
		**out = **in
	}
	if in.Shared != nil {
		in, out := &in.Shared, &out.Shared
		*out = new(bool)
		**out = **in
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.MaintenanceInfo != nil {
		in, out := &in.MaintenanceInfo, &out.MaintenanceInfo
		*out = new(map[string]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]string, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	if in.Usable != nil {
		in, out := &in.Usable, &out.Usable
		*out = new(bool)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string][]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string][]string, len(*in))
			for key, val := range *in {
				var outVal []string
				if val == nil {
					(*out)[key] = nil
				} else {
					inVal := (*in)[key]
					in, out := &inVal, &outVal
					*out = make([]string, len(*in))
					copy(*out, *in)
				}
				(*out)[key] = outVal
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Resource) DeepCopyInto(out *Resource) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Resource.
func (in *Resource) DeepCopy() *Resource {
	if in == nil {
		return nil
	}
	out := new(Resource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceManager) DeepCopyInto(out *ServiceManager) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceManager.
func (in *ServiceManager) DeepCopy() *ServiceManager {
	if in == nil {
		return nil
	}
	out := new(ServiceManager)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceManager) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceManagerList) DeepCopyInto(out *ServiceManagerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceManager, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceManagerList.
func (in *ServiceManagerList) DeepCopy() *ServiceManagerList {
	if in == nil {
		return nil
	}
	out := new(ServiceManagerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceManagerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceManagerObservation) DeepCopyInto(out *ServiceManagerObservation) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceManagerObservation.
func (in *ServiceManagerObservation) DeepCopy() *ServiceManagerObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceManagerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceManagerParameters) DeepCopyInto(out *ServiceManagerParameters) {
	*out = *in
	if in.SubaccountSelector != nil {
		in, out := &in.SubaccountSelector, &out.SubaccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SubaccountRef != nil {
		in, out := &in.SubaccountRef, &out.SubaccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceManagerParameters.
func (in *ServiceManagerParameters) DeepCopy() *ServiceManagerParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceManagerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceManagerSpec) DeepCopyInto(out *ServiceManagerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceManagerSpec.
func (in *ServiceManagerSpec) DeepCopy() *ServiceManagerSpec {
	if in == nil {
		return nil
	}
	out := new(ServiceManagerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceManagerStatus) DeepCopyInto(out *ServiceManagerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	out.AtProvider = in.AtProvider
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceManagerStatus.
func (in *ServiceManagerStatus) DeepCopy() *ServiceManagerStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceManagerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subaccount) DeepCopyInto(out *Subaccount) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subaccount.
func (in *Subaccount) DeepCopy() *Subaccount {
	if in == nil {
		return nil
	}
	out := new(Subaccount)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subaccount) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountList) DeepCopyInto(out *SubaccountList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subaccount, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountList.
func (in *SubaccountList) DeepCopy() *SubaccountList {
	if in == nil {
		return nil
	}
	out := new(SubaccountList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubaccountList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountObservation) DeepCopyInto(out *SubaccountObservation) {
	*out = *in
	if in.SubaccountGuid != nil {
		in, out := &in.SubaccountGuid, &out.SubaccountGuid
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusMessage != nil {
		in, out := &in.StatusMessage, &out.StatusMessage
		*out = new(string)
		**out = **in
	}
	if in.BetaEnabled != nil {
		in, out := &in.BetaEnabled, &out.BetaEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = new(map[string][]string)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string][]string, len(*in))
			for key, val := range *in {
				var outVal []string
				if val == nil {
					(*out)[key] = nil
				} else {
					inVal := (*in)[key]
					in, out := &inVal, &outVal
					*out = make([]string, len(*in))
					copy(*out, *in)
				}
				(*out)[key] = outVal
			}
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubaccountAdmins != nil {
		in, out := &in.SubaccountAdmins, &out.SubaccountAdmins
		*out = new([]string)
		if **in != nil {
			in, out := *in, *out
			*out = make([]string, len(*in))
			copy(*out, *in)
		}
	}
	if in.Subdomain != nil {
		in, out := &in.Subdomain, &out.Subdomain
		*out = new(string)
		**out = **in
	}
	if in.UsedForProduction != nil {
		in, out := &in.UsedForProduction, &out.UsedForProduction
		*out = new(string)
		**out = **in
	}
	if in.ParentGuid != nil {
		in, out := &in.ParentGuid, &out.ParentGuid
		*out = new(string)
		**out = **in
	}
	if in.GlobalAccountGUID != nil {
		in, out := &in.GlobalAccountGUID, &out.GlobalAccountGUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountObservation.
func (in *SubaccountObservation) DeepCopy() *SubaccountObservation {
	if in == nil {
		return nil
	}
	out := new(SubaccountObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountParameters) DeepCopyInto(out *SubaccountParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.SubaccountAdmins != nil {
		in, out := &in.SubaccountAdmins, &out.SubaccountAdmins
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.GlobalAccountSelector != nil {
		in, out := &in.GlobalAccountSelector, &out.GlobalAccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GlobalAccountRef != nil {
		in, out := &in.GlobalAccountRef, &out.GlobalAccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectorySelector != nil {
		in, out := &in.DirectorySelector, &out.DirectorySelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.DirectoryRef != nil {
		in, out := &in.DirectoryRef, &out.DirectoryRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountParameters.
func (in *SubaccountParameters) DeepCopy() *SubaccountParameters {
	if in == nil {
		return nil
	}
	out := new(SubaccountParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBinding) DeepCopyInto(out *SubaccountServiceBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBinding.
func (in *SubaccountServiceBinding) DeepCopy() *SubaccountServiceBinding {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubaccountServiceBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBindingInitParameters) DeepCopyInto(out *SubaccountServiceBindingInitParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string][]*string, len(*in))
		for key, val := range *in {
			var outVal []*string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]*string, len(*in))
				for i := range *in {
					if (*in)[i] != nil {
						in, out := &(*in)[i], &(*out)[i]
						*out = new(string)
						**out = **in
					}
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.ServiceInstanceID != nil {
		in, out := &in.ServiceInstanceID, &out.ServiceInstanceID
		*out = new(string)
		**out = **in
	}
	if in.SubaccountID != nil {
		in, out := &in.SubaccountID, &out.SubaccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBindingInitParameters.
func (in *SubaccountServiceBindingInitParameters) DeepCopy() *SubaccountServiceBindingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBindingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBindingList) DeepCopyInto(out *SubaccountServiceBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubaccountServiceBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBindingList.
func (in *SubaccountServiceBindingList) DeepCopy() *SubaccountServiceBindingList {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubaccountServiceBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBindingObservation) DeepCopyInto(out *SubaccountServiceBindingObservation) {
	*out = *in
	if in.BindResource != nil {
		in, out := &in.BindResource, &out.BindResource
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string][]*string, len(*in))
		for key, val := range *in {
			var outVal []*string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]*string, len(*in))
				for i := range *in {
					if (*in)[i] != nil {
						in, out := &(*in)[i], &(*out)[i]
						*out = new(string)
						**out = **in
					}
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.Ready != nil {
		in, out := &in.Ready, &out.Ready
		*out = new(bool)
		**out = **in
	}
	if in.ServiceInstanceID != nil {
		in, out := &in.ServiceInstanceID, &out.ServiceInstanceID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubaccountID != nil {
		in, out := &in.SubaccountID, &out.SubaccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBindingObservation.
func (in *SubaccountServiceBindingObservation) DeepCopy() *SubaccountServiceBindingObservation {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBindingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBindingParameters) DeepCopyInto(out *SubaccountServiceBindingParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string][]*string, len(*in))
		for key, val := range *in {
			var outVal []*string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]*string, len(*in))
				for i := range *in {
					if (*in)[i] != nil {
						in, out := &(*in)[i], &(*out)[i]
						*out = new(string)
						**out = **in
					}
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.ServiceInstanceID != nil {
		in, out := &in.ServiceInstanceID, &out.ServiceInstanceID
		*out = new(string)
		**out = **in
	}
	if in.SubaccountID != nil {
		in, out := &in.SubaccountID, &out.SubaccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBindingParameters.
func (in *SubaccountServiceBindingParameters) DeepCopy() *SubaccountServiceBindingParameters {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBindingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBindingSpec) DeepCopyInto(out *SubaccountServiceBindingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBindingSpec.
func (in *SubaccountServiceBindingSpec) DeepCopy() *SubaccountServiceBindingSpec {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBindingStatus) DeepCopyInto(out *SubaccountServiceBindingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBindingStatus.
func (in *SubaccountServiceBindingStatus) DeepCopy() *SubaccountServiceBindingStatus {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBroker) DeepCopyInto(out *SubaccountServiceBroker) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBroker.
func (in *SubaccountServiceBroker) DeepCopy() *SubaccountServiceBroker {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBroker)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubaccountServiceBroker) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBrokerInitParameters) DeepCopyInto(out *SubaccountServiceBrokerInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SubaccountID != nil {
		in, out := &in.SubaccountID, &out.SubaccountID
		*out = new(string)
		**out = **in
	}
	if in.SubaccountRef != nil {
		in, out := &in.SubaccountRef, &out.SubaccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubaccountSelector != nil {
		in, out := &in.SubaccountSelector, &out.SubaccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBrokerInitParameters.
func (in *SubaccountServiceBrokerInitParameters) DeepCopy() *SubaccountServiceBrokerInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBrokerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBrokerList) DeepCopyInto(out *SubaccountServiceBrokerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubaccountServiceBroker, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBrokerList.
func (in *SubaccountServiceBrokerList) DeepCopy() *SubaccountServiceBrokerList {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBrokerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubaccountServiceBrokerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBrokerObservation) DeepCopyInto(out *SubaccountServiceBrokerObservation) {
	*out = *in
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ready != nil {
		in, out := &in.Ready, &out.Ready
		*out = new(bool)
		**out = **in
	}
	if in.SubaccountID != nil {
		in, out := &in.SubaccountID, &out.SubaccountID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBrokerObservation.
func (in *SubaccountServiceBrokerObservation) DeepCopy() *SubaccountServiceBrokerObservation {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBrokerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBrokerParameters) DeepCopyInto(out *SubaccountServiceBrokerParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PasswordSecretRef = in.PasswordSecretRef
	if in.SubaccountID != nil {
		in, out := &in.SubaccountID, &out.SubaccountID
		*out = new(string)
		**out = **in
	}
	if in.SubaccountRef != nil {
		in, out := &in.SubaccountRef, &out.SubaccountRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubaccountSelector != nil {
		in, out := &in.SubaccountSelector, &out.SubaccountSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBrokerParameters.
func (in *SubaccountServiceBrokerParameters) DeepCopy() *SubaccountServiceBrokerParameters {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBrokerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBrokerSpec) DeepCopyInto(out *SubaccountServiceBrokerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBrokerSpec.
func (in *SubaccountServiceBrokerSpec) DeepCopy() *SubaccountServiceBrokerSpec {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBrokerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceBrokerStatus) DeepCopyInto(out *SubaccountServiceBrokerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceBrokerStatus.
func (in *SubaccountServiceBrokerStatus) DeepCopy() *SubaccountServiceBrokerStatus {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceBrokerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceInstance) DeepCopyInto(out *SubaccountServiceInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceInstance.
func (in *SubaccountServiceInstance) DeepCopy() *SubaccountServiceInstance {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubaccountServiceInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceInstanceInitParameters) DeepCopyInto(out *SubaccountServiceInstanceInitParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string][]*string, len(*in))
		for key, val := range *in {
			var outVal []*string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]*string, len(*in))
				for i := range *in {
					if (*in)[i] != nil {
						in, out := &(*in)[i], &(*out)[i]
						*out = new(string)
						**out = **in
					}
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.ServiceplanID != nil {
		in, out := &in.ServiceplanID, &out.ServiceplanID
		*out = new(string)
		**out = **in
	}
	if in.Shared != nil {
		in, out := &in.Shared, &out.Shared
		*out = new(bool)
		**out = **in
	}
	if in.SubaccountID != nil {
		in, out := &in.SubaccountID, &out.SubaccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceInstanceInitParameters.
func (in *SubaccountServiceInstanceInitParameters) DeepCopy() *SubaccountServiceInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceInstanceList) DeepCopyInto(out *SubaccountServiceInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SubaccountServiceInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceInstanceList.
func (in *SubaccountServiceInstanceList) DeepCopy() *SubaccountServiceInstanceList {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubaccountServiceInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceInstanceObservation) DeepCopyInto(out *SubaccountServiceInstanceObservation) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = new(string)
		**out = **in
	}
	if in.DashboardURL != nil {
		in, out := &in.DashboardURL, &out.DashboardURL
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string][]*string, len(*in))
		for key, val := range *in {
			var outVal []*string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]*string, len(*in))
				for i := range *in {
					if (*in)[i] != nil {
						in, out := &(*in)[i], &(*out)[i]
						*out = new(string)
						**out = **in
					}
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.PlatformID != nil {
		in, out := &in.PlatformID, &out.PlatformID
		*out = new(string)
		**out = **in
	}
	if in.Ready != nil {
		in, out := &in.Ready, &out.Ready
		*out = new(bool)
		**out = **in
	}
	if in.ReferencedInstanceID != nil {
		in, out := &in.ReferencedInstanceID, &out.ReferencedInstanceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceplanID != nil {
		in, out := &in.ServiceplanID, &out.ServiceplanID
		*out = new(string)
		**out = **in
	}
	if in.Shared != nil {
		in, out := &in.Shared, &out.Shared
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubaccountID != nil {
		in, out := &in.SubaccountID, &out.SubaccountID
		*out = new(string)
		**out = **in
	}
	if in.Usable != nil {
		in, out := &in.Usable, &out.Usable
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceInstanceObservation.
func (in *SubaccountServiceInstanceObservation) DeepCopy() *SubaccountServiceInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceInstanceParameters) DeepCopyInto(out *SubaccountServiceInstanceParameters) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string][]*string, len(*in))
		for key, val := range *in {
			var outVal []*string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make([]*string, len(*in))
				for i := range *in {
					if (*in)[i] != nil {
						in, out := &(*in)[i], &(*out)[i]
						*out = new(string)
						**out = **in
					}
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = new(string)
		**out = **in
	}
	if in.ServiceplanID != nil {
		in, out := &in.ServiceplanID, &out.ServiceplanID
		*out = new(string)
		**out = **in
	}
	if in.Shared != nil {
		in, out := &in.Shared, &out.Shared
		*out = new(bool)
		**out = **in
	}
	if in.SubaccountID != nil {
		in, out := &in.SubaccountID, &out.SubaccountID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceInstanceParameters.
func (in *SubaccountServiceInstanceParameters) DeepCopy() *SubaccountServiceInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceInstanceSpec) DeepCopyInto(out *SubaccountServiceInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceInstanceSpec.
func (in *SubaccountServiceInstanceSpec) DeepCopy() *SubaccountServiceInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountServiceInstanceStatus) DeepCopyInto(out *SubaccountServiceInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountServiceInstanceStatus.
func (in *SubaccountServiceInstanceStatus) DeepCopy() *SubaccountServiceInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(SubaccountServiceInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountSpec) DeepCopyInto(out *SubaccountSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountSpec.
func (in *SubaccountSpec) DeepCopy() *SubaccountSpec {
	if in == nil {
		return nil
	}
	out := new(SubaccountSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubaccountStatus) DeepCopyInto(out *SubaccountStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubaccountStatus.
func (in *SubaccountStatus) DeepCopy() *SubaccountStatus {
	if in == nil {
		return nil
	}
	out := new(SubaccountStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subscription) DeepCopyInto(out *Subscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subscription.
func (in *Subscription) DeepCopy() *Subscription {
	if in == nil {
		return nil
	}
	out := new(Subscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionList) DeepCopyInto(out *SubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionList.
func (in *SubscriptionList) DeepCopy() *SubscriptionList {
	if in == nil {
		return nil
	}
	out := new(SubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionObservation) DeepCopyInto(out *SubscriptionObservation) {
	*out = *in
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionObservation.
func (in *SubscriptionObservation) DeepCopy() *SubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(SubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionParameters) DeepCopyInto(out *SubscriptionParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionParameters.
func (in *SubscriptionParameters) DeepCopy() *SubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionSpec) DeepCopyInto(out *SubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	out.ForProvider = in.ForProvider
	if in.CloudManagementSelector != nil {
		in, out := &in.CloudManagementSelector, &out.CloudManagementSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.CloudManagementRef != nil {
		in, out := &in.CloudManagementRef, &out.CloudManagementRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionSpec.
func (in *SubscriptionSpec) DeepCopy() *SubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(SubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionStatus) DeepCopyInto(out *SubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionStatus.
func (in *SubscriptionStatus) DeepCopy() *SubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(SubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}
