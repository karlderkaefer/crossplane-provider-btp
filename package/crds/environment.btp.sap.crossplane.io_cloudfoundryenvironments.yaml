---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: cloudfoundryenvironments.environment.btp.sap.crossplane.io
spec:
  group: environment.btp.sap.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - sap
    kind: CloudFoundryEnvironment
    listKind: CloudFoundryEnvironmentList
    plural: cloudfoundryenvironments
    singular: cloudfoundryenvironment
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: A CloudFoundryEnvironment is a managed resource that represents
          a Cloud Foundry environment in the SAP Business Technology Platform
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: A CfEnvironmentSpec defines the desired state of a CloudFoundryEnvironment.
            properties:
              cloudManagementRef:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              cloudManagementSecretNamespace:
                type: string
              cloudManagementSelector:
                description: A Selector selects an object.
                properties:
                  matchControllerRef:
                    description: |-
                      MatchControllerRef ensures an object with the same controller reference
                      as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                  policy:
                    description: Policies for selection.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                type: object
              cloudManagementSubaccountGuid:
                type: string
              cloudManagemxentSecret:
                type: string
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                description: CfEnvironmentParameters are the configurable fields of
                  a CloudFoundryEnvironment.
                properties:
                  initialOrgManagers:
                    description: A list of users (with username/email and origin)
                      to assign as the Org Manager role
                    items:
                      type: string
                    type: array
                  landscape:
                    description: |-
                      Landscape, region of the cloud foundry org, e.g. cf-eu12
                      must be set, when cloud foundry name is set
                    minLength: 1
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              subaccountGuid:
                type: string
              subaccountRef:
                description: A Reference to a named object.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              subaccountSelector:
                description: A Selector selects an object.
                properties:
                  matchControllerRef:
                    description: |-
                      MatchControllerRef ensures an object with the same controller reference
                      as the selecting object is selected.
                    type: boolean
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels ensures an object with matching labels
                      is selected.
                    type: object
                  policy:
                    description: Policies for selection.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: A EnvironmentStatus represents the observed state of a CloudFoundryEnvironment.
            properties:
              atProvider:
                description: CfEnvironmentObservation  are the observable fields of
                  a CloudFoundryEnvironment.
                properties:
                  brokerId:
                    description: The ID of the associated environment broker.
                    type: string
                  commercialType:
                    description: The commercial type of the environment broker.
                    type: string
                  createdDate:
                    description: The date the environment instance was created. Dates
                      and times are in UTC format.
                    type: string
                  customLabels:
                    additionalProperties:
                      items:
                        type: string
                      type: array
                    description: |-
                      Custom labels that are defined by a user and assigned as key-value pairs in a JSON array to the environment instance.
                      Example:
                      {
                        "Cost Center": ["19700626"],
                        "Department": ["Sales"],
                        "Contacts": ["name1@example.com","name2@example.com"],
                        "EMEA":[]
                      }
                      NOTE: Custom labels apply only to SAP BTP. They are not the same labels that might be defined by your environment broker (see "labels" field).
                    type: object
                  dashboardUrl:
                    description: The URL of the service dashboard, which is a web-based
                      management user interface for the service instances.
                    type: string
                  description:
                    description: The description of the environment instance.
                    type: string
                  environmentType:
                    description: |-
                      Type of the environment instance that is used.
                      Example: cloudfoundry
                      Enum: [cloudfoundry kubernetes neo]
                    type: string
                  globalAccountGUID:
                    description: The GUID of the global account that is associated
                      with the environment instance.
                    type: string
                  id:
                    description: Automatically generated unique identifier for the
                      environment instance.
                    type: string
                  labels:
                    description: Broker-specified key-value pairs that specify attributes
                      of an environment instance.
                    type: string
                  landscapeLabel:
                    description: The name of the landscape within the logged-in region
                      on which the environment instance is created.
                    type: string
                  managers:
                    items:
                      description: User identifies a user by username and origin
                      properties:
                        origin:
                          default: sap.ids
                          description: Origin picks the IDP
                          type: string
                        username:
                          description: Username at the identity provider
                          type: string
                      required:
                      - username
                      type: object
                    type: array
                  modifiedDate:
                    description: The last date the environment instance was last modified.
                      Dates and times are in UTC format.
                    type: string
                  name:
                    description: Name of the environment instance.
                    type: string
                  operation:
                    description: An identifier that represents the last operation.
                      This ID is returned by the environment brokers.
                    type: string
                  parameters:
                    description: Configuration parameters for the environment instance.
                    type: string
                  planId:
                    description: ID of the service plan for the environment instance
                      in the corresponding service broker's catalog.
                    type: string
                  planName:
                    description: Name of the service plan for the environment instance
                      in the corresponding service broker's catalog.
                    type: string
                  platformId:
                    description: ID of the platform for the environment instance in
                      the corresponding service broker's catalog.
                    type: string
                  serviceId:
                    description: ID of the service for the environment instance in
                      the corresponding service broker's catalog.
                    type: string
                  serviceName:
                    description: Name of the service for the environment instance
                      in the corresponding service broker's catalog.
                    type: string
                  state:
                    description: |-
                      Current state of the environment instance.
                      Example: cloudfoundry
                      Enum: [CREATING UPDATING DELETING OK CREATION_FAILED DELETION_FAILED UPDATE_FAILED]
                    type: string
                  stateMessage:
                    description: Information about the current state of the environment
                      instance.
                    type: string
                  subaccountGUID:
                    description: The GUID of the subaccount associated with the environment
                      instance.
                    type: string
                  tenantId:
                    description: The ID of the tenant that owns the environment instance.
                    type: string
                  type:
                    description: |-
                      The last provisioning operation on the environment instance.
                      * <b>Provision:</b> CloudFoundryEnvironment instance created.
                      * <b>Update:</b> CloudFoundryEnvironment instance changed.
                      * <b>Deprovision:</b> CloudFoundryEnvironment instance deleted.
                      Example: Provision
                      Enum: [Provision Update Deprovision]
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
