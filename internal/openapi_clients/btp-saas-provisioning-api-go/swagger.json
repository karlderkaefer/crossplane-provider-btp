{
    "openapi": "3.0.1",
    "info": {
        "description": "The SAP SaaS Provisioning service provides REST APIs that are responsible for the registration and provisioning of multitenant applications and services.  \nUse the APIs in this service to perform various operations related to your multitenant applications and services. For example, to get application registration details, subscribe a tenant to your application, unsubscribe a tenant from your application, retrieve all your application subscriptions, update subscription dependencies, and to get subscription job information. Note: \"Application Operations for App Providers\" APIs are intended for maintenance activities, not for runtime flows.\n\nSee also:\n* [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html)\n* [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html)\n* [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html)\n* [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)",
        "termsOfService": "http://www.sap.com",
        "title": "SaaS Provisioning Service",
        "version": "1.0"
    },
    "servers": [
        {
            "url": "https://saas-manager.cfapps.eu10.hana.ondemand.com",
            "description": "Generated server url"
        }
    ],
    "security": [
        {
            "OAuth2": [

            ]
        }
    ],
    "tags": [
        {
            "description": "Job Management",
            "name": "Job Management"
        },
        {
            "description": "Asynchronous Callback Operations for SAP Authorization and Trust Management Service (XSUAA)",
            "name": "Asynchronous Callback Operations for SAP Authorization and Trust Management Service (XSUAA)"
        },
        {
            "description": "Subscription Operations for App Consumers",
            "name": "Subscription Operations for App Consumers"
        },
        {
            "description": "Job Management for Application Operations (for App Providers)",
            "name": "Job Management for Application Operations (for App Providers)"
        },
        {
            "description": "Application Operations for App Providers",
            "name": "Application Operations for App Providers"
        }
    ],
    "paths": {
        "/api/v2.0/jobs/{jobUuid}": {
            "get": {
                "description": "Get information about the state of the created job.<br/><br/>Required scopes: $XSAPPNAME.job.read",
                "operationId": "getJobRelatedToSaasApplicationById",
                "parameters": [
                    {
                        "description": "The unique ID of a job for which to get information.",
                        "in": "path",
                        "name": "jobUuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobStateResponseObject"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get job errorStatusCode",
                "tags": [
                    "Job Management for Application Operations (for App Providers)"
                ]
            }
        },
        "/api/v2.0/jobs/{jobUuid}/terminate": {
            "put": {
                "description": "Graceful terminate the last run of the job with the specified job instance ID. Only jobs with statuses STARTING or STARTED can be stopped. <br/><br/>Required scope: $XSAPPNAME.job.update",
                "operationId": "gracefulTerminationJob",
                "parameters": [
                    {
                        "description": "Id of the async job",
                        "in": "path",
                        "name": "jobUuid",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Accepted"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Async job can not be stopped while not running"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Graceful termination of an async job",
                "tags": [
                    "Job Management for Application Operations (for App Providers)"
                ]
            }
        },
        "/jobs-management/v1/jobs/{jobInstanceIdOrUniqueId}/status": {
            "get": {
                "description": "Get information for a specified job, including its ID and its current status.<br/><br/>Required scope: $XSAPPNAME.job.read",
                "operationId": "getStatus",
                "parameters": [
                    {
                        "description": "ID of the job for which to get status",
                        "in": "path",
                        "name": "jobInstanceIdOrUniqueId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobStatusResponseObject"
                                }
                            }
                        },
                        "description": "Ok"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get job status",
                "tags": [
                    "Job Management"
                ]
            }
        },
        "/saas-manager/v1/application": {
            "get": {
                "description": "Get registration details for a multitenant application from the SAP SaaS Provisioning service.<br/><br/>Required scopes: $XSAPPNAME.subscription.read",
                "operationId": "getApplicationDetails",
                "parameters": [
                    {
                        "description": "For all the APIs in the Application Operations for App Providers group, use only this authorization method.\nSee the link for details about [how to obtain the access token](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/6391b5dfe4704c6c8b71a32126828e9c.html).",
                        "example": "Bearer <access-token-here>",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationDetailsResponseObject"
                                }
                            }
                        },
                        "description": "Ok"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get application registration details",
                "tags": [
                    "Application Operations for App Providers"
                ]
            }
        },
        "/saas-manager/v1/application/subscriptions": {
            "get": {
                "description": "Get information about the subscriptions of a multitenant application. The information includes the ID of the subscribed tenant, the subscription code, and subscription dependencies.<br/><br/>Required scopes: $XSAPPNAME.subscription.read",
                "operationId": "getApplicationSubscriptions",
                "parameters": [
                    {
                        "description": "Get subscriptions by tenant ID.",
                        "in": "query",
                        "name": "tenantId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The unique ID of the root subscription.",
                        "in": "query",
                        "name": "subscriptionGUID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Get subscriptions by state.",
                        "in": "query",
                        "name": "state",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "IN_PROCESS",
                                "SUBSCRIBED",
                                "SUBSCRIBE_FAILED",
                                "UNSUBSCRIBE_FAILED",
                                "UPDATE_FAILED"
                            ]
                        }
                    },
                    {
                        "description": "Get subscriptions by associated global account ID.",
                        "in": "query",
                        "name": "globalAccountId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Get subscriptions by the associated subaccount ID.",
                        "in": "query",
                        "name": "subaccountId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "A specific page to return. Used together with the 'size' parameter.<br>You define the number of subscriptions per page and then calculate the number of pages based on the total number of subscriptions.<br>\nFor example, if you defined the size to be 200, and the total number of subscriptions for the requested service is 2000, you get 10 pages of subscriptions in the response.<br>If you requested for page #5, you get 200 subscriptions from position 800 to 1000 in the list.<br>\nNote: An empty result is returned if the page you requested is out of range. In the example above, you would get an empty result for any page after page #10.",
                        "in": "query",
                        "name": "page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "description": "The number of subscriptions to include in the response. Works together with the 'page' parameter. The maximum number is 500. Any larger number specified still returns 500 subscriptions.",
                        "in": "query",
                        "name": "size",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "500"
                        }
                    },
                    {
                        "description": "For all the APIs in the Application Operations for App Providers group, use only this authorization method.\nSee the link for details about [how to obtain the access token](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/6391b5dfe4704c6c8b71a32126828e9c.html).",
                        "example": "Bearer <access-token-here>",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Specifies the type of data that is sent.",
                        "example": "<application/json>",
                        "in": "header",
                        "name": "Content-Type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionsListResponseObject"
                                }
                            }
                        },
                        "description": "Ok"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get application subscriptions",
                "tags": [
                    "Application Operations for App Providers"
                ]
            }
        },
        "/saas-manager/v1/application/subscriptions/batch": {
            "patch": {
                "description": "<b>Prerequisites</b>:\nYou have obtained the access token for the application.<br><br>\nBatch-update the dependencies of a multitenant application.<br>\nThis REST call is asynchronous.\nAfter executing the API, a job to update dependencies is created.\nYou can update dependencies for subscriptions with status: SUBSCRIBED, UPDATE_FAILED and UPDATE_PARAMETERS_FAILED.\nAfter the API has been executed, you will get the notification specifying the details of the created subscription job in the following format:<br>\n“Job for update subscription batch of application: <i>&lt;appId&gt;</i>, was created.”<br>\nWhere: \n* <i>&lt;appId&gt;</i> is the ID of the application to which you subscribed the tenants.\n\nNote that if you enable the allowUpdateOnFailedSubscription parameter, you can also use this API for subscriptions that are with a SUBSCRIBE_FAILED or UNSUBSCRIBE_FAILED status, but only for the purpose of removing dependencies.\n\n<br/><br/>Required scopes: $XSAPPNAME.subscription.write",
                "operationId": "batchUpdateApplicationAndTenantSubscriptionAsync",
                "parameters": [
                    {
                        "description": "Whether to skip updating the dependencies that haven’t changed.",
                        "in": "query",
                        "name": "skipUnchangedDependencies",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Whether to skip updating dependencies. If set to true, updateApplicationURL must also be set to true.\nThis way, you can update the application URL without updating its dependencies.",
                        "in": "query",
                        "name": "skipUpdatingDependencies",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Whether to update the application URL returned from the app callback. If set to true together with skipUpdatingDependencies, the API call becomes synchronous.",
                        "in": "query",
                        "name": "updateApplicationURL",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Whether to update a dependency subscription tree when the state of the root subscription is UNSUBSCRIBE_FAILED or SUBSCRIBE_FAILED. \nNote that in such cases, you can only use the update feature for the purpose of removing existing dependencies. ",
                        "in": "query",
                        "name": "allowUpdateOnFailedSubscription",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "For all the APIs in the Application Operations for App Providers group, use only this authorization method.\nSee the link for details about [how to obtain the access token](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/6391b5dfe4704c6c8b71a32126828e9c.html).",
                        "example": "Bearer <access-token-here>",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Specifies the type of data that is sent.",
                        "example": "<application/json>",
                        "in": "header",
                        "name": "Content-Type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/batchUpdateXsuaaSubscriptionDependencies"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "A path to job status. This path serves as the relative path for the base request URI of the API 'Get job status'.",
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Batch-update multitenant app subscription dependencies",
                "tags": [
                    "Application Operations for App Providers"
                ]
            }
        },
        "/saas-manager/v1/application/tenants/{tenantId}/subscriptions": {
            "delete": {
                "description": "Unsubscribe a consumer subaccount tenant from a multitenant application.\nThis REST call is asynchronous.\nAfter executing the API, a job to unsubscribe the tenant is created.\nYou can unsubscribe tenants that are either in the same global account, or in a different global account as the provider of the application.\nYou can unsubscribe tenants with the following statuses: SUBSCRIBED, SUBSCRIBE_FAILED, UNSUBSCRIBE FAILED, UPDATE_FAILED.\nAfter the API has been executed, you will get the notification specifying the details of the created subscription job in the following format: \n“Job for the subscription of application: <i>&lt;appId&gt;</i> and tenant: <i>&lt;tenantId&gt;</i> was created.”\nWhere: \n* <i>&lt;appId&gt;</i> is the ID of the application to which you subscribed the tenant. \n* <i>&lt;tenantId&gt;</i> is the ID of the subscribed tenant.\n\n<b>Prerequisites</b>:\nYou have obtained the access token for the application.\n<br/><br/>Required scopes: $XSAPPNAME.subscription.write",
                "operationId": "deleteApplicationAndTenantSubscriptionAsync",
                "parameters": [
                    {
                        "description": "The ID of the tenant to unsubscribe",
                        "in": "path",
                        "name": "tenantId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "For all the APIs in the Application Operations for App Providers group, use only this authorization method.\nSee the link for details about [how to obtain the access token](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/6391b5dfe4704c6c8b71a32126828e9c.html).",
                        "example": "Bearer <access-token-here>",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Specifies the type of data that is sent.",
                        "example": "<application/json>",
                        "in": "header",
                        "name": "Content-Type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "A path to job status. This path serves as the relative path for the base request URI of the API 'Get job status'.",
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Unsubscribe tenant from an application",
                "tags": [
                    "Application Operations for App Providers"
                ]
            },
            "patch": {
                "description": "Update the dependencies of a multitenant application.\nThis REST call is asynchronous.\nAfter executing the API, a job to update dependencies is created.\nYou can update dependencies for subscriptions with status: SUBSCRIBED, UPDATE_FAILED and UPDATE_PARAMETERS_FAILED.\nAfter the API has been executed, you will get the notification specifying the details of the created subscription job in the following format: \n“Job for the subscription of application: <i>&lt;appId&gt;</i> and tenant: <i>&lt;tenantId&gt;</i> was created.”\nWhere: \n* <i>&lt;appId&gt;</i> is the ID of the application to which you subscribed the tenant. \n* <i>&lt;tenantId&gt;</i> is the ID of the subscribed tenant.\n\nNote that if you enable the allowUpdateOnFailedSubscription parameter, you can also use this API for subscriptions that are with a SUBSCRIBE_FAILED or UNSUBSCRIBE_FAILED status, but only for the purpose of removing dependencies.\n<b>Prerequisites</b>:\nYou have obtained the access token for the application.\n<br/><br/>Required scopes: $XSAPPNAME.subscription.write",
                "operationId": "updateApplicationAndTenantSubscriptionAsync",
                "parameters": [
                    {
                        "description": "The ID of the tenant for which to update dependencies",
                        "in": "path",
                        "name": "tenantId",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Whether to skip updating the dependencies that haven’t changed.",
                        "in": "query",
                        "name": "skipUnchangedDependencies",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Whether to skip updating dependencies. If set to true, updateApplicationURL must also be set to true.\nThis way, you can update the application URL without updating its dependencies.",
                        "in": "query",
                        "name": "skipUpdatingDependencies",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Whether to update the application URL returned from the app callback. If set to true together with skipUpdatingDependencies, the API call becomes synchronous.",
                        "in": "query",
                        "name": "updateApplicationURL",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Whether to update a dependency subscription tree when the state of the root subscription is UNSUBSCRIBE_FAILED or SUBSCRIBE_FAILED. \nNote that in such cases, you can only use the update feature for the purpose of removing existing dependencies. ",
                        "in": "query",
                        "name": "allowUpdateOnFailedSubscription",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "For all the APIs in the Application Operations for App Providers group, use only this authorization method.\nSee the link for details about [how to obtain the access token](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/6391b5dfe4704c6c8b71a32126828e9c.html).",
                        "example": "Bearer <access-token-here>",
                        "in": "header",
                        "name": "Authorization",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Specifies the type of data that is sent.",
                        "example": "<application/json>",
                        "in": "header",
                        "name": "Content-Type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApplicationDependenciesRequestPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "OK"
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Accepted",
                        "headers": {
                            "Location": {
                                "description": "A path to job status. This path serves as the relative path for the base request URI of the API 'Get job status'.",
                                "schema": {
                                    "type": "string"
                                },
                                "style": "simple"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Too many requests"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Update subscription dependencies",
                "tags": [
                    "Application Operations for App Providers"
                ]
            }
        },
        "/saas-manager/v1/applications": {
            "get": {
                "description": "List all the multitenant applications to which a subaccount is entitled to subscribe, including their subscription details. Also useful for finding the URLs to launch each of the entitled applications.<br/><br/>Required scopes: $XSAPPNAME.subaccount.application.subscription.read",
                "operationId": "getEntitledApplications",
                "parameters": [
                    {
                        "description": "Indicates the natural language and locale that the client prefers.",
                        "example": "*",
                        "in": "header",
                        "name": "Accept-Language",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntitledApplicationsResponseCollection"
                                }
                            }
                        },
                        "description": "Ok"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get all entitled multitenant applications",
                "tags": [
                    "Subscription Operations for App Consumers"
                ]
            }
        },
        "/saas-manager/v1/applications/{appName}": {
            "get": {
                "description": "Get details of a specific multitenant application to which the subaccount is entitled to subscribe. Also useful for finding the URL to launch the application.<br/><br/>Required scopes: $XSAPPNAME.subaccount.application.subscription.read",
                "operationId": "getEntitledApplication",
                "parameters": [
                    {
                        "description": "The name of the multitenant application to which a subaccount is entitled to subscribe.",
                        "in": "path",
                        "name": "appName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "The name of the subscription plan to the multitenant application.",
                        "in": "query",
                        "name": "planName",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Whether appName is used as a commercialAppName. default is false, means it is used as the appName.",
                        "in": "query",
                        "name": "useCommercialAppName",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "description": "Indicates the natural language and locale that the client prefers.",
                        "example": "*",
                        "in": "header",
                        "name": "Accept-Language",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntitledApplicationsResponseObject"
                                }
                            }
                        },
                        "description": "Ok"
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get details of a multitenant application",
                "tags": [
                    "Subscription Operations for App Consumers"
                ]
            }
        },
        "/saas-manager/v1/applications/{appName}/subscription": {
            "delete": {
                "description": "Unsubscribe a multitenant application from a subaccount. This process is asynchronous. All data related to the subscribed multitenant application will be deleted in the respective subaccount. To show all application entitlements, including application names, plan names, and subscription status, in a subaccount, use GET /saas-manager/v1/applications/{appName} <br/><br/>Required scopes: $XSAPPNAME.subaccount.application.subscription.update",
                "operationId": "deleteSubscriptionAsync",
                "parameters": [
                    {
                        "description": "The name of the multitenant application from which to unsubscribe the subaccount.",
                        "in": "path",
                        "name": "appName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Whether appName is used as a commercialAppName. default is false, means it is used as the appName.",
                        "in": "query",
                        "name": "useCommercialAppName",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "description": "Provide a set of correlation parameters to be used by the initial and subsequent components involved in the request: \n- The Root Context ID (GUID) identifies the initial context within a complex scenario, for example, the initiating user session. \n- The Transaction ID (GUID) identifies a technical transaction. \n- Connection ID (GUID) and Connection Counter uniquely identify together  every request or message leaving a component via outbound communication.",
                        "in": "header",
                        "name": "SAP-PASSPORT",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Unsubscribe an application from a subaccount",
                "tags": [
                    "Subscription Operations for App Consumers"
                ]
            },
            "patch": {
                "description": "Change the parameters of an existing subscription to a multitenant application. For example, you can change the application plan in a subscription. To update subscription parameters, the subaccount must already be subscribed to the application. <br/><br/>Required scopes: $XSAPPNAME.subaccount.application.subscription.update",
                "operationId": "updateSubscriptionParametersAsync",
                "parameters": [
                    {
                        "description": "The name of the multitenant application to update.",
                        "in": "path",
                        "name": "appName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Whether appName is used as a commercialAppName. default is false, means it is used as the appName.",
                        "in": "query",
                        "name": "useCommercialAppName",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSubscriptionRequestPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Unprocessable Entity"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Update parameters of a multitenant application subscription",
                "tags": [
                    "Subscription Operations for App Consumers"
                ]
            },
            "post": {
                "description": "Subscribe to a multitenant application from a subaccount.\nThis process is asynchronous.\nYou must be assigned to the subaccount admin role.\nTo check which multitenant applications the subaccount can subscribe to, use the API: GET /saas-manager/v1/applications.<br/><br/>Required scopes: $XSAPPNAME.subaccount.application.subscription.update",
                "operationId": "createSubscriptionAsync",
                "parameters": [
                    {
                        "description": "The name of the multitenant application to subscribe to.",
                        "in": "path",
                        "name": "appName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Whether appName is used as a commercialAppName. default is false, means it is used as the appName.",
                        "in": "query",
                        "name": "useCommercialAppName",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "description": "Provide a set of correlation parameters to be used by the initial and subsequent components involved in the request: \n- The Root Context ID (GUID) identifies the initial context within a complex scenario, for example, the initiating user session. \n- The Transaction ID (GUID) identifies a technical transaction. \n- Connection ID (GUID) and Connection Counter uniquely identify together  every request or message leaving a component via outbound communication.",
                        "in": "header",
                        "name": "SAP-PASSPORT",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSubscriptionRequestPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Accepted"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "409": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Conflict"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Subscribe to an application from a subaccount",
                "tags": [
                    "Subscription Operations for App Consumers"
                ]
            }
        },
        "/saas-manager/v1/applications/{appName}/subscription/labels": {
            "delete": {
                "description": "Remove all user-defined labels that are assigned to a consumer subaccount's subscription to a multitenant application. \n\nTo remove specific labels, use instead: PUT /saas-manager/v1/applications/{appName}/ subscription/labels\nRequired scope: $XSAPPNAME.subaccount.application.subscription.update \n",
                "operationId": "deleteSubscriptionLabels",
                "parameters": [
                    {
                        "description": "The name of the multitenant application to which a subaccount is subscribed.",
                        "in": "path",
                        "name": "appName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Whether appName is used as a commercialAppName. default is false, means it is used as the appName.",
                        "in": "query",
                        "name": "useCommercialAppName",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LabelsResponseObject"
                                }
                            }
                        },
                        "description": "Ok"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Remove all labels from a multitenant application subscription",
                "tags": [
                    "Subscription Operations for App Consumers"
                ]
            },
            "get": {
                "description": "Get all the user-defined labels that are assigned as key-value pairs to a consumer subaccount's subscription to a multitenant application. \n\nRequired scope: $XSAPPNAME.subaccount.application.subscription.read",
                "operationId": "getSubscriptionLabels",
                "parameters": [
                    {
                        "description": "The name of the multitenant application to which a subaccount is subscribed.",
                        "in": "path",
                        "name": "appName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Whether appName is used as a commercialAppName. default is false, means it is used as the appName.",
                        "in": "query",
                        "name": "useCommercialAppName",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LabelsResponseObject"
                                }
                            }
                        },
                        "description": "Ok"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get labels for a multitenant application subscription",
                "tags": [
                    "Subscription Operations for App Consumers"
                ]
            },
            "put": {
                "description": "Assign user-defined labels to a consumer subaccount's subscription to a multitenant application. Labels are specified as key-value pairs. \n\nRequired scope: $XSAPPNAME.subaccount.application.subscription.update\n",
                "operationId": "upsertSubscriptionLabels",
                "parameters": [
                    {
                        "description": "The name of the multitenant application to which a subaccount is subscribed.",
                        "in": "path",
                        "name": "appName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Whether appName is used as a commercialAppName. default is false, means it is used as the appName.",
                        "in": "query",
                        "name": "useCommercialAppName",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LabelAssignmentRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LabelsResponseObject"
                                }
                            }
                        },
                        "description": "Ok"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Assign labels to a multitenant application subscription",
                "tags": [
                    "Subscription Operations for App Consumers"
                ]
            }
        },
        "/saas-manager/v1/applications/{appName}/subscription/parameters": {
            "get": {
                "description": "Get all user-defined consumer subaccount's subscription parameters to a multitenant application. \n\nRequired scope: $XSAPPNAME.subaccount.application.subscription.read",
                "operationId": "getSubscriptionParams",
                "parameters": [
                    {
                        "description": "The name of the multitenant application to which a subaccount is subscribed.",
                        "in": "path",
                        "name": "appName",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Whether appName is used as a commercialAppName. default is false, means it is used as the appName.",
                        "in": "query",
                        "name": "useCommercialAppName",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ParamsResponseObject"
                                }
                            }
                        },
                        "description": "Ok"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Not Supported"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        },
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Get subscription parameters",
                "tags": [
                    "Subscription Operations for App Consumers"
                ]
            }
        },
        "/saas-manager/v1/subscription-callback/{identifier}/result": {
            "put": {
                "description": "Use the async callback feature to subscribe a subaccount tenant to a multitenant application if a subscription process is time-consuming.<br/><br/>Requires one of the following scopes: $XSAPPNAME.subscription.write or $XSAPPNAME.subscription.service.write",
                "operationId": "subscriptionCallbackAsync",
                "parameters": [
                    {
                        "description": "Unique identifier of the current subscription job.",
                        "in": "path",
                        "name": "identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaasAsyncSubscriptionRequestPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Ok"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Not Authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "429": {
                        "description": "Rate Limit Exceeded",
                        "headers": {
                            "X-Ratelimit-Reset": {
                                "description": "The time at which the rate limit will reset, expressed in milliseconds. It indicates the timestamp when the client can make additional requests without exceeding the rate limit.",
                                "example": "167918400000",
                                "schema": {
                                    "type": "string",
                                    "format": "long"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "summary": "Subscribe a subaccount tenant to an application",
                "tags": [
                    "Asynchronous Callback Operations for SAP Authorization and Trust Management Service (XSUAA)"
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ApplicationResourceDto": {
                "type": "object",
                "properties": {
                    "groupVersionType": {
                        "$ref": "#/components/schemas/GroupVersionType"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "description": "The application resource reference in Unified Services. This object includes the name and path of the application resource."
            },
            "ApplicationSubscriptionsResponseObject": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "integer",
                        "description": "Specifies the ability to use the service plan of the subscribed application. The actual amount has no bearing on the maximum consumption limit of the application.",
                        "format": "int64"
                    },
                    "appId": {
                        "type": "string",
                        "description": "The appId of the master XSUAA instance provided when registering the multitenant application in saas registry."
                    },
                    "appName": {
                        "type": "string",
                        "description": "The unique registration name of the deployed multitenant application, as defined by the app developer."
                    },
                    "appNameBeforeMovedFromSaasProvisioning": {
                        "type": "string",
                        "description": "appName of the SaaS Provisioning multitenant application whose subscription was moved to the associated Subscription Manager Service (SMS) multitenant application."
                    },
                    "changedOn": {
                        "type": "string",
                        "description": "The date and time the subscription was last modified. Dates and times are in UTC format."
                    },
                    "code": {
                        "type": "string",
                        "description": "A subscription code for the application."
                    },
                    "commercialAppName": {
                        "type": "string",
                        "description": "The unique commercial registration name of the deployed multitenant application as defined by the app developer."
                    },
                    "consumerTenantId": {
                        "type": "string",
                        "description": "Tenant ID of the global account or subaccount of the consumer that has subscribed to the multitenant application."
                    },
                    "createdOn": {
                        "type": "string",
                        "description": "The date and time the subscription was created. Dates and times are in UTC format."
                    },
                    "dependencies": {
                        "type": "array",
                        "description": "Any reuse services used or required by a subscribed application and its services.",
                        "items": {
                            "$ref": "#/components/schemas/DependenciesResponseObject"
                        }
                    },
                    "error": {
                        "type": "string",
                        "description": "Error description for the following statuses: SUBSCRIBE_FAILED, UNSUBSCRIBE_FAILED, UPDATE_FAILED."
                    },
                    "globalAccountId": {
                        "type": "string",
                        "description": "ID of the associated global account."
                    },
                    "isConsumerTenantActive": {
                        "type": "boolean",
                        "description": "Whether the consumer tenant is active. This field is returned only if one of the following query parameters was used during the API call: tenantId, subaccountId"
                    },
                    "licenseType": {
                        "type": "string",
                        "description": "The license type of the associated global account."
                    },
                    "movedFromSaasProvisioning": {
                        "type": "boolean",
                        "description": "Whether the subscription was moved from the SaaS Provisioning service to its associated Subscription Manager Service application."
                    },
                    "serviceInstanceId": {
                        "type": "string",
                        "description": "The ID of the multitenant application that is registered to the SAP SaaS Provisioning registry."
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the subscriptions. Possible states: IN_PROCESS, SUBSCRIBED, SUBSCRIBE_FAILED, UNSUBSCRIBE_FAILED, UPDATE_FAILED."
                    },
                    "subaccountId": {
                        "type": "string",
                        "description": "ID of the associated subaccount."
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "Consumer Subdomain"
                    },
                    "subscriptionGUID": {
                        "type": "string",
                        "description": "Unique subscription ID associated with the instance of the dependent service to be used for future references, such as 'GET all subscriptions' API call."
                    },
                    "url": {
                        "type": "string",
                        "description": "Application URL"
                    }
                },
                "description": "The list of the requested app subscriptions."
            },
            "CreateSubscriptionRequestPayload": {
                "type": "object",
                "properties": {
                    "planName": {
                        "type": "string",
                        "description": "The name of the subscription plan to a multitenant application"
                    },
                    "subscriptionParams": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "Additional subscription parameters determined by the application provider.",
                            "example": null
                        },
                        "description": "Additional subscription parameters determined by the application provider."
                    }
                },
                "description": "Create the request to subscribe to a multitenant application from a subaccount."
            },
            "DependenciesResponseObject": {
                "type": "object",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The appId of the master XSUAA instance provided when registering the reusable service in saas registry."
                    },
                    "appName": {
                        "type": "string",
                        "description": "The unique registration name of the linked dependency application."
                    },
                    "dependencies": {
                        "type": "array",
                        "description": "The list of relevant dependencies and their descriptions.",
                        "items": {
                            "$ref": "#/components/schemas/DependenciesResponseObject"
                        }
                    },
                    "error": {
                        "type": "string",
                        "description": "In case there are errors during dependencies' assignments, the descriptions are shown here."
                    },
                    "providerSubaccountID": {
                        "type": "string",
                        "description": "The ID of the provider subaccount."
                    },
                    "xsappname": {
                        "type": "string",
                        "description": "The xsappname configured in the security descriptor file used to create the XSUAA instance."
                    }
                },
                "description": "Any reuse services used or required by a subscribed application and its services."
            },
            "EntitledApplicationsErrorResponseObject": {
                "type": "object",
                "properties": {
                    "appError": {
                        "type": "string",
                        "description": "A response object that contains details about the error an app provider returns to the subscriber. It contains the error code, a user-friendly, customer-oriented error message, technical details about the error, and more."
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "The message that describes the error that occurred during the subscription. "
                    }
                },
                "description": "The response object that contains details about an error in case the subscription failed."
            },
            "EntitledApplicationsResponseCollection": {
                "type": "object",
                "properties": {
                    "applications": {
                        "type": "array",
                        "description": "The response  list of all the multitenant applications to which a specified subaccount is entitled to subscribe.",
                        "items": {
                            "$ref": "#/components/schemas/EntitledApplicationsResponseObject"
                        }
                    }
                }
            },
            "EntitledApplicationsResponseObject": {
                "type": "object",
                "properties": {
                    "additionalPlanFeatures": {
                        "type": "array",
                        "description": "The list of features specific to this plan.",
                        "items": {
                            "type": "string",
                            "description": "The list of features specific to this plan."
                        }
                    },
                    "allowedTargetPlans": {
                        "type": "array",
                        "description": "List of plans to which the existing subscription can switch. Includes upgrades, downgrades, and other types of transitions.",
                        "items": {
                            "type": "string",
                            "description": "List of plans to which the existing subscription can switch. Includes upgrades, downgrades, and other types of transitions."
                        }
                    },
                    "appId": {
                        "type": "string",
                        "description": "The ID returned by XSUAA after the app provider has performed a bind of the multitenant application to a XSUAA service instance."
                    },
                    "appName": {
                        "type": "string",
                        "description": "The unique registration name of the deployed multitenant application as defined by the app developer."
                    },
                    "applicationCoordinates": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "The application coordinates provided in metadata for customer-facing UIs.",
                            "example": null
                        },
                        "description": "The application coordinates provided in metadata for customer-facing UIs."
                    },
                    "applicationResource": {
                        "$ref": "#/components/schemas/ApplicationResourceDto"
                    },
                    "authenticationProvider": {
                        "type": "string",
                        "description": "The authentication provider of the multitenant application.\n* XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level.\n* IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services).\n",
                        "enum": [
                            "XSUAA",
                            "IAS"
                        ]
                    },
                    "automationState": {
                        "type": "string",
                        "description": "The state of the automation solution.",
                        "enum": [
                            "PROCESSING",
                            "OK",
                            "PROCESSING_FAILED"
                        ]
                    },
                    "automationStateMessage": {
                        "type": "string",
                        "description": "The message that describes the automation solution state."
                    },
                    "category": {
                        "type": "string",
                        "description": "The technical name of the category defined by the app developer to which the multitenant application is grouped in customer-facing UIs."
                    },
                    "categoryDisplayName": {
                        "type": "string",
                        "description": "The display name of the category for customer-facing UIs."
                    },
                    "commercialAppName": {
                        "type": "string",
                        "description": "The commercial name of the deployed multitenant application as defined by the app developer."
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "Details about the user or client that created this subscription."
                    },
                    "createdDate": {
                        "type": "string",
                        "description": "The date the subscription was created. Dates and times are in UTC format.",
                        "format": "date-time"
                    },
                    "customerDeveloped": {
                        "type": "boolean",
                        "description": "Whether the application was developed by a customer. If not, then the application is developed by the cloud operator, such as SAP."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the multitenant application for customer-facing UIs."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the application for customer-facing UIs."
                    },
                    "formationSolutionName": {
                        "type": "string",
                        "description": "Name of the formations solution associated with the multitenant application."
                    },
                    "globalAccountId": {
                        "type": "string",
                        "description": "ID of the associated global account."
                    },
                    "iconBase64": {
                        "type": "string",
                        "description": "The icon of the multitenant application for customer-facing UIs."
                    },
                    "incidentTrackingComponent": {
                        "type": "string",
                        "description": "The application's incident-tracking component provided in metadata for customer-facing UIs."
                    },
                    "labels": {
                        "type": "object",
                        "description": "User-defined labels that are assigned as key-value pairs in a JSON array to the multitenant application subscription. \n\nExample:\n\n{\n\n  \"Cost Center\": [\"19700626\"],\n\n  \"Department\": [\"Sales\"],\n\n  \"Contacts\": [\"name1@example.com\",\"name2@example.com\"],\n\n  \"EMEA\":[]\n\n}",
                        "example": null
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "empty": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": {
                            "type": "object",
                            "description": "JSON schema that describes the metadata that the consumer provide when subscribing to the application.",
                            "example": null
                        },
                        "description": "JSON schema that describes the metadata that the consumer provide when subscribing to the application."
                    },
                    "modifiedBy": {
                        "type": "string",
                        "description": "Details about the user or client that last modified this subscription."
                    },
                    "modifiedDate": {
                        "type": "string",
                        "description": "The date the subscription was last modified. Dates and times are in UTC format.",
                        "format": "date-time"
                    },
                    "paramsSchema": {
                        "type": "object",
                        "properties": {
                            "empty": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": {
                            "type": "object",
                            "description": "JSON schema that describes the parameters that the consumer must provide when subscribing to the application.",
                            "example": null
                        },
                        "description": "JSON schema that describes the parameters that the consumer must provide when subscribing to the application."
                    },
                    "planDescription": {
                        "type": "string",
                        "description": "The description of the plan for customer-facing UIs."
                    },
                    "planName": {
                        "type": "string",
                        "description": "The plan name of the application to which the consumer has subscribed."
                    },
                    "platformEntityId": {
                        "type": "string",
                        "description": "ID of the landscape-specific environment."
                    },
                    "quota": {
                        "type": "integer",
                        "description": "Total amount the subscribed subaccount is entitled to consume.",
                        "format": "int32"
                    },
                    "shortDescription": {
                        "type": "string",
                        "description": "The short description of the multitenant application for customer-facing UIs."
                    },
                    "state": {
                        "type": "string",
                        "description": "The subscription state of the subaccount regarding the multitenant application.",
                        "enum": [
                            "IN_PROCESS",
                            "SUBSCRIBED",
                            "SUBSCRIBE_FAILED",
                            "UNSUBSCRIBE_FAILED",
                            "UPDATE_FAILED",
                            "UPDATE_PARAMETERS_FAILED",
                            "NOT_SUBSCRIBED"
                        ]
                    },
                    "subscribedSubaccountId": {
                        "type": "string",
                        "description": "The ID of the subaccount which is subscribed to the multitenant application."
                    },
                    "subscribedTenantId": {
                        "type": "string",
                        "description": "The ID of the tenant which is subscribed to a multitenant application."
                    },
                    "subscriptionError": {
                        "$ref": "#/components/schemas/EntitledApplicationsErrorResponseObject"
                    },
                    "subscriptionGUID": {
                        "type": "string",
                        "description": "Unique subscription ID associated with the instance of the dependent service to be used for future references, such as 'GET all subscriptions' API call."
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "Technical ID generated by XSUAA for a multitenant application when a consumer subscribes to the application."
                    },
                    "subscriptionUrl": {
                        "type": "string",
                        "description": "URL for app users to launch the subscribed application."
                    },
                    "supportsGetParameters": {
                        "type": "boolean",
                        "description": "Specifies whether a subaccount can provide its subscriptions parameters."
                    },
                    "supportsParametersUpdates": {
                        "type": "boolean",
                        "description": "Specifies whether a consumer, whose subaccount is subscribed to the application, can change its subscriptions parameters."
                    },
                    "supportsPlanUpdates": {
                        "type": "boolean",
                        "description": "Specifies if a consumer, whose subaccount is subscribed to the application, can change the subscription to a different plan that is available for this application and subaccount."
                    },
                    "tenantId": {
                        "type": "string",
                        "description": "Tenant ID of the application provider."
                    }
                },
                "description": "The response  list of all the multitenant applications to which a specified subaccount is entitled to subscribe."
            },
            "ErrorResponse": {
                "required": [
                    "code",
                    "correlationID",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "description": "Technical code of the error as a reference for support",
                        "format": "int32"
                    },
                    "correlationID": {
                        "type": "string",
                        "description": "Log correlation ID to track the event"
                    },
                    "description": {
                        "type": "string",
                        "description": "Error description in JSON format"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NestingErrorDetailsResponseObject"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "User-friendly description of the error."
                    },
                    "target": {
                        "type": "string",
                        "description": "Describes a data element (for example, a resource path: /online-store/v1/products/123)"
                    }
                }
            },
            "GroupVersionType": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "JobErrorResponseObject": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Description of the error."
                    },
                    "exception": {
                        "type": "string",
                        "description": "The runtime exception for the error."
                    },
                    "message": {
                        "type": "string",
                        "description": "The message associated with the current error."
                    },
                    "paths": {
                        "type": "string",
                        "description": "Path of the exception received from the server."
                    },
                    "status": {
                        "type": "integer",
                        "description": "Error status code.",
                        "format": "int32"
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Timestamp of the error.",
                        "format": "date-time"
                    }
                },
                "description": "Error message when the state is FAILED."
            },
            "JobParameter": {
                "type": "object",
                "properties": {
                    "identifying": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "STRING",
                            "DATE",
                            "LONG",
                            "DOUBLE"
                        ]
                    },
                    "value": {
                        "type": "object",
                        "example": null
                    }
                }
            },
            "JobStateResponseObject": {
                "type": "object",
                "properties": {
                    "createdBy": {
                        "type": "string",
                        "description": "The service instance ID of the SAP SaaS Provisioning service (saas-registry) that the application is using."
                    },
                    "error": {
                        "$ref": "#/components/schemas/JobErrorResponseObject"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the corresponding job."
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the corresponding job. Possible values:\n* <b>CREATED:</b> Job processing has created.\n* <b>STARTED:</b> Job processing has started.\n* <b>SUCCEEDED:</b> The job has completed.\n* <b>FAILED:</b> The job failed and did not complete.\n* <b>RETRY:</b> Subscription has timed out and job processing is pending a retry.",
                        "enum": [
                            "CREATED",
                            "STARTED",
                            "SUCCEEDED",
                            "FAILED",
                            "RETRY"
                        ]
                    },
                    "stateDetails": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "The state details of the corresponding job.",
                            "example": null
                        },
                        "description": "The state details of the corresponding job."
                    }
                }
            },
            "JobStatusResponseObject": {
                "required": [
                    "description",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "customParams": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "example": null
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the exit status of a job when it ends."
                    },
                    "jobParams": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/JobParameter"
                        }
                    },
                    "status": {
                        "type": "string",
                        "description": "The current state of the job. \n* <b>IN_PROGRESS:</b> The job is being executed.\n* <b>COMPLETED:</b> The job has completed.\n* <b>FAILED:</b> The job failed and did not complete. The job can be restarted.",
                        "enum": [
                            "IN_PROGRESS",
                            "COMPLETED",
                            "FAILED"
                        ]
                    },
                    "statusDetails": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "example": null
                        }
                    }
                }
            },
            "LabelAssignmentRequestPayload": {
                "type": "object",
                "properties": {
                    "labels": {
                        "type": "object",
                        "description": "Labels as key-value pairs in JSON format. An entity is allowed up to 10 labels. The key of each label is mandatory and is limited to 63 characters. Standard labels can have any name (key) that you define, with only a single optional value assigned per key. To define a special type of label, called tags, specify the key with the name 'tags' and associate up to 10 values per tag in the array. The key 'tags' (in any casing variation) can only be used once per entity. Note that label values (not keys) are case-sensitive -- be careful not to create duplicate variants of the same value with a different casing (example: \"myValue\" and \"MyValue\").\n\nFor example: {\n\n\"Cost Center\":\"2624061970\"\n\n\"Department\":\"Sales\"\n\n\"tags\": [\"Green\", \"Pharma\", \"Audited\"]\n\n}",
                        "example": null
                    }
                },
                "description": "JSON object with labels as key-value pairs that specify custom attributes of the entity."
            },
            "LabelsResponseObject": {
                "type": "object",
                "description": "Labels assigned as key-value pairs to the entity."
            },
            "NestingErrorDetailsResponseObject": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ParamsResponseObject": {
                "type": "object",
                "description": "Params assigned as key-value pairs."
            },
            "RegistrationDetailsResponseObject": {
                "type": "object",
                "properties": {
                    "appId": {
                        "type": "string",
                        "description": "The ID returned by an xsuaa service instance after the app provider has connected the multitenant application to an xsuaa service instance."
                    },
                    "appName": {
                        "type": "string",
                        "description": "The unique registration name of the deployed multitenant application as defined by the app developer."
                    },
                    "appType": {
                        "type": "string",
                        "description": "The plan used to register the multitenant application or reusable service.\n<b>- saasApplication:</b> Registered entity is a multitenant application.\n<b>- saasService:</b> Registered entity is a reuse service."
                    },
                    "appUrls": {
                        "type": "string",
                        "description": "Any callback URLs that the multitenant application exposes."
                    },
                    "automationSolutionName": {
                        "type": "string",
                        "description": "Name of the cloud automation solution associated with the multitenant application."
                    },
                    "category": {
                        "type": "string",
                        "description": "The category to which the application is grouped in the Subscriptions page in the cockpit. If left empty, it gets assigned to the default category."
                    },
                    "commercialAppName": {
                        "type": "string",
                        "description": "The unique commercial registration name of the deployed multitenant application as defined by the app developer."
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the multitenant application for customer-facing UIs."
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the application for customer-facing UIs."
                    },
                    "failSubscriptionOnAutomationFailure": {
                        "type": "boolean",
                        "description": "A flag to determine wheater to fail subscription when automation solution fails or not."
                    },
                    "formationSolutionName": {
                        "type": "string",
                        "description": "Name of the formations solution associated with the multitenant application.",
                        "deprecated": true
                    },
                    "globalAccountId": {
                        "type": "string",
                        "description": "ID of the global account associated with the multitenant application."
                    },
                    "messageOnAutomationFailure": {
                        "type": "string",
                        "description": "Error message to return when automation solution fails."
                    },
                    "organizationGuid": {
                        "type": "string",
                        "description": "The unique ID of the Cloud Foundry org where the app provider has deployed and registered the multitenant application."
                    },
                    "paramsSchema": {
                        "type": "object",
                        "properties": {
                            "empty": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": {
                            "type": "object",
                            "description": "JSON schema that describes the parameters that the consumer must provide when subscribing to the application.",
                            "example": null
                        },
                        "description": "JSON schema that describes the parameters that the consumer must provide when subscribing to the application."
                    },
                    "propagateParams": {
                        "type": "boolean",
                        "description": "Whether the parameters are transferred to the application’s dependencies."
                    },
                    "providerTenantId": {
                        "type": "string",
                        "description": "The unique ID of the tenant that provides the multitenant application."
                    },
                    "serviceInstanceId": {
                        "type": "string",
                        "description": "The ID of the multitenant application that is registered to the SAP SaaS Provisioning service registry."
                    },
                    "spaceGuid": {
                        "type": "string",
                        "description": "The unique ID of the Cloud Foundry space where the app provider has deployed and registered the multitenant application."
                    },
                    "xsappname": {
                        "type": "string",
                        "description": "The xsappname configured in the security descriptor file used to create the xsuaa service instance for the multitenant application."
                    }
                }
            },
            "SaasAsyncSubscriptionRequestPayload": {
                "type": "object",
                "properties": {
                    "additionalOutput": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "Additional output for callback response.",
                            "example": null
                        },
                        "description": "Additional output for callback response."
                    },
                    "message": {
                        "type": "string",
                        "description": "Additional details accompanying the subscription process. Relates mostly to the cases when the subscription process status is FAILED. "
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the subscription job.",
                        "enum": [
                            "SUCCEEDED",
                            "FAILED"
                        ]
                    },
                    "subscriptionUrl": {
                        "type": "string",
                        "description": "The URL the multitenant application is exposing for a subscription."
                    }
                },
                "description": "The details of the subaccount tenant subscription an app provider sends to users."
            },
            "SubscriptionsListResponseObject": {
                "type": "object",
                "properties": {
                    "morePages": {
                        "type": "boolean",
                        "description": "Whether there are more pages."
                    },
                    "page": {
                        "type": "integer",
                        "description": "The current page number.",
                        "format": "int32"
                    },
                    "subscriptions": {
                        "type": "array",
                        "description": "The list of the requested app subscriptions.",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationSubscriptionsResponseObject"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "Total numbers of results.",
                        "format": "int64"
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total numbers of pages.",
                        "format": "int32"
                    }
                }
            },
            "UpdateApplicationDependenciesRequestPayload": {
                "type": "object",
                "properties": {
                    "appProviderCustomProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "A JSON object with key-value pairs. Values can further be JSON objects. (nested structure)",
                            "example": null
                        },
                        "description": "A JSON object with key-value pairs. Values can further be JSON objects. (nested structure)"
                    }
                },
                "description": "Send custom property values in the form of key-value pairs to dependent services (provider applications) during the update to notify them about a change related to an existing subscription."
            },
            "UpdateSubscriptionRequestPayload": {
                "type": "object",
                "properties": {
                    "planName": {
                        "type": "string",
                        "description": "The new plan of the multitenant application to update in the existing subscription."
                    },
                    "subscriptionParams": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "Additional subscription parameters determined by the application provider.",
                            "example": null
                        },
                        "description": "Additional subscription parameters determined by the application provider."
                    }
                },
                "description": "Create the request to update parameters in an existing subscription from a subaccount."
            },
            "batchUpdateXsuaaSubscriptionDependencies": {
                "type": "object",
                "properties": {
                    "appProviderCustomProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "A JSON object with key-value pairs. Values can further be JSON objects. (nested structure)",
                            "example": null
                        },
                        "description": "A JSON object with key-value pairs. Values can further be JSON objects. (nested structure)"
                    },
                    "subscriptionGuids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tenantIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "description": "The payload for a batch operation. Specify either GUIDs or tenant IDs (but not both) of multitenant (xsuaa-utilizing) app subscriptions whose dependencies need updating. Use the wildcard character (*) instead of individual IDs to update all subscription dependencies. Send custom property values in the form of key-value pairs to dependent services (provider applications) during the update to notify them about a change related to an existing subscription."
            }
        },
        "securitySchemes": {
            "OAuth2": {
                "type": "oauth2",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "https://{identityzone}.authentication.eu10.hana.ondemand.com/oauth/token",
                        "scopes": {
                        }
                    },
                    "password": {
                        "tokenUrl": "https://{identityzone}.authentication.eu10.hana.ondemand.com/oauth/token",
                        "scopes": {
                        }
                    }
                }
            }
        }
    },
    "x-sap-shortText": "Register and provision subscriptions for multitenant applications and services.",
    "externalDocs": {
        "description": "Using SAP SaaS Provisioning Service APIs to Manage Multitenant Applications",
        "url": "https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/ed08c7dcb35d4082936c045e7d7b3ecd.html"
    },
    "x-sap-stateInfo": {
        "state": "Active"
    },
    "x-servers": [
        {
            "url": "https://saas-manager.cfapps.{landscape}.hana.ondemand.com",
            "templates": {
                "landscape": {
                    "enum": [
                        "eu10",
                        "us10",
                        "ap21"
                    ],
                    "default": "eu10"
                }
            }
        }
    ]
}