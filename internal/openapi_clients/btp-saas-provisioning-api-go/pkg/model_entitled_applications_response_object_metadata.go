/*
SaaS Provisioning Service

The SAP SaaS Provisioning service provides REST APIs that are responsible for the registration and provisioning of multitenant applications and services.   Use the APIs in this service to perform various operations related to your multitenant applications and services. For example, to get application registration details, subscribe a tenant to your application, unsubscribe a tenant from your application, retrieve all your application subscriptions, update subscription dependencies, and to get subscription job information. Note: \"Application Operations for App Providers\" APIs are intended for maintenance activities, not for runtime flows.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntitledApplicationsResponseObjectMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitledApplicationsResponseObjectMetadata{}

// EntitledApplicationsResponseObjectMetadata JSON schema that describes the metadata that the consumer provide when subscribing to the application.
type EntitledApplicationsResponseObjectMetadata struct {
	Empty *bool `json:"empty,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EntitledApplicationsResponseObjectMetadata EntitledApplicationsResponseObjectMetadata

// NewEntitledApplicationsResponseObjectMetadata instantiates a new EntitledApplicationsResponseObjectMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitledApplicationsResponseObjectMetadata() *EntitledApplicationsResponseObjectMetadata {
	this := EntitledApplicationsResponseObjectMetadata{}
	return &this
}

// NewEntitledApplicationsResponseObjectMetadataWithDefaults instantiates a new EntitledApplicationsResponseObjectMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitledApplicationsResponseObjectMetadataWithDefaults() *EntitledApplicationsResponseObjectMetadata {
	this := EntitledApplicationsResponseObjectMetadata{}
	return &this
}

// GetEmpty returns the Empty field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObjectMetadata) GetEmpty() bool {
	if o == nil || IsNil(o.Empty) {
		var ret bool
		return ret
	}
	return *o.Empty
}

// GetEmptyOk returns a tuple with the Empty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObjectMetadata) GetEmptyOk() (*bool, bool) {
	if o == nil || IsNil(o.Empty) {
		return nil, false
	}
	return o.Empty, true
}

// HasEmpty returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObjectMetadata) HasEmpty() bool {
	if o != nil && !IsNil(o.Empty) {
		return true
	}

	return false
}

// SetEmpty gets a reference to the given bool and assigns it to the Empty field.
func (o *EntitledApplicationsResponseObjectMetadata) SetEmpty(v bool) {
	o.Empty = &v
}

func (o EntitledApplicationsResponseObjectMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitledApplicationsResponseObjectMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Empty) {
		toSerialize["empty"] = o.Empty
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EntitledApplicationsResponseObjectMetadata) UnmarshalJSON(data []byte) (err error) {
	varEntitledApplicationsResponseObjectMetadata := _EntitledApplicationsResponseObjectMetadata{}

	err = json.Unmarshal(data, &varEntitledApplicationsResponseObjectMetadata)

	if err != nil {
		return err
	}

	*o = EntitledApplicationsResponseObjectMetadata(varEntitledApplicationsResponseObjectMetadata)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "empty")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEntitledApplicationsResponseObjectMetadata struct {
	value *EntitledApplicationsResponseObjectMetadata
	isSet bool
}

func (v NullableEntitledApplicationsResponseObjectMetadata) Get() *EntitledApplicationsResponseObjectMetadata {
	return v.value
}

func (v *NullableEntitledApplicationsResponseObjectMetadata) Set(val *EntitledApplicationsResponseObjectMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitledApplicationsResponseObjectMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitledApplicationsResponseObjectMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitledApplicationsResponseObjectMetadata(val *EntitledApplicationsResponseObjectMetadata) *NullableEntitledApplicationsResponseObjectMetadata {
	return &NullableEntitledApplicationsResponseObjectMetadata{value: val, isSet: true}
}

func (v NullableEntitledApplicationsResponseObjectMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitledApplicationsResponseObjectMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


