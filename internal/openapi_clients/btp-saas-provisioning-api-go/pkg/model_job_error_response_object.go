/*
SaaS Provisioning Service

The SAP SaaS Provisioning service provides REST APIs that are responsible for the registration and provisioning of multitenant applications and services.   Use the APIs in this service to perform various operations related to your multitenant applications and services. For example, to get application registration details, subscribe a tenant to your application, unsubscribe a tenant from your application, retrieve all your application subscriptions, update subscription dependencies, and to get subscription job information. Note: \"Application Operations for App Providers\" APIs are intended for maintenance activities, not for runtime flows.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the JobErrorResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobErrorResponseObject{}

// JobErrorResponseObject Error message when the state is FAILED.
type JobErrorResponseObject struct {
	// Description of the error.
	Error *string `json:"error,omitempty"`
	// The runtime exception for the error.
	Exception *string `json:"exception,omitempty"`
	// The message associated with the current error.
	Message *string `json:"message,omitempty"`
	// Path of the exception received from the server.
	Paths *string `json:"paths,omitempty"`
	// Error status code.
	Status *int32 `json:"status,omitempty"`
	// Timestamp of the error.
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

// NewJobErrorResponseObject instantiates a new JobErrorResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobErrorResponseObject() *JobErrorResponseObject {
	this := JobErrorResponseObject{}
	return &this
}

// NewJobErrorResponseObjectWithDefaults instantiates a new JobErrorResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobErrorResponseObjectWithDefaults() *JobErrorResponseObject {
	this := JobErrorResponseObject{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *JobErrorResponseObject) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobErrorResponseObject) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *JobErrorResponseObject) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *JobErrorResponseObject) SetError(v string) {
	o.Error = &v
}

// GetException returns the Exception field value if set, zero value otherwise.
func (o *JobErrorResponseObject) GetException() string {
	if o == nil || IsNil(o.Exception) {
		var ret string
		return ret
	}
	return *o.Exception
}

// GetExceptionOk returns a tuple with the Exception field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobErrorResponseObject) GetExceptionOk() (*string, bool) {
	if o == nil || IsNil(o.Exception) {
		return nil, false
	}
	return o.Exception, true
}

// HasException returns a boolean if a field has been set.
func (o *JobErrorResponseObject) HasException() bool {
	if o != nil && !IsNil(o.Exception) {
		return true
	}

	return false
}

// SetException gets a reference to the given string and assigns it to the Exception field.
func (o *JobErrorResponseObject) SetException(v string) {
	o.Exception = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *JobErrorResponseObject) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobErrorResponseObject) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *JobErrorResponseObject) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *JobErrorResponseObject) SetMessage(v string) {
	o.Message = &v
}

// GetPaths returns the Paths field value if set, zero value otherwise.
func (o *JobErrorResponseObject) GetPaths() string {
	if o == nil || IsNil(o.Paths) {
		var ret string
		return ret
	}
	return *o.Paths
}

// GetPathsOk returns a tuple with the Paths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobErrorResponseObject) GetPathsOk() (*string, bool) {
	if o == nil || IsNil(o.Paths) {
		return nil, false
	}
	return o.Paths, true
}

// HasPaths returns a boolean if a field has been set.
func (o *JobErrorResponseObject) HasPaths() bool {
	if o != nil && !IsNil(o.Paths) {
		return true
	}

	return false
}

// SetPaths gets a reference to the given string and assigns it to the Paths field.
func (o *JobErrorResponseObject) SetPaths(v string) {
	o.Paths = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *JobErrorResponseObject) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobErrorResponseObject) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *JobErrorResponseObject) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *JobErrorResponseObject) SetStatus(v int32) {
	o.Status = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *JobErrorResponseObject) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobErrorResponseObject) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *JobErrorResponseObject) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *JobErrorResponseObject) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o JobErrorResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobErrorResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Exception) {
		toSerialize["exception"] = o.Exception
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Paths) {
		toSerialize["paths"] = o.Paths
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableJobErrorResponseObject struct {
	value *JobErrorResponseObject
	isSet bool
}

func (v NullableJobErrorResponseObject) Get() *JobErrorResponseObject {
	return v.value
}

func (v *NullableJobErrorResponseObject) Set(val *JobErrorResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableJobErrorResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableJobErrorResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobErrorResponseObject(val *JobErrorResponseObject) *NullableJobErrorResponseObject {
	return &NullableJobErrorResponseObject{value: val, isSet: true}
}

func (v NullableJobErrorResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobErrorResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


