/*
SaaS Provisioning Service

The SAP SaaS Provisioning service provides REST APIs that are responsible for the registration and provisioning of multitenant applications and services.   Use the APIs in this service to perform various operations related to your multitenant applications and services. For example, to get application registration details, subscribe a tenant to your application, unsubscribe a tenant from your application, retrieve all your application subscriptions, update subscription dependencies, and to get subscription job information. Note: \"Application Operations for App Providers\" APIs are intended for maintenance activities, not for runtime flows.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the JobStatusResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobStatusResponseObject{}

// JobStatusResponseObject struct for JobStatusResponseObject
type JobStatusResponseObject struct {
	CustomParams map[string]map[string]interface{} `json:"customParams,omitempty"`
	// A description of the exit status of a job when it ends.
	Description string `json:"description"`
	JobParams *map[string]JobParameter `json:"jobParams,omitempty"`
	// The current state of the job.  * <b>IN_PROGRESS:</b> The job is being executed. * <b>COMPLETED:</b> The job has completed. * <b>FAILED:</b> The job failed and did not complete. The job can be restarted.
	Status string `json:"status"`
	StatusDetails map[string]map[string]interface{} `json:"statusDetails,omitempty"`
}

type _JobStatusResponseObject JobStatusResponseObject

// NewJobStatusResponseObject instantiates a new JobStatusResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobStatusResponseObject(description string, status string) *JobStatusResponseObject {
	this := JobStatusResponseObject{}
	this.Description = description
	this.Status = status
	return &this
}

// NewJobStatusResponseObjectWithDefaults instantiates a new JobStatusResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobStatusResponseObjectWithDefaults() *JobStatusResponseObject {
	this := JobStatusResponseObject{}
	return &this
}

// GetCustomParams returns the CustomParams field value if set, zero value otherwise.
func (o *JobStatusResponseObject) GetCustomParams() map[string]map[string]interface{} {
	if o == nil || IsNil(o.CustomParams) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.CustomParams
}

// GetCustomParamsOk returns a tuple with the CustomParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStatusResponseObject) GetCustomParamsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomParams) {
		return map[string]map[string]interface{}{}, false
	}
	return o.CustomParams, true
}

// HasCustomParams returns a boolean if a field has been set.
func (o *JobStatusResponseObject) HasCustomParams() bool {
	if o != nil && !IsNil(o.CustomParams) {
		return true
	}

	return false
}

// SetCustomParams gets a reference to the given map[string]map[string]interface{} and assigns it to the CustomParams field.
func (o *JobStatusResponseObject) SetCustomParams(v map[string]map[string]interface{}) {
	o.CustomParams = v
}

// GetDescription returns the Description field value
func (o *JobStatusResponseObject) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *JobStatusResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *JobStatusResponseObject) SetDescription(v string) {
	o.Description = v
}

// GetJobParams returns the JobParams field value if set, zero value otherwise.
func (o *JobStatusResponseObject) GetJobParams() map[string]JobParameter {
	if o == nil || IsNil(o.JobParams) {
		var ret map[string]JobParameter
		return ret
	}
	return *o.JobParams
}

// GetJobParamsOk returns a tuple with the JobParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStatusResponseObject) GetJobParamsOk() (*map[string]JobParameter, bool) {
	if o == nil || IsNil(o.JobParams) {
		return nil, false
	}
	return o.JobParams, true
}

// HasJobParams returns a boolean if a field has been set.
func (o *JobStatusResponseObject) HasJobParams() bool {
	if o != nil && !IsNil(o.JobParams) {
		return true
	}

	return false
}

// SetJobParams gets a reference to the given map[string]JobParameter and assigns it to the JobParams field.
func (o *JobStatusResponseObject) SetJobParams(v map[string]JobParameter) {
	o.JobParams = &v
}

// GetStatus returns the Status field value
func (o *JobStatusResponseObject) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *JobStatusResponseObject) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *JobStatusResponseObject) SetStatus(v string) {
	o.Status = v
}

// GetStatusDetails returns the StatusDetails field value if set, zero value otherwise.
func (o *JobStatusResponseObject) GetStatusDetails() map[string]map[string]interface{} {
	if o == nil || IsNil(o.StatusDetails) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.StatusDetails
}

// GetStatusDetailsOk returns a tuple with the StatusDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStatusResponseObject) GetStatusDetailsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.StatusDetails) {
		return map[string]map[string]interface{}{}, false
	}
	return o.StatusDetails, true
}

// HasStatusDetails returns a boolean if a field has been set.
func (o *JobStatusResponseObject) HasStatusDetails() bool {
	if o != nil && !IsNil(o.StatusDetails) {
		return true
	}

	return false
}

// SetStatusDetails gets a reference to the given map[string]map[string]interface{} and assigns it to the StatusDetails field.
func (o *JobStatusResponseObject) SetStatusDetails(v map[string]map[string]interface{}) {
	o.StatusDetails = v
}

func (o JobStatusResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobStatusResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomParams) {
		toSerialize["customParams"] = o.CustomParams
	}
	toSerialize["description"] = o.Description
	if !IsNil(o.JobParams) {
		toSerialize["jobParams"] = o.JobParams
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.StatusDetails) {
		toSerialize["statusDetails"] = o.StatusDetails
	}
	return toSerialize, nil
}

func (o *JobStatusResponseObject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJobStatusResponseObject := _JobStatusResponseObject{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varJobStatusResponseObject)

	if err != nil {
		return err
	}

	*o = JobStatusResponseObject(varJobStatusResponseObject)

	return err
}

type NullableJobStatusResponseObject struct {
	value *JobStatusResponseObject
	isSet bool
}

func (v NullableJobStatusResponseObject) Get() *JobStatusResponseObject {
	return v.value
}

func (v *NullableJobStatusResponseObject) Set(val *JobStatusResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableJobStatusResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableJobStatusResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobStatusResponseObject(val *JobStatusResponseObject) *NullableJobStatusResponseObject {
	return &NullableJobStatusResponseObject{value: val, isSet: true}
}

func (v NullableJobStatusResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobStatusResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


