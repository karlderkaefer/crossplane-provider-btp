/*
SaaS Provisioning Service

The SAP SaaS Provisioning service provides REST APIs that are responsible for the registration and provisioning of multitenant applications and services.   Use the APIs in this service to perform various operations related to your multitenant applications and services. For example, to get application registration details, subscribe a tenant to your application, unsubscribe a tenant from your application, retrieve all your application subscriptions, update subscription dependencies, and to get subscription job information. Note: \"Application Operations for App Providers\" APIs are intended for maintenance activities, not for runtime flows.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntitledApplicationsResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitledApplicationsResponseObject{}

// EntitledApplicationsResponseObject The response  list of all the multitenant applications to which a specified subaccount is entitled to subscribe.
type EntitledApplicationsResponseObject struct {
	// The list of features specific to this plan.
	AdditionalPlanFeatures []string `json:"additionalPlanFeatures,omitempty"`
	// List of plans to which the existing subscription can switch. Includes upgrades, downgrades, and other types of transitions.
	AllowedTargetPlans []string `json:"allowedTargetPlans,omitempty"`
	// The ID returned by XSUAA after the app provider has performed a bind of the multitenant application to a XSUAA service instance.
	AppId *string `json:"appId,omitempty"`
	// The unique registration name of the deployed multitenant application as defined by the app developer.
	AppName *string `json:"appName,omitempty"`
	// The application coordinates provided in metadata for customer-facing UIs.
	ApplicationCoordinates map[string]interface{} `json:"applicationCoordinates,omitempty"`
	ApplicationResource *ApplicationResourceDto `json:"applicationResource,omitempty"`
	// The authentication provider of the multitenant application. * XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level. * IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services). 
	AuthenticationProvider *string `json:"authenticationProvider,omitempty"`
	// The state of the automation solution.
	AutomationState *string `json:"automationState,omitempty"`
	// The message that describes the automation solution state.
	AutomationStateMessage *string `json:"automationStateMessage,omitempty"`
	// The technical name of the category defined by the app developer to which the multitenant application is grouped in customer-facing UIs.
	Category *string `json:"category,omitempty"`
	// The display name of the category for customer-facing UIs.
	CategoryDisplayName *string `json:"categoryDisplayName,omitempty"`
	// The commercial name of the deployed multitenant application as defined by the app developer.
	CommercialAppName *string `json:"commercialAppName,omitempty"`
	// Details about the user or client that created this subscription.
	CreatedBy *string `json:"createdBy,omitempty"`
	// The date the subscription was created. Dates and times are in UTC format.
	CreatedDate *float32 `json:"createdDate,omitempty"`
	// Whether the application was developed by a customer. If not, then the application is developed by the cloud operator, such as SAP.
	CustomerDeveloped *bool `json:"customerDeveloped,omitempty"`
	// The description of the multitenant application for customer-facing UIs.
	Description *string `json:"description,omitempty"`
	// The display name of the application for customer-facing UIs.
	DisplayName *string `json:"displayName,omitempty"`
	// Name of the formations solution associated with the multitenant application.
	FormationSolutionName *string `json:"formationSolutionName,omitempty"`
	// ID of the associated global account.
	GlobalAccountId *string `json:"globalAccountId,omitempty"`
	// The icon of the multitenant application for customer-facing UIs.
	IconBase64 *string `json:"iconBase64,omitempty"`
	// The application's incident-tracking component provided in metadata for customer-facing UIs.
	IncidentTrackingComponent *string `json:"incidentTrackingComponent,omitempty"`
	// User-defined labels that are assigned as key-value pairs in a JSON array to the multitenant application subscription.   Example:  {    \"Cost Center\": [\"19700626\"],    \"Department\": [\"Sales\"],    \"Contacts\": [\"name1@example.com\",\"name2@example.com\"],    \"EMEA\":[]  }
	Labels map[string]interface{} `json:"labels,omitempty"`
	Metadata *EntitledApplicationsResponseObjectMetadata `json:"metadata,omitempty"`
	// Details about the user or client that last modified this subscription.
	ModifiedBy *string `json:"modifiedBy,omitempty"`
	// The date the subscription was last modified. Dates and times are in UTC format.
	ModifiedDate *float32 `json:"modifiedDate,omitempty"`
	ParamsSchema *EntitledApplicationsResponseObjectParamsSchema `json:"paramsSchema,omitempty"`
	// The description of the plan for customer-facing UIs.
	PlanDescription *string `json:"planDescription,omitempty"`
	// The plan name of the application to which the consumer has subscribed.
	PlanName *string `json:"planName,omitempty"`
	// ID of the landscape-specific environment.
	PlatformEntityId *string `json:"platformEntityId,omitempty"`
	// Total amount the subscribed subaccount is entitled to consume.
	Quota *int32 `json:"quota,omitempty"`
	// The short description of the multitenant application for customer-facing UIs.
	ShortDescription *string `json:"shortDescription,omitempty"`
	// The subscription state of the subaccount regarding the multitenant application.
	State *string `json:"state,omitempty"`
	// The ID of the subaccount which is subscribed to the multitenant application.
	SubscribedSubaccountId *string `json:"subscribedSubaccountId,omitempty"`
	// The ID of the tenant which is subscribed to a multitenant application.
	SubscribedTenantId *string `json:"subscribedTenantId,omitempty"`
	SubscriptionError *EntitledApplicationsErrorResponseObject `json:"subscriptionError,omitempty"`
	// Unique subscription ID associated with the instance of the dependent service to be used for future references, such as 'GET all subscriptions' API call.
	SubscriptionGUID *string `json:"subscriptionGUID,omitempty"`
	// Technical ID generated by XSUAA for a multitenant application when a consumer subscribes to the application.
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	// URL for app users to launch the subscribed application.
	SubscriptionUrl *string `json:"subscriptionUrl,omitempty"`
	// Specifies whether a subaccount can provide its subscriptions parameters.
	SupportsGetParameters *bool `json:"supportsGetParameters,omitempty"`
	// Specifies whether a consumer, whose subaccount is subscribed to the application, can change its subscriptions parameters.
	SupportsParametersUpdates *bool `json:"supportsParametersUpdates,omitempty"`
	// Specifies if a consumer, whose subaccount is subscribed to the application, can change the subscription to a different plan that is available for this application and subaccount.
	SupportsPlanUpdates *bool `json:"supportsPlanUpdates,omitempty"`
	// Tenant ID of the application provider.
	TenantId *string `json:"tenantId,omitempty"`
}

// NewEntitledApplicationsResponseObject instantiates a new EntitledApplicationsResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitledApplicationsResponseObject() *EntitledApplicationsResponseObject {
	this := EntitledApplicationsResponseObject{}
	return &this
}

// NewEntitledApplicationsResponseObjectWithDefaults instantiates a new EntitledApplicationsResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitledApplicationsResponseObjectWithDefaults() *EntitledApplicationsResponseObject {
	this := EntitledApplicationsResponseObject{}
	return &this
}

// GetAdditionalPlanFeatures returns the AdditionalPlanFeatures field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetAdditionalPlanFeatures() []string {
	if o == nil || IsNil(o.AdditionalPlanFeatures) {
		var ret []string
		return ret
	}
	return o.AdditionalPlanFeatures
}

// GetAdditionalPlanFeaturesOk returns a tuple with the AdditionalPlanFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetAdditionalPlanFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalPlanFeatures) {
		return nil, false
	}
	return o.AdditionalPlanFeatures, true
}

// HasAdditionalPlanFeatures returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasAdditionalPlanFeatures() bool {
	if o != nil && !IsNil(o.AdditionalPlanFeatures) {
		return true
	}

	return false
}

// SetAdditionalPlanFeatures gets a reference to the given []string and assigns it to the AdditionalPlanFeatures field.
func (o *EntitledApplicationsResponseObject) SetAdditionalPlanFeatures(v []string) {
	o.AdditionalPlanFeatures = v
}

// GetAllowedTargetPlans returns the AllowedTargetPlans field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetAllowedTargetPlans() []string {
	if o == nil || IsNil(o.AllowedTargetPlans) {
		var ret []string
		return ret
	}
	return o.AllowedTargetPlans
}

// GetAllowedTargetPlansOk returns a tuple with the AllowedTargetPlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetAllowedTargetPlansOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedTargetPlans) {
		return nil, false
	}
	return o.AllowedTargetPlans, true
}

// HasAllowedTargetPlans returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasAllowedTargetPlans() bool {
	if o != nil && !IsNil(o.AllowedTargetPlans) {
		return true
	}

	return false
}

// SetAllowedTargetPlans gets a reference to the given []string and assigns it to the AllowedTargetPlans field.
func (o *EntitledApplicationsResponseObject) SetAllowedTargetPlans(v []string) {
	o.AllowedTargetPlans = v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *EntitledApplicationsResponseObject) SetAppId(v string) {
	o.AppId = &v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *EntitledApplicationsResponseObject) SetAppName(v string) {
	o.AppName = &v
}

// GetApplicationCoordinates returns the ApplicationCoordinates field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetApplicationCoordinates() map[string]interface{} {
	if o == nil || IsNil(o.ApplicationCoordinates) {
		var ret map[string]interface{}
		return ret
	}
	return o.ApplicationCoordinates
}

// GetApplicationCoordinatesOk returns a tuple with the ApplicationCoordinates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetApplicationCoordinatesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ApplicationCoordinates) {
		return map[string]interface{}{}, false
	}
	return o.ApplicationCoordinates, true
}

// HasApplicationCoordinates returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasApplicationCoordinates() bool {
	if o != nil && !IsNil(o.ApplicationCoordinates) {
		return true
	}

	return false
}

// SetApplicationCoordinates gets a reference to the given map[string]interface{} and assigns it to the ApplicationCoordinates field.
func (o *EntitledApplicationsResponseObject) SetApplicationCoordinates(v map[string]interface{}) {
	o.ApplicationCoordinates = v
}

// GetApplicationResource returns the ApplicationResource field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetApplicationResource() ApplicationResourceDto {
	if o == nil || IsNil(o.ApplicationResource) {
		var ret ApplicationResourceDto
		return ret
	}
	return *o.ApplicationResource
}

// GetApplicationResourceOk returns a tuple with the ApplicationResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetApplicationResourceOk() (*ApplicationResourceDto, bool) {
	if o == nil || IsNil(o.ApplicationResource) {
		return nil, false
	}
	return o.ApplicationResource, true
}

// HasApplicationResource returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasApplicationResource() bool {
	if o != nil && !IsNil(o.ApplicationResource) {
		return true
	}

	return false
}

// SetApplicationResource gets a reference to the given ApplicationResourceDto and assigns it to the ApplicationResource field.
func (o *EntitledApplicationsResponseObject) SetApplicationResource(v ApplicationResourceDto) {
	o.ApplicationResource = &v
}

// GetAuthenticationProvider returns the AuthenticationProvider field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetAuthenticationProvider() string {
	if o == nil || IsNil(o.AuthenticationProvider) {
		var ret string
		return ret
	}
	return *o.AuthenticationProvider
}

// GetAuthenticationProviderOk returns a tuple with the AuthenticationProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetAuthenticationProviderOk() (*string, bool) {
	if o == nil || IsNil(o.AuthenticationProvider) {
		return nil, false
	}
	return o.AuthenticationProvider, true
}

// HasAuthenticationProvider returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasAuthenticationProvider() bool {
	if o != nil && !IsNil(o.AuthenticationProvider) {
		return true
	}

	return false
}

// SetAuthenticationProvider gets a reference to the given string and assigns it to the AuthenticationProvider field.
func (o *EntitledApplicationsResponseObject) SetAuthenticationProvider(v string) {
	o.AuthenticationProvider = &v
}

// GetAutomationState returns the AutomationState field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetAutomationState() string {
	if o == nil || IsNil(o.AutomationState) {
		var ret string
		return ret
	}
	return *o.AutomationState
}

// GetAutomationStateOk returns a tuple with the AutomationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetAutomationStateOk() (*string, bool) {
	if o == nil || IsNil(o.AutomationState) {
		return nil, false
	}
	return o.AutomationState, true
}

// HasAutomationState returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasAutomationState() bool {
	if o != nil && !IsNil(o.AutomationState) {
		return true
	}

	return false
}

// SetAutomationState gets a reference to the given string and assigns it to the AutomationState field.
func (o *EntitledApplicationsResponseObject) SetAutomationState(v string) {
	o.AutomationState = &v
}

// GetAutomationStateMessage returns the AutomationStateMessage field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetAutomationStateMessage() string {
	if o == nil || IsNil(o.AutomationStateMessage) {
		var ret string
		return ret
	}
	return *o.AutomationStateMessage
}

// GetAutomationStateMessageOk returns a tuple with the AutomationStateMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetAutomationStateMessageOk() (*string, bool) {
	if o == nil || IsNil(o.AutomationStateMessage) {
		return nil, false
	}
	return o.AutomationStateMessage, true
}

// HasAutomationStateMessage returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasAutomationStateMessage() bool {
	if o != nil && !IsNil(o.AutomationStateMessage) {
		return true
	}

	return false
}

// SetAutomationStateMessage gets a reference to the given string and assigns it to the AutomationStateMessage field.
func (o *EntitledApplicationsResponseObject) SetAutomationStateMessage(v string) {
	o.AutomationStateMessage = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *EntitledApplicationsResponseObject) SetCategory(v string) {
	o.Category = &v
}

// GetCategoryDisplayName returns the CategoryDisplayName field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetCategoryDisplayName() string {
	if o == nil || IsNil(o.CategoryDisplayName) {
		var ret string
		return ret
	}
	return *o.CategoryDisplayName
}

// GetCategoryDisplayNameOk returns a tuple with the CategoryDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetCategoryDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.CategoryDisplayName) {
		return nil, false
	}
	return o.CategoryDisplayName, true
}

// HasCategoryDisplayName returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasCategoryDisplayName() bool {
	if o != nil && !IsNil(o.CategoryDisplayName) {
		return true
	}

	return false
}

// SetCategoryDisplayName gets a reference to the given string and assigns it to the CategoryDisplayName field.
func (o *EntitledApplicationsResponseObject) SetCategoryDisplayName(v string) {
	o.CategoryDisplayName = &v
}

// GetCommercialAppName returns the CommercialAppName field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetCommercialAppName() string {
	if o == nil || IsNil(o.CommercialAppName) {
		var ret string
		return ret
	}
	return *o.CommercialAppName
}

// GetCommercialAppNameOk returns a tuple with the CommercialAppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetCommercialAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.CommercialAppName) {
		return nil, false
	}
	return o.CommercialAppName, true
}

// HasCommercialAppName returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasCommercialAppName() bool {
	if o != nil && !IsNil(o.CommercialAppName) {
		return true
	}

	return false
}

// SetCommercialAppName gets a reference to the given string and assigns it to the CommercialAppName field.
func (o *EntitledApplicationsResponseObject) SetCommercialAppName(v string) {
	o.CommercialAppName = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *EntitledApplicationsResponseObject) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetCreatedDate() float32 {
	if o == nil || IsNil(o.CreatedDate) {
		var ret float32
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetCreatedDateOk() (*float32, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given float32 and assigns it to the CreatedDate field.
func (o *EntitledApplicationsResponseObject) SetCreatedDate(v float32) {
	o.CreatedDate = &v
}

// GetCustomerDeveloped returns the CustomerDeveloped field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetCustomerDeveloped() bool {
	if o == nil || IsNil(o.CustomerDeveloped) {
		var ret bool
		return ret
	}
	return *o.CustomerDeveloped
}

// GetCustomerDevelopedOk returns a tuple with the CustomerDeveloped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetCustomerDevelopedOk() (*bool, bool) {
	if o == nil || IsNil(o.CustomerDeveloped) {
		return nil, false
	}
	return o.CustomerDeveloped, true
}

// HasCustomerDeveloped returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasCustomerDeveloped() bool {
	if o != nil && !IsNil(o.CustomerDeveloped) {
		return true
	}

	return false
}

// SetCustomerDeveloped gets a reference to the given bool and assigns it to the CustomerDeveloped field.
func (o *EntitledApplicationsResponseObject) SetCustomerDeveloped(v bool) {
	o.CustomerDeveloped = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *EntitledApplicationsResponseObject) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *EntitledApplicationsResponseObject) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetFormationSolutionName returns the FormationSolutionName field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetFormationSolutionName() string {
	if o == nil || IsNil(o.FormationSolutionName) {
		var ret string
		return ret
	}
	return *o.FormationSolutionName
}

// GetFormationSolutionNameOk returns a tuple with the FormationSolutionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetFormationSolutionNameOk() (*string, bool) {
	if o == nil || IsNil(o.FormationSolutionName) {
		return nil, false
	}
	return o.FormationSolutionName, true
}

// HasFormationSolutionName returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasFormationSolutionName() bool {
	if o != nil && !IsNil(o.FormationSolutionName) {
		return true
	}

	return false
}

// SetFormationSolutionName gets a reference to the given string and assigns it to the FormationSolutionName field.
func (o *EntitledApplicationsResponseObject) SetFormationSolutionName(v string) {
	o.FormationSolutionName = &v
}

// GetGlobalAccountId returns the GlobalAccountId field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetGlobalAccountId() string {
	if o == nil || IsNil(o.GlobalAccountId) {
		var ret string
		return ret
	}
	return *o.GlobalAccountId
}

// GetGlobalAccountIdOk returns a tuple with the GlobalAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetGlobalAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalAccountId) {
		return nil, false
	}
	return o.GlobalAccountId, true
}

// HasGlobalAccountId returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasGlobalAccountId() bool {
	if o != nil && !IsNil(o.GlobalAccountId) {
		return true
	}

	return false
}

// SetGlobalAccountId gets a reference to the given string and assigns it to the GlobalAccountId field.
func (o *EntitledApplicationsResponseObject) SetGlobalAccountId(v string) {
	o.GlobalAccountId = &v
}

// GetIconBase64 returns the IconBase64 field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetIconBase64() string {
	if o == nil || IsNil(o.IconBase64) {
		var ret string
		return ret
	}
	return *o.IconBase64
}

// GetIconBase64Ok returns a tuple with the IconBase64 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetIconBase64Ok() (*string, bool) {
	if o == nil || IsNil(o.IconBase64) {
		return nil, false
	}
	return o.IconBase64, true
}

// HasIconBase64 returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasIconBase64() bool {
	if o != nil && !IsNil(o.IconBase64) {
		return true
	}

	return false
}

// SetIconBase64 gets a reference to the given string and assigns it to the IconBase64 field.
func (o *EntitledApplicationsResponseObject) SetIconBase64(v string) {
	o.IconBase64 = &v
}

// GetIncidentTrackingComponent returns the IncidentTrackingComponent field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetIncidentTrackingComponent() string {
	if o == nil || IsNil(o.IncidentTrackingComponent) {
		var ret string
		return ret
	}
	return *o.IncidentTrackingComponent
}

// GetIncidentTrackingComponentOk returns a tuple with the IncidentTrackingComponent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetIncidentTrackingComponentOk() (*string, bool) {
	if o == nil || IsNil(o.IncidentTrackingComponent) {
		return nil, false
	}
	return o.IncidentTrackingComponent, true
}

// HasIncidentTrackingComponent returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasIncidentTrackingComponent() bool {
	if o != nil && !IsNil(o.IncidentTrackingComponent) {
		return true
	}

	return false
}

// SetIncidentTrackingComponent gets a reference to the given string and assigns it to the IncidentTrackingComponent field.
func (o *EntitledApplicationsResponseObject) SetIncidentTrackingComponent(v string) {
	o.IncidentTrackingComponent = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetLabels() map[string]interface{} {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]interface{}
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetLabelsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Labels) {
		return map[string]interface{}{}, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]interface{} and assigns it to the Labels field.
func (o *EntitledApplicationsResponseObject) SetLabels(v map[string]interface{}) {
	o.Labels = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetMetadata() EntitledApplicationsResponseObjectMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret EntitledApplicationsResponseObjectMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetMetadataOk() (*EntitledApplicationsResponseObjectMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given EntitledApplicationsResponseObjectMetadata and assigns it to the Metadata field.
func (o *EntitledApplicationsResponseObject) SetMetadata(v EntitledApplicationsResponseObjectMetadata) {
	o.Metadata = &v
}

// GetModifiedBy returns the ModifiedBy field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetModifiedBy() string {
	if o == nil || IsNil(o.ModifiedBy) {
		var ret string
		return ret
	}
	return *o.ModifiedBy
}

// GetModifiedByOk returns a tuple with the ModifiedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetModifiedByOk() (*string, bool) {
	if o == nil || IsNil(o.ModifiedBy) {
		return nil, false
	}
	return o.ModifiedBy, true
}

// HasModifiedBy returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasModifiedBy() bool {
	if o != nil && !IsNil(o.ModifiedBy) {
		return true
	}

	return false
}

// SetModifiedBy gets a reference to the given string and assigns it to the ModifiedBy field.
func (o *EntitledApplicationsResponseObject) SetModifiedBy(v string) {
	o.ModifiedBy = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetModifiedDate() float32 {
	if o == nil || IsNil(o.ModifiedDate) {
		var ret float32
		return ret
	}
	return *o.ModifiedDate
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetModifiedDateOk() (*float32, bool) {
	if o == nil || IsNil(o.ModifiedDate) {
		return nil, false
	}
	return o.ModifiedDate, true
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasModifiedDate() bool {
	if o != nil && !IsNil(o.ModifiedDate) {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given float32 and assigns it to the ModifiedDate field.
func (o *EntitledApplicationsResponseObject) SetModifiedDate(v float32) {
	o.ModifiedDate = &v
}

// GetParamsSchema returns the ParamsSchema field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetParamsSchema() EntitledApplicationsResponseObjectParamsSchema {
	if o == nil || IsNil(o.ParamsSchema) {
		var ret EntitledApplicationsResponseObjectParamsSchema
		return ret
	}
	return *o.ParamsSchema
}

// GetParamsSchemaOk returns a tuple with the ParamsSchema field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetParamsSchemaOk() (*EntitledApplicationsResponseObjectParamsSchema, bool) {
	if o == nil || IsNil(o.ParamsSchema) {
		return nil, false
	}
	return o.ParamsSchema, true
}

// HasParamsSchema returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasParamsSchema() bool {
	if o != nil && !IsNil(o.ParamsSchema) {
		return true
	}

	return false
}

// SetParamsSchema gets a reference to the given EntitledApplicationsResponseObjectParamsSchema and assigns it to the ParamsSchema field.
func (o *EntitledApplicationsResponseObject) SetParamsSchema(v EntitledApplicationsResponseObjectParamsSchema) {
	o.ParamsSchema = &v
}

// GetPlanDescription returns the PlanDescription field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetPlanDescription() string {
	if o == nil || IsNil(o.PlanDescription) {
		var ret string
		return ret
	}
	return *o.PlanDescription
}

// GetPlanDescriptionOk returns a tuple with the PlanDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetPlanDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.PlanDescription) {
		return nil, false
	}
	return o.PlanDescription, true
}

// HasPlanDescription returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasPlanDescription() bool {
	if o != nil && !IsNil(o.PlanDescription) {
		return true
	}

	return false
}

// SetPlanDescription gets a reference to the given string and assigns it to the PlanDescription field.
func (o *EntitledApplicationsResponseObject) SetPlanDescription(v string) {
	o.PlanDescription = &v
}

// GetPlanName returns the PlanName field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetPlanName() string {
	if o == nil || IsNil(o.PlanName) {
		var ret string
		return ret
	}
	return *o.PlanName
}

// GetPlanNameOk returns a tuple with the PlanName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetPlanNameOk() (*string, bool) {
	if o == nil || IsNil(o.PlanName) {
		return nil, false
	}
	return o.PlanName, true
}

// HasPlanName returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasPlanName() bool {
	if o != nil && !IsNil(o.PlanName) {
		return true
	}

	return false
}

// SetPlanName gets a reference to the given string and assigns it to the PlanName field.
func (o *EntitledApplicationsResponseObject) SetPlanName(v string) {
	o.PlanName = &v
}

// GetPlatformEntityId returns the PlatformEntityId field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetPlatformEntityId() string {
	if o == nil || IsNil(o.PlatformEntityId) {
		var ret string
		return ret
	}
	return *o.PlatformEntityId
}

// GetPlatformEntityIdOk returns a tuple with the PlatformEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetPlatformEntityIdOk() (*string, bool) {
	if o == nil || IsNil(o.PlatformEntityId) {
		return nil, false
	}
	return o.PlatformEntityId, true
}

// HasPlatformEntityId returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasPlatformEntityId() bool {
	if o != nil && !IsNil(o.PlatformEntityId) {
		return true
	}

	return false
}

// SetPlatformEntityId gets a reference to the given string and assigns it to the PlatformEntityId field.
func (o *EntitledApplicationsResponseObject) SetPlatformEntityId(v string) {
	o.PlatformEntityId = &v
}

// GetQuota returns the Quota field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetQuota() int32 {
	if o == nil || IsNil(o.Quota) {
		var ret int32
		return ret
	}
	return *o.Quota
}

// GetQuotaOk returns a tuple with the Quota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetQuotaOk() (*int32, bool) {
	if o == nil || IsNil(o.Quota) {
		return nil, false
	}
	return o.Quota, true
}

// HasQuota returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasQuota() bool {
	if o != nil && !IsNil(o.Quota) {
		return true
	}

	return false
}

// SetQuota gets a reference to the given int32 and assigns it to the Quota field.
func (o *EntitledApplicationsResponseObject) SetQuota(v int32) {
	o.Quota = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *EntitledApplicationsResponseObject) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *EntitledApplicationsResponseObject) SetState(v string) {
	o.State = &v
}

// GetSubscribedSubaccountId returns the SubscribedSubaccountId field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetSubscribedSubaccountId() string {
	if o == nil || IsNil(o.SubscribedSubaccountId) {
		var ret string
		return ret
	}
	return *o.SubscribedSubaccountId
}

// GetSubscribedSubaccountIdOk returns a tuple with the SubscribedSubaccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetSubscribedSubaccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribedSubaccountId) {
		return nil, false
	}
	return o.SubscribedSubaccountId, true
}

// HasSubscribedSubaccountId returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasSubscribedSubaccountId() bool {
	if o != nil && !IsNil(o.SubscribedSubaccountId) {
		return true
	}

	return false
}

// SetSubscribedSubaccountId gets a reference to the given string and assigns it to the SubscribedSubaccountId field.
func (o *EntitledApplicationsResponseObject) SetSubscribedSubaccountId(v string) {
	o.SubscribedSubaccountId = &v
}

// GetSubscribedTenantId returns the SubscribedTenantId field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetSubscribedTenantId() string {
	if o == nil || IsNil(o.SubscribedTenantId) {
		var ret string
		return ret
	}
	return *o.SubscribedTenantId
}

// GetSubscribedTenantIdOk returns a tuple with the SubscribedTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetSubscribedTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscribedTenantId) {
		return nil, false
	}
	return o.SubscribedTenantId, true
}

// HasSubscribedTenantId returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasSubscribedTenantId() bool {
	if o != nil && !IsNil(o.SubscribedTenantId) {
		return true
	}

	return false
}

// SetSubscribedTenantId gets a reference to the given string and assigns it to the SubscribedTenantId field.
func (o *EntitledApplicationsResponseObject) SetSubscribedTenantId(v string) {
	o.SubscribedTenantId = &v
}

// GetSubscriptionError returns the SubscriptionError field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetSubscriptionError() EntitledApplicationsErrorResponseObject {
	if o == nil || IsNil(o.SubscriptionError) {
		var ret EntitledApplicationsErrorResponseObject
		return ret
	}
	return *o.SubscriptionError
}

// GetSubscriptionErrorOk returns a tuple with the SubscriptionError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetSubscriptionErrorOk() (*EntitledApplicationsErrorResponseObject, bool) {
	if o == nil || IsNil(o.SubscriptionError) {
		return nil, false
	}
	return o.SubscriptionError, true
}

// HasSubscriptionError returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasSubscriptionError() bool {
	if o != nil && !IsNil(o.SubscriptionError) {
		return true
	}

	return false
}

// SetSubscriptionError gets a reference to the given EntitledApplicationsErrorResponseObject and assigns it to the SubscriptionError field.
func (o *EntitledApplicationsResponseObject) SetSubscriptionError(v EntitledApplicationsErrorResponseObject) {
	o.SubscriptionError = &v
}

// GetSubscriptionGUID returns the SubscriptionGUID field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetSubscriptionGUID() string {
	if o == nil || IsNil(o.SubscriptionGUID) {
		var ret string
		return ret
	}
	return *o.SubscriptionGUID
}

// GetSubscriptionGUIDOk returns a tuple with the SubscriptionGUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetSubscriptionGUIDOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionGUID) {
		return nil, false
	}
	return o.SubscriptionGUID, true
}

// HasSubscriptionGUID returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasSubscriptionGUID() bool {
	if o != nil && !IsNil(o.SubscriptionGUID) {
		return true
	}

	return false
}

// SetSubscriptionGUID gets a reference to the given string and assigns it to the SubscriptionGUID field.
func (o *EntitledApplicationsResponseObject) SetSubscriptionGUID(v string) {
	o.SubscriptionGUID = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *EntitledApplicationsResponseObject) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetSubscriptionUrl returns the SubscriptionUrl field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetSubscriptionUrl() string {
	if o == nil || IsNil(o.SubscriptionUrl) {
		var ret string
		return ret
	}
	return *o.SubscriptionUrl
}

// GetSubscriptionUrlOk returns a tuple with the SubscriptionUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetSubscriptionUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionUrl) {
		return nil, false
	}
	return o.SubscriptionUrl, true
}

// HasSubscriptionUrl returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasSubscriptionUrl() bool {
	if o != nil && !IsNil(o.SubscriptionUrl) {
		return true
	}

	return false
}

// SetSubscriptionUrl gets a reference to the given string and assigns it to the SubscriptionUrl field.
func (o *EntitledApplicationsResponseObject) SetSubscriptionUrl(v string) {
	o.SubscriptionUrl = &v
}

// GetSupportsGetParameters returns the SupportsGetParameters field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetSupportsGetParameters() bool {
	if o == nil || IsNil(o.SupportsGetParameters) {
		var ret bool
		return ret
	}
	return *o.SupportsGetParameters
}

// GetSupportsGetParametersOk returns a tuple with the SupportsGetParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetSupportsGetParametersOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsGetParameters) {
		return nil, false
	}
	return o.SupportsGetParameters, true
}

// HasSupportsGetParameters returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasSupportsGetParameters() bool {
	if o != nil && !IsNil(o.SupportsGetParameters) {
		return true
	}

	return false
}

// SetSupportsGetParameters gets a reference to the given bool and assigns it to the SupportsGetParameters field.
func (o *EntitledApplicationsResponseObject) SetSupportsGetParameters(v bool) {
	o.SupportsGetParameters = &v
}

// GetSupportsParametersUpdates returns the SupportsParametersUpdates field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetSupportsParametersUpdates() bool {
	if o == nil || IsNil(o.SupportsParametersUpdates) {
		var ret bool
		return ret
	}
	return *o.SupportsParametersUpdates
}

// GetSupportsParametersUpdatesOk returns a tuple with the SupportsParametersUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetSupportsParametersUpdatesOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsParametersUpdates) {
		return nil, false
	}
	return o.SupportsParametersUpdates, true
}

// HasSupportsParametersUpdates returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasSupportsParametersUpdates() bool {
	if o != nil && !IsNil(o.SupportsParametersUpdates) {
		return true
	}

	return false
}

// SetSupportsParametersUpdates gets a reference to the given bool and assigns it to the SupportsParametersUpdates field.
func (o *EntitledApplicationsResponseObject) SetSupportsParametersUpdates(v bool) {
	o.SupportsParametersUpdates = &v
}

// GetSupportsPlanUpdates returns the SupportsPlanUpdates field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetSupportsPlanUpdates() bool {
	if o == nil || IsNil(o.SupportsPlanUpdates) {
		var ret bool
		return ret
	}
	return *o.SupportsPlanUpdates
}

// GetSupportsPlanUpdatesOk returns a tuple with the SupportsPlanUpdates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetSupportsPlanUpdatesOk() (*bool, bool) {
	if o == nil || IsNil(o.SupportsPlanUpdates) {
		return nil, false
	}
	return o.SupportsPlanUpdates, true
}

// HasSupportsPlanUpdates returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasSupportsPlanUpdates() bool {
	if o != nil && !IsNil(o.SupportsPlanUpdates) {
		return true
	}

	return false
}

// SetSupportsPlanUpdates gets a reference to the given bool and assigns it to the SupportsPlanUpdates field.
func (o *EntitledApplicationsResponseObject) SetSupportsPlanUpdates(v bool) {
	o.SupportsPlanUpdates = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseObject) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseObject) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseObject) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *EntitledApplicationsResponseObject) SetTenantId(v string) {
	o.TenantId = &v
}

func (o EntitledApplicationsResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitledApplicationsResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalPlanFeatures) {
		toSerialize["additionalPlanFeatures"] = o.AdditionalPlanFeatures
	}
	if !IsNil(o.AllowedTargetPlans) {
		toSerialize["allowedTargetPlans"] = o.AllowedTargetPlans
	}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.AppName) {
		toSerialize["appName"] = o.AppName
	}
	if !IsNil(o.ApplicationCoordinates) {
		toSerialize["applicationCoordinates"] = o.ApplicationCoordinates
	}
	if !IsNil(o.ApplicationResource) {
		toSerialize["applicationResource"] = o.ApplicationResource
	}
	if !IsNil(o.AuthenticationProvider) {
		toSerialize["authenticationProvider"] = o.AuthenticationProvider
	}
	if !IsNil(o.AutomationState) {
		toSerialize["automationState"] = o.AutomationState
	}
	if !IsNil(o.AutomationStateMessage) {
		toSerialize["automationStateMessage"] = o.AutomationStateMessage
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.CategoryDisplayName) {
		toSerialize["categoryDisplayName"] = o.CategoryDisplayName
	}
	if !IsNil(o.CommercialAppName) {
		toSerialize["commercialAppName"] = o.CommercialAppName
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CustomerDeveloped) {
		toSerialize["customerDeveloped"] = o.CustomerDeveloped
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.FormationSolutionName) {
		toSerialize["formationSolutionName"] = o.FormationSolutionName
	}
	if !IsNil(o.GlobalAccountId) {
		toSerialize["globalAccountId"] = o.GlobalAccountId
	}
	if !IsNil(o.IconBase64) {
		toSerialize["iconBase64"] = o.IconBase64
	}
	if !IsNil(o.IncidentTrackingComponent) {
		toSerialize["incidentTrackingComponent"] = o.IncidentTrackingComponent
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.ModifiedBy) {
		toSerialize["modifiedBy"] = o.ModifiedBy
	}
	if !IsNil(o.ModifiedDate) {
		toSerialize["modifiedDate"] = o.ModifiedDate
	}
	if !IsNil(o.ParamsSchema) {
		toSerialize["paramsSchema"] = o.ParamsSchema
	}
	if !IsNil(o.PlanDescription) {
		toSerialize["planDescription"] = o.PlanDescription
	}
	if !IsNil(o.PlanName) {
		toSerialize["planName"] = o.PlanName
	}
	if !IsNil(o.PlatformEntityId) {
		toSerialize["platformEntityId"] = o.PlatformEntityId
	}
	if !IsNil(o.Quota) {
		toSerialize["quota"] = o.Quota
	}
	if !IsNil(o.ShortDescription) {
		toSerialize["shortDescription"] = o.ShortDescription
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.SubscribedSubaccountId) {
		toSerialize["subscribedSubaccountId"] = o.SubscribedSubaccountId
	}
	if !IsNil(o.SubscribedTenantId) {
		toSerialize["subscribedTenantId"] = o.SubscribedTenantId
	}
	if !IsNil(o.SubscriptionError) {
		toSerialize["subscriptionError"] = o.SubscriptionError
	}
	if !IsNil(o.SubscriptionGUID) {
		toSerialize["subscriptionGUID"] = o.SubscriptionGUID
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if !IsNil(o.SubscriptionUrl) {
		toSerialize["subscriptionUrl"] = o.SubscriptionUrl
	}
	if !IsNil(o.SupportsGetParameters) {
		toSerialize["supportsGetParameters"] = o.SupportsGetParameters
	}
	if !IsNil(o.SupportsParametersUpdates) {
		toSerialize["supportsParametersUpdates"] = o.SupportsParametersUpdates
	}
	if !IsNil(o.SupportsPlanUpdates) {
		toSerialize["supportsPlanUpdates"] = o.SupportsPlanUpdates
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	return toSerialize, nil
}

type NullableEntitledApplicationsResponseObject struct {
	value *EntitledApplicationsResponseObject
	isSet bool
}

func (v NullableEntitledApplicationsResponseObject) Get() *EntitledApplicationsResponseObject {
	return v.value
}

func (v *NullableEntitledApplicationsResponseObject) Set(val *EntitledApplicationsResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitledApplicationsResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitledApplicationsResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitledApplicationsResponseObject(val *EntitledApplicationsResponseObject) *NullableEntitledApplicationsResponseObject {
	return &NullableEntitledApplicationsResponseObject{value: val, isSet: true}
}

func (v NullableEntitledApplicationsResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitledApplicationsResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


