/*
SaaS Provisioning Service

The SAP SaaS Provisioning service provides REST APIs that are responsible for the registration and provisioning of multitenant applications and services.   Use the APIs in this service to perform various operations related to your multitenant applications and services. For example, to get application registration details, subscribe a tenant to your application, unsubscribe a tenant from your application, retrieve all your application subscriptions, update subscription dependencies, and to get subscription job information. Note: \"Application Operations for App Providers\" APIs are intended for maintenance activities, not for runtime flows.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the EntitledApplicationsResponseCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitledApplicationsResponseCollection{}

// EntitledApplicationsResponseCollection struct for EntitledApplicationsResponseCollection
type EntitledApplicationsResponseCollection struct {
	// The response  list of all the multitenant applications to which a specified subaccount is entitled to subscribe.
	Applications []EntitledApplicationsResponseObject `json:"applications,omitempty"`
}

// NewEntitledApplicationsResponseCollection instantiates a new EntitledApplicationsResponseCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitledApplicationsResponseCollection() *EntitledApplicationsResponseCollection {
	this := EntitledApplicationsResponseCollection{}
	return &this
}

// NewEntitledApplicationsResponseCollectionWithDefaults instantiates a new EntitledApplicationsResponseCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitledApplicationsResponseCollectionWithDefaults() *EntitledApplicationsResponseCollection {
	this := EntitledApplicationsResponseCollection{}
	return &this
}

// GetApplications returns the Applications field value if set, zero value otherwise.
func (o *EntitledApplicationsResponseCollection) GetApplications() []EntitledApplicationsResponseObject {
	if o == nil || IsNil(o.Applications) {
		var ret []EntitledApplicationsResponseObject
		return ret
	}
	return o.Applications
}

// GetApplicationsOk returns a tuple with the Applications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitledApplicationsResponseCollection) GetApplicationsOk() ([]EntitledApplicationsResponseObject, bool) {
	if o == nil || IsNil(o.Applications) {
		return nil, false
	}
	return o.Applications, true
}

// HasApplications returns a boolean if a field has been set.
func (o *EntitledApplicationsResponseCollection) HasApplications() bool {
	if o != nil && !IsNil(o.Applications) {
		return true
	}

	return false
}

// SetApplications gets a reference to the given []EntitledApplicationsResponseObject and assigns it to the Applications field.
func (o *EntitledApplicationsResponseCollection) SetApplications(v []EntitledApplicationsResponseObject) {
	o.Applications = v
}

func (o EntitledApplicationsResponseCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitledApplicationsResponseCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Applications) {
		toSerialize["applications"] = o.Applications
	}
	return toSerialize, nil
}

type NullableEntitledApplicationsResponseCollection struct {
	value *EntitledApplicationsResponseCollection
	isSet bool
}

func (v NullableEntitledApplicationsResponseCollection) Get() *EntitledApplicationsResponseCollection {
	return v.value
}

func (v *NullableEntitledApplicationsResponseCollection) Set(val *EntitledApplicationsResponseCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitledApplicationsResponseCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitledApplicationsResponseCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitledApplicationsResponseCollection(val *EntitledApplicationsResponseCollection) *NullableEntitledApplicationsResponseCollection {
	return &NullableEntitledApplicationsResponseCollection{value: val, isSet: true}
}

func (v NullableEntitledApplicationsResponseCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitledApplicationsResponseCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


