/*
SaaS Provisioning Service

The SAP SaaS Provisioning service provides REST APIs that are responsible for the registration and provisioning of multitenant applications and services.   Use the APIs in this service to perform various operations related to your multitenant applications and services. For example, to get application registration details, subscribe a tenant to your application, unsubscribe a tenant from your application, retrieve all your application subscriptions, update subscription dependencies, and to get subscription job information. Note: \"Application Operations for App Providers\" APIs are intended for maintenance activities, not for runtime flows.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the JobStateResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobStateResponseObject{}

// JobStateResponseObject struct for JobStateResponseObject
type JobStateResponseObject struct {
	// The service instance ID of the SAP SaaS Provisioning service (saas-registry) that the application is using.
	CreatedBy *string `json:"createdBy,omitempty"`
	Error *JobErrorResponseObject `json:"error,omitempty"`
	// ID of the corresponding job.
	Id *string `json:"id,omitempty"`
	// The current state of the corresponding job. Possible values: * <b>CREATED:</b> Job processing has created. * <b>STARTED:</b> Job processing has started. * <b>SUCCEEDED:</b> The job has completed. * <b>FAILED:</b> The job failed and did not complete. * <b>RETRY:</b> Subscription has timed out and job processing is pending a retry.
	State *string `json:"state,omitempty"`
	// The state details of the corresponding job.
	StateDetails map[string]map[string]interface{} `json:"stateDetails,omitempty"`
}

// NewJobStateResponseObject instantiates a new JobStateResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobStateResponseObject() *JobStateResponseObject {
	this := JobStateResponseObject{}
	return &this
}

// NewJobStateResponseObjectWithDefaults instantiates a new JobStateResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobStateResponseObjectWithDefaults() *JobStateResponseObject {
	this := JobStateResponseObject{}
	return &this
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *JobStateResponseObject) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStateResponseObject) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *JobStateResponseObject) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *JobStateResponseObject) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *JobStateResponseObject) GetError() JobErrorResponseObject {
	if o == nil || IsNil(o.Error) {
		var ret JobErrorResponseObject
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStateResponseObject) GetErrorOk() (*JobErrorResponseObject, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *JobStateResponseObject) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given JobErrorResponseObject and assigns it to the Error field.
func (o *JobStateResponseObject) SetError(v JobErrorResponseObject) {
	o.Error = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JobStateResponseObject) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStateResponseObject) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JobStateResponseObject) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *JobStateResponseObject) SetId(v string) {
	o.Id = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *JobStateResponseObject) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStateResponseObject) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *JobStateResponseObject) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *JobStateResponseObject) SetState(v string) {
	o.State = &v
}

// GetStateDetails returns the StateDetails field value if set, zero value otherwise.
func (o *JobStateResponseObject) GetStateDetails() map[string]map[string]interface{} {
	if o == nil || IsNil(o.StateDetails) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.StateDetails
}

// GetStateDetailsOk returns a tuple with the StateDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStateResponseObject) GetStateDetailsOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.StateDetails) {
		return map[string]map[string]interface{}{}, false
	}
	return o.StateDetails, true
}

// HasStateDetails returns a boolean if a field has been set.
func (o *JobStateResponseObject) HasStateDetails() bool {
	if o != nil && !IsNil(o.StateDetails) {
		return true
	}

	return false
}

// SetStateDetails gets a reference to the given map[string]map[string]interface{} and assigns it to the StateDetails field.
func (o *JobStateResponseObject) SetStateDetails(v map[string]map[string]interface{}) {
	o.StateDetails = v
}

func (o JobStateResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobStateResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.StateDetails) {
		toSerialize["stateDetails"] = o.StateDetails
	}
	return toSerialize, nil
}

type NullableJobStateResponseObject struct {
	value *JobStateResponseObject
	isSet bool
}

func (v NullableJobStateResponseObject) Get() *JobStateResponseObject {
	return v.value
}

func (v *NullableJobStateResponseObject) Set(val *JobStateResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableJobStateResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableJobStateResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobStateResponseObject(val *JobStateResponseObject) *NullableJobStateResponseObject {
	return &NullableJobStateResponseObject{value: val, isSet: true}
}

func (v NullableJobStateResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobStateResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


