/*
SaaS Provisioning Service

The SAP SaaS Provisioning service provides REST APIs that are responsible for the registration and provisioning of multitenant applications and services.   Use the APIs in this service to perform various operations related to your multitenant applications and services. For example, to get application registration details, subscribe a tenant to your application, unsubscribe a tenant from your application, retrieve all your application subscriptions, update subscription dependencies, and to get subscription job information. Note: \"Application Operations for App Providers\" APIs are intended for maintenance activities, not for runtime flows.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NestingErrorDetailsResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NestingErrorDetailsResponseObject{}

// NestingErrorDetailsResponseObject struct for NestingErrorDetailsResponseObject
type NestingErrorDetailsResponseObject struct {
	Code *int32 `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewNestingErrorDetailsResponseObject instantiates a new NestingErrorDetailsResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNestingErrorDetailsResponseObject() *NestingErrorDetailsResponseObject {
	this := NestingErrorDetailsResponseObject{}
	return &this
}

// NewNestingErrorDetailsResponseObjectWithDefaults instantiates a new NestingErrorDetailsResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNestingErrorDetailsResponseObjectWithDefaults() *NestingErrorDetailsResponseObject {
	this := NestingErrorDetailsResponseObject{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *NestingErrorDetailsResponseObject) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NestingErrorDetailsResponseObject) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *NestingErrorDetailsResponseObject) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *NestingErrorDetailsResponseObject) SetCode(v int32) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *NestingErrorDetailsResponseObject) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NestingErrorDetailsResponseObject) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *NestingErrorDetailsResponseObject) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *NestingErrorDetailsResponseObject) SetMessage(v string) {
	o.Message = &v
}

func (o NestingErrorDetailsResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NestingErrorDetailsResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableNestingErrorDetailsResponseObject struct {
	value *NestingErrorDetailsResponseObject
	isSet bool
}

func (v NullableNestingErrorDetailsResponseObject) Get() *NestingErrorDetailsResponseObject {
	return v.value
}

func (v *NullableNestingErrorDetailsResponseObject) Set(val *NestingErrorDetailsResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableNestingErrorDetailsResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableNestingErrorDetailsResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNestingErrorDetailsResponseObject(val *NestingErrorDetailsResponseObject) *NullableNestingErrorDetailsResponseObject {
	return &NullableNestingErrorDetailsResponseObject{value: val, isSet: true}
}

func (v NullableNestingErrorDetailsResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNestingErrorDetailsResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


