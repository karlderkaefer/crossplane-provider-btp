/*
SaaS Provisioning Service

The SAP SaaS Provisioning service provides REST APIs that are responsible for the registration and provisioning of multitenant applications and services.   Use the APIs in this service to perform various operations related to your multitenant applications and services. For example, to get application registration details, subscribe a tenant to your application, unsubscribe a tenant from your application, retrieve all your application subscriptions, update subscription dependencies, and to get subscription job information. Note: \"Application Operations for App Providers\" APIs are intended for maintenance activities, not for runtime flows.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApplicationSubscriptionsResponseObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationSubscriptionsResponseObject{}

// ApplicationSubscriptionsResponseObject The list of the requested app subscriptions.
type ApplicationSubscriptionsResponseObject struct {
	// Specifies the ability to use the service plan of the subscribed application. The actual amount has no bearing on the maximum consumption limit of the application.
	Amount *int64 `json:"amount,omitempty"`
	// The appId of the master XSUAA instance provided when registering the multitenant application in saas registry.
	AppId *string `json:"appId,omitempty"`
	// The unique registration name of the deployed multitenant application, as defined by the app developer.
	AppName *string `json:"appName,omitempty"`
	// appName of the SaaS Provisioning multitenant application whose subscription was moved to the associated Subscription Manager Service (SMS) multitenant application.
	AppNameBeforeMovedFromSaasProvisioning *string `json:"appNameBeforeMovedFromSaasProvisioning,omitempty"`
	// The date and time the subscription was last modified. Dates and times are in UTC format.
	ChangedOn *string `json:"changedOn,omitempty"`
	// A subscription code for the application.
	Code *string `json:"code,omitempty"`
	// The unique commercial registration name of the deployed multitenant application as defined by the app developer.
	CommercialAppName *string `json:"commercialAppName,omitempty"`
	// Tenant ID of the global account or subaccount of the consumer that has subscribed to the multitenant application.
	ConsumerTenantId *string `json:"consumerTenantId,omitempty"`
	// The date and time the subscription was created. Dates and times are in UTC format.
	CreatedOn *string `json:"createdOn,omitempty"`
	// Any reuse services used or required by a subscribed application and its services.
	Dependencies []DependenciesResponseObject `json:"dependencies,omitempty"`
	// Error description for the following statuses: SUBSCRIBE_FAILED, UNSUBSCRIBE_FAILED, UPDATE_FAILED.
	Error *string `json:"error,omitempty"`
	// ID of the associated global account.
	GlobalAccountId *string `json:"globalAccountId,omitempty"`
	// Whether the consumer tenant is active. This field is returned only if one of the following query parameters was used during the API call: tenantId, subaccountId
	IsConsumerTenantActive *bool `json:"isConsumerTenantActive,omitempty"`
	// The license type of the associated global account.
	LicenseType *string `json:"licenseType,omitempty"`
	// Whether the subscription was moved from the SaaS Provisioning service to its associated Subscription Manager Service application.
	MovedFromSaasProvisioning *bool `json:"movedFromSaasProvisioning,omitempty"`
	// The ID of the multitenant application that is registered to the SAP SaaS Provisioning registry.
	ServiceInstanceId *string `json:"serviceInstanceId,omitempty"`
	// State of the subscriptions. Possible states: IN_PROCESS, SUBSCRIBED, SUBSCRIBE_FAILED, UNSUBSCRIBE_FAILED, UPDATE_FAILED.
	State *string `json:"state,omitempty"`
	// ID of the associated subaccount.
	SubaccountId *string `json:"subaccountId,omitempty"`
	// Consumer Subdomain
	Subdomain *string `json:"subdomain,omitempty"`
	// Unique subscription ID associated with the instance of the dependent service to be used for future references, such as 'GET all subscriptions' API call.
	SubscriptionGUID *string `json:"subscriptionGUID,omitempty"`
	// Application URL
	Url *string `json:"url,omitempty"`
}

// NewApplicationSubscriptionsResponseObject instantiates a new ApplicationSubscriptionsResponseObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationSubscriptionsResponseObject() *ApplicationSubscriptionsResponseObject {
	this := ApplicationSubscriptionsResponseObject{}
	return &this
}

// NewApplicationSubscriptionsResponseObjectWithDefaults instantiates a new ApplicationSubscriptionsResponseObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationSubscriptionsResponseObjectWithDefaults() *ApplicationSubscriptionsResponseObject {
	this := ApplicationSubscriptionsResponseObject{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetAmount() int64 {
	if o == nil || IsNil(o.Amount) {
		var ret int64
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetAmountOk() (*int64, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given int64 and assigns it to the Amount field.
func (o *ApplicationSubscriptionsResponseObject) SetAmount(v int64) {
	o.Amount = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *ApplicationSubscriptionsResponseObject) SetAppId(v string) {
	o.AppId = &v
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *ApplicationSubscriptionsResponseObject) SetAppName(v string) {
	o.AppName = &v
}

// GetAppNameBeforeMovedFromSaasProvisioning returns the AppNameBeforeMovedFromSaasProvisioning field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetAppNameBeforeMovedFromSaasProvisioning() string {
	if o == nil || IsNil(o.AppNameBeforeMovedFromSaasProvisioning) {
		var ret string
		return ret
	}
	return *o.AppNameBeforeMovedFromSaasProvisioning
}

// GetAppNameBeforeMovedFromSaasProvisioningOk returns a tuple with the AppNameBeforeMovedFromSaasProvisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetAppNameBeforeMovedFromSaasProvisioningOk() (*string, bool) {
	if o == nil || IsNil(o.AppNameBeforeMovedFromSaasProvisioning) {
		return nil, false
	}
	return o.AppNameBeforeMovedFromSaasProvisioning, true
}

// HasAppNameBeforeMovedFromSaasProvisioning returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasAppNameBeforeMovedFromSaasProvisioning() bool {
	if o != nil && !IsNil(o.AppNameBeforeMovedFromSaasProvisioning) {
		return true
	}

	return false
}

// SetAppNameBeforeMovedFromSaasProvisioning gets a reference to the given string and assigns it to the AppNameBeforeMovedFromSaasProvisioning field.
func (o *ApplicationSubscriptionsResponseObject) SetAppNameBeforeMovedFromSaasProvisioning(v string) {
	o.AppNameBeforeMovedFromSaasProvisioning = &v
}

// GetChangedOn returns the ChangedOn field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetChangedOn() string {
	if o == nil || IsNil(o.ChangedOn) {
		var ret string
		return ret
	}
	return *o.ChangedOn
}

// GetChangedOnOk returns a tuple with the ChangedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetChangedOnOk() (*string, bool) {
	if o == nil || IsNil(o.ChangedOn) {
		return nil, false
	}
	return o.ChangedOn, true
}

// HasChangedOn returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasChangedOn() bool {
	if o != nil && !IsNil(o.ChangedOn) {
		return true
	}

	return false
}

// SetChangedOn gets a reference to the given string and assigns it to the ChangedOn field.
func (o *ApplicationSubscriptionsResponseObject) SetChangedOn(v string) {
	o.ChangedOn = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ApplicationSubscriptionsResponseObject) SetCode(v string) {
	o.Code = &v
}

// GetCommercialAppName returns the CommercialAppName field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetCommercialAppName() string {
	if o == nil || IsNil(o.CommercialAppName) {
		var ret string
		return ret
	}
	return *o.CommercialAppName
}

// GetCommercialAppNameOk returns a tuple with the CommercialAppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetCommercialAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.CommercialAppName) {
		return nil, false
	}
	return o.CommercialAppName, true
}

// HasCommercialAppName returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasCommercialAppName() bool {
	if o != nil && !IsNil(o.CommercialAppName) {
		return true
	}

	return false
}

// SetCommercialAppName gets a reference to the given string and assigns it to the CommercialAppName field.
func (o *ApplicationSubscriptionsResponseObject) SetCommercialAppName(v string) {
	o.CommercialAppName = &v
}

// GetConsumerTenantId returns the ConsumerTenantId field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetConsumerTenantId() string {
	if o == nil || IsNil(o.ConsumerTenantId) {
		var ret string
		return ret
	}
	return *o.ConsumerTenantId
}

// GetConsumerTenantIdOk returns a tuple with the ConsumerTenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetConsumerTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConsumerTenantId) {
		return nil, false
	}
	return o.ConsumerTenantId, true
}

// HasConsumerTenantId returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasConsumerTenantId() bool {
	if o != nil && !IsNil(o.ConsumerTenantId) {
		return true
	}

	return false
}

// SetConsumerTenantId gets a reference to the given string and assigns it to the ConsumerTenantId field.
func (o *ApplicationSubscriptionsResponseObject) SetConsumerTenantId(v string) {
	o.ConsumerTenantId = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetCreatedOn() string {
	if o == nil || IsNil(o.CreatedOn) {
		var ret string
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetCreatedOnOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedOn) {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasCreatedOn() bool {
	if o != nil && !IsNil(o.CreatedOn) {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given string and assigns it to the CreatedOn field.
func (o *ApplicationSubscriptionsResponseObject) SetCreatedOn(v string) {
	o.CreatedOn = &v
}

// GetDependencies returns the Dependencies field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetDependencies() []DependenciesResponseObject {
	if o == nil || IsNil(o.Dependencies) {
		var ret []DependenciesResponseObject
		return ret
	}
	return o.Dependencies
}

// GetDependenciesOk returns a tuple with the Dependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetDependenciesOk() ([]DependenciesResponseObject, bool) {
	if o == nil || IsNil(o.Dependencies) {
		return nil, false
	}
	return o.Dependencies, true
}

// HasDependencies returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasDependencies() bool {
	if o != nil && !IsNil(o.Dependencies) {
		return true
	}

	return false
}

// SetDependencies gets a reference to the given []DependenciesResponseObject and assigns it to the Dependencies field.
func (o *ApplicationSubscriptionsResponseObject) SetDependencies(v []DependenciesResponseObject) {
	o.Dependencies = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ApplicationSubscriptionsResponseObject) SetError(v string) {
	o.Error = &v
}

// GetGlobalAccountId returns the GlobalAccountId field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetGlobalAccountId() string {
	if o == nil || IsNil(o.GlobalAccountId) {
		var ret string
		return ret
	}
	return *o.GlobalAccountId
}

// GetGlobalAccountIdOk returns a tuple with the GlobalAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetGlobalAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.GlobalAccountId) {
		return nil, false
	}
	return o.GlobalAccountId, true
}

// HasGlobalAccountId returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasGlobalAccountId() bool {
	if o != nil && !IsNil(o.GlobalAccountId) {
		return true
	}

	return false
}

// SetGlobalAccountId gets a reference to the given string and assigns it to the GlobalAccountId field.
func (o *ApplicationSubscriptionsResponseObject) SetGlobalAccountId(v string) {
	o.GlobalAccountId = &v
}

// GetIsConsumerTenantActive returns the IsConsumerTenantActive field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetIsConsumerTenantActive() bool {
	if o == nil || IsNil(o.IsConsumerTenantActive) {
		var ret bool
		return ret
	}
	return *o.IsConsumerTenantActive
}

// GetIsConsumerTenantActiveOk returns a tuple with the IsConsumerTenantActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetIsConsumerTenantActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsConsumerTenantActive) {
		return nil, false
	}
	return o.IsConsumerTenantActive, true
}

// HasIsConsumerTenantActive returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasIsConsumerTenantActive() bool {
	if o != nil && !IsNil(o.IsConsumerTenantActive) {
		return true
	}

	return false
}

// SetIsConsumerTenantActive gets a reference to the given bool and assigns it to the IsConsumerTenantActive field.
func (o *ApplicationSubscriptionsResponseObject) SetIsConsumerTenantActive(v bool) {
	o.IsConsumerTenantActive = &v
}

// GetLicenseType returns the LicenseType field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetLicenseType() string {
	if o == nil || IsNil(o.LicenseType) {
		var ret string
		return ret
	}
	return *o.LicenseType
}

// GetLicenseTypeOk returns a tuple with the LicenseType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetLicenseTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseType) {
		return nil, false
	}
	return o.LicenseType, true
}

// HasLicenseType returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasLicenseType() bool {
	if o != nil && !IsNil(o.LicenseType) {
		return true
	}

	return false
}

// SetLicenseType gets a reference to the given string and assigns it to the LicenseType field.
func (o *ApplicationSubscriptionsResponseObject) SetLicenseType(v string) {
	o.LicenseType = &v
}

// GetMovedFromSaasProvisioning returns the MovedFromSaasProvisioning field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetMovedFromSaasProvisioning() bool {
	if o == nil || IsNil(o.MovedFromSaasProvisioning) {
		var ret bool
		return ret
	}
	return *o.MovedFromSaasProvisioning
}

// GetMovedFromSaasProvisioningOk returns a tuple with the MovedFromSaasProvisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetMovedFromSaasProvisioningOk() (*bool, bool) {
	if o == nil || IsNil(o.MovedFromSaasProvisioning) {
		return nil, false
	}
	return o.MovedFromSaasProvisioning, true
}

// HasMovedFromSaasProvisioning returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasMovedFromSaasProvisioning() bool {
	if o != nil && !IsNil(o.MovedFromSaasProvisioning) {
		return true
	}

	return false
}

// SetMovedFromSaasProvisioning gets a reference to the given bool and assigns it to the MovedFromSaasProvisioning field.
func (o *ApplicationSubscriptionsResponseObject) SetMovedFromSaasProvisioning(v bool) {
	o.MovedFromSaasProvisioning = &v
}

// GetServiceInstanceId returns the ServiceInstanceId field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetServiceInstanceId() string {
	if o == nil || IsNil(o.ServiceInstanceId) {
		var ret string
		return ret
	}
	return *o.ServiceInstanceId
}

// GetServiceInstanceIdOk returns a tuple with the ServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetServiceInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceInstanceId) {
		return nil, false
	}
	return o.ServiceInstanceId, true
}

// HasServiceInstanceId returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasServiceInstanceId() bool {
	if o != nil && !IsNil(o.ServiceInstanceId) {
		return true
	}

	return false
}

// SetServiceInstanceId gets a reference to the given string and assigns it to the ServiceInstanceId field.
func (o *ApplicationSubscriptionsResponseObject) SetServiceInstanceId(v string) {
	o.ServiceInstanceId = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ApplicationSubscriptionsResponseObject) SetState(v string) {
	o.State = &v
}

// GetSubaccountId returns the SubaccountId field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetSubaccountId() string {
	if o == nil || IsNil(o.SubaccountId) {
		var ret string
		return ret
	}
	return *o.SubaccountId
}

// GetSubaccountIdOk returns a tuple with the SubaccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetSubaccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubaccountId) {
		return nil, false
	}
	return o.SubaccountId, true
}

// HasSubaccountId returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasSubaccountId() bool {
	if o != nil && !IsNil(o.SubaccountId) {
		return true
	}

	return false
}

// SetSubaccountId gets a reference to the given string and assigns it to the SubaccountId field.
func (o *ApplicationSubscriptionsResponseObject) SetSubaccountId(v string) {
	o.SubaccountId = &v
}

// GetSubdomain returns the Subdomain field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetSubdomain() string {
	if o == nil || IsNil(o.Subdomain) {
		var ret string
		return ret
	}
	return *o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetSubdomainOk() (*string, bool) {
	if o == nil || IsNil(o.Subdomain) {
		return nil, false
	}
	return o.Subdomain, true
}

// HasSubdomain returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasSubdomain() bool {
	if o != nil && !IsNil(o.Subdomain) {
		return true
	}

	return false
}

// SetSubdomain gets a reference to the given string and assigns it to the Subdomain field.
func (o *ApplicationSubscriptionsResponseObject) SetSubdomain(v string) {
	o.Subdomain = &v
}

// GetSubscriptionGUID returns the SubscriptionGUID field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetSubscriptionGUID() string {
	if o == nil || IsNil(o.SubscriptionGUID) {
		var ret string
		return ret
	}
	return *o.SubscriptionGUID
}

// GetSubscriptionGUIDOk returns a tuple with the SubscriptionGUID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetSubscriptionGUIDOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionGUID) {
		return nil, false
	}
	return o.SubscriptionGUID, true
}

// HasSubscriptionGUID returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasSubscriptionGUID() bool {
	if o != nil && !IsNil(o.SubscriptionGUID) {
		return true
	}

	return false
}

// SetSubscriptionGUID gets a reference to the given string and assigns it to the SubscriptionGUID field.
func (o *ApplicationSubscriptionsResponseObject) SetSubscriptionGUID(v string) {
	o.SubscriptionGUID = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ApplicationSubscriptionsResponseObject) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationSubscriptionsResponseObject) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ApplicationSubscriptionsResponseObject) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ApplicationSubscriptionsResponseObject) SetUrl(v string) {
	o.Url = &v
}

func (o ApplicationSubscriptionsResponseObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationSubscriptionsResponseObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.AppName) {
		toSerialize["appName"] = o.AppName
	}
	if !IsNil(o.AppNameBeforeMovedFromSaasProvisioning) {
		toSerialize["appNameBeforeMovedFromSaasProvisioning"] = o.AppNameBeforeMovedFromSaasProvisioning
	}
	if !IsNil(o.ChangedOn) {
		toSerialize["changedOn"] = o.ChangedOn
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.CommercialAppName) {
		toSerialize["commercialAppName"] = o.CommercialAppName
	}
	if !IsNil(o.ConsumerTenantId) {
		toSerialize["consumerTenantId"] = o.ConsumerTenantId
	}
	if !IsNil(o.CreatedOn) {
		toSerialize["createdOn"] = o.CreatedOn
	}
	if !IsNil(o.Dependencies) {
		toSerialize["dependencies"] = o.Dependencies
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.GlobalAccountId) {
		toSerialize["globalAccountId"] = o.GlobalAccountId
	}
	if !IsNil(o.IsConsumerTenantActive) {
		toSerialize["isConsumerTenantActive"] = o.IsConsumerTenantActive
	}
	if !IsNil(o.LicenseType) {
		toSerialize["licenseType"] = o.LicenseType
	}
	if !IsNil(o.MovedFromSaasProvisioning) {
		toSerialize["movedFromSaasProvisioning"] = o.MovedFromSaasProvisioning
	}
	if !IsNil(o.ServiceInstanceId) {
		toSerialize["serviceInstanceId"] = o.ServiceInstanceId
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.SubaccountId) {
		toSerialize["subaccountId"] = o.SubaccountId
	}
	if !IsNil(o.Subdomain) {
		toSerialize["subdomain"] = o.Subdomain
	}
	if !IsNil(o.SubscriptionGUID) {
		toSerialize["subscriptionGUID"] = o.SubscriptionGUID
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableApplicationSubscriptionsResponseObject struct {
	value *ApplicationSubscriptionsResponseObject
	isSet bool
}

func (v NullableApplicationSubscriptionsResponseObject) Get() *ApplicationSubscriptionsResponseObject {
	return v.value
}

func (v *NullableApplicationSubscriptionsResponseObject) Set(val *ApplicationSubscriptionsResponseObject) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationSubscriptionsResponseObject) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationSubscriptionsResponseObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationSubscriptionsResponseObject(val *ApplicationSubscriptionsResponseObject) *NullableApplicationSubscriptionsResponseObject {
	return &NullableApplicationSubscriptionsResponseObject{value: val, isSet: true}
}

func (v NullableApplicationSubscriptionsResponseObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationSubscriptionsResponseObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


