/*
SaaS Provisioning Service

The SAP SaaS Provisioning service provides REST APIs that are responsible for the registration and provisioning of multitenant applications and services.   Use the APIs in this service to perform various operations related to your multitenant applications and services. For example, to get application registration details, subscribe a tenant to your application, unsubscribe a tenant from your application, retrieve all your application subscriptions, update subscription dependencies, and to get subscription job information. Note: \"Application Operations for App Providers\" APIs are intended for maintenance activities, not for runtime flows.  See also: * [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html) * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html) * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html) * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateApplicationDependenciesRequestPayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateApplicationDependenciesRequestPayload{}

// UpdateApplicationDependenciesRequestPayload Send custom property values in the form of key-value pairs to dependent services (provider applications) during the update to notify them about a change related to an existing subscription.
type UpdateApplicationDependenciesRequestPayload struct {
	// A JSON object with key-value pairs. Values can further be JSON objects. (nested structure)
	AppProviderCustomProperties map[string]map[string]interface{} `json:"appProviderCustomProperties,omitempty"`
}

// NewUpdateApplicationDependenciesRequestPayload instantiates a new UpdateApplicationDependenciesRequestPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateApplicationDependenciesRequestPayload() *UpdateApplicationDependenciesRequestPayload {
	this := UpdateApplicationDependenciesRequestPayload{}
	return &this
}

// NewUpdateApplicationDependenciesRequestPayloadWithDefaults instantiates a new UpdateApplicationDependenciesRequestPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateApplicationDependenciesRequestPayloadWithDefaults() *UpdateApplicationDependenciesRequestPayload {
	this := UpdateApplicationDependenciesRequestPayload{}
	return &this
}

// GetAppProviderCustomProperties returns the AppProviderCustomProperties field value if set, zero value otherwise.
func (o *UpdateApplicationDependenciesRequestPayload) GetAppProviderCustomProperties() map[string]map[string]interface{} {
	if o == nil || IsNil(o.AppProviderCustomProperties) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.AppProviderCustomProperties
}

// GetAppProviderCustomPropertiesOk returns a tuple with the AppProviderCustomProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateApplicationDependenciesRequestPayload) GetAppProviderCustomPropertiesOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.AppProviderCustomProperties) {
		return map[string]map[string]interface{}{}, false
	}
	return o.AppProviderCustomProperties, true
}

// HasAppProviderCustomProperties returns a boolean if a field has been set.
func (o *UpdateApplicationDependenciesRequestPayload) HasAppProviderCustomProperties() bool {
	if o != nil && !IsNil(o.AppProviderCustomProperties) {
		return true
	}

	return false
}

// SetAppProviderCustomProperties gets a reference to the given map[string]map[string]interface{} and assigns it to the AppProviderCustomProperties field.
func (o *UpdateApplicationDependenciesRequestPayload) SetAppProviderCustomProperties(v map[string]map[string]interface{}) {
	o.AppProviderCustomProperties = v
}

func (o UpdateApplicationDependenciesRequestPayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateApplicationDependenciesRequestPayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppProviderCustomProperties) {
		toSerialize["appProviderCustomProperties"] = o.AppProviderCustomProperties
	}
	return toSerialize, nil
}

type NullableUpdateApplicationDependenciesRequestPayload struct {
	value *UpdateApplicationDependenciesRequestPayload
	isSet bool
}

func (v NullableUpdateApplicationDependenciesRequestPayload) Get() *UpdateApplicationDependenciesRequestPayload {
	return v.value
}

func (v *NullableUpdateApplicationDependenciesRequestPayload) Set(val *UpdateApplicationDependenciesRequestPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateApplicationDependenciesRequestPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateApplicationDependenciesRequestPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateApplicationDependenciesRequestPayload(val *UpdateApplicationDependenciesRequestPayload) *NullableUpdateApplicationDependenciesRequestPayload {
	return &NullableUpdateApplicationDependenciesRequestPayload{value: val, isSet: true}
}

func (v NullableUpdateApplicationDependenciesRequestPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateApplicationDependenciesRequestPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


