openapi: 3.0.1
info:
  description: "The SAP SaaS Provisioning service provides REST APIs that are responsible\
    \ for the registration and provisioning of multitenant applications and services.\
    \  \nUse the APIs in this service to perform various operations related to your\
    \ multitenant applications and services. For example, to get application registration\
    \ details, subscribe a tenant to your application, unsubscribe a tenant from your\
    \ application, retrieve all your application subscriptions, update subscription\
    \ dependencies, and to get subscription job information. Note: \"Application Operations\
    \ for App Providers\" APIs are intended for maintenance activities, not for runtime\
    \ flows.\n\nSee also:\n* [Authorization](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/3670474a58c24ac2b082e76cbbd9dc19.html)\n\
    * [Rate Limiting](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77b217b3f57a45b987eb7fbc3305ce1e.html)\n\
    * [Error Response Format](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/77fef2fb104b4b1795e2e6cee790e8b8.html)\n\
    * [Asynchronous Jobs](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/latest/en-US/0a0a6ab0ad114d72a6611c1c6b21683e.html)"
  termsOfService: http://www.sap.com
  title: SaaS Provisioning Service
  version: "1.0"
externalDocs:
  description: Using SAP SaaS Provisioning Service APIs to Manage Multitenant Applications
  url: https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/ed08c7dcb35d4082936c045e7d7b3ecd.html
servers:
- description: Generated server url
  url: https://saas-manager.cfapps.eu10.hana.ondemand.com
security:
- OAuth2: []
tags:
- description: Job Management
  name: Job Management
- description: Asynchronous Callback Operations for SAP Authorization and Trust Management
    Service (XSUAA)
  name: Asynchronous Callback Operations for SAP Authorization and Trust Management
    Service (XSUAA)
- description: Subscription Operations for App Consumers
  name: Subscription Operations for App Consumers
- description: Job Management for Application Operations (for App Providers)
  name: Job Management for Application Operations (for App Providers)
- description: Application Operations for App Providers
  name: Application Operations for App Providers
paths:
  /api/v2.0/jobs/{jobUuid}:
    get:
      description: "Get information about the state of the created job.<br/><br/>Required\
        \ scopes: $XSAPPNAME.job.read"
      operationId: getJobRelatedToSaasApplicationById
      parameters:
      - description: The unique ID of a job for which to get information.
        explode: false
        in: path
        name: jobUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStateResponseObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get job errorStatusCode
      tags:
      - Job Management for Application Operations (for App Providers)
  /api/v2.0/jobs/{jobUuid}/terminate:
    put:
      description: "Graceful terminate the last run of the job with the specified\
        \ job instance ID. Only jobs with statuses STARTING or STARTED can be stopped.\
        \ <br/><br/>Required scope: $XSAPPNAME.job.update"
      operationId: gracefulTerminationJob
      parameters:
      - description: Id of the async job
        explode: false
        in: path
        name: jobUuid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                type: string
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Async job can not be stopped while not running
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Graceful termination of an async job
      tags:
      - Job Management for Application Operations (for App Providers)
  /jobs-management/v1/jobs/{jobInstanceIdOrUniqueId}/status:
    get:
      description: "Get information for a specified job, including its ID and its\
        \ current status.<br/><br/>Required scope: $XSAPPNAME.job.read"
      operationId: getStatus
      parameters:
      - description: ID of the job for which to get status
        explode: false
        in: path
        name: jobInstanceIdOrUniqueId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusResponseObject'
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get job status
      tags:
      - Job Management
  /saas-manager/v1/application:
    get:
      description: "Get registration details for a multitenant application from the\
        \ SAP SaaS Provisioning service.<br/><br/>Required scopes: $XSAPPNAME.subscription.read"
      operationId: getApplicationDetails
      parameters:
      - description: |-
          For all the APIs in the Application Operations for App Providers group, use only this authorization method.
          See the link for details about [how to obtain the access token](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/6391b5dfe4704c6c8b71a32126828e9c.html).
        example: Bearer <access-token-here>
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationDetailsResponseObject'
          description: Ok
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal Server Error
      summary: Get application registration details
      tags:
      - Application Operations for App Providers
  /saas-manager/v1/application/subscriptions:
    get:
      description: "Get information about the subscriptions of a multitenant application.\
        \ The information includes the ID of the subscribed tenant, the subscription\
        \ code, and subscription dependencies.<br/><br/>Required scopes: $XSAPPNAME.subscription.read"
      operationId: getApplicationSubscriptions
      parameters:
      - description: Get subscriptions by tenant ID.
        explode: true
        in: query
        name: tenantId
        required: false
        schema:
          type: string
        style: form
      - description: The unique ID of the root subscription.
        explode: true
        in: query
        name: subscriptionGUID
        required: false
        schema:
          type: string
        style: form
      - description: Get subscriptions by state.
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - IN_PROCESS
          - SUBSCRIBED
          - SUBSCRIBE_FAILED
          - UNSUBSCRIBE_FAILED
          - UPDATE_FAILED
          type: string
        style: form
      - description: Get subscriptions by associated global account ID.
        explode: true
        in: query
        name: globalAccountId
        required: false
        schema:
          type: string
        style: form
      - description: Get subscriptions by the associated subaccount ID.
        explode: true
        in: query
        name: subaccountId
        required: false
        schema:
          type: string
        style: form
      - description: |-
          A specific page to return. Used together with the 'size' parameter.<br>You define the number of subscriptions per page and then calculate the number of pages based on the total number of subscriptions.<br>
          For example, if you defined the size to be 200, and the total number of subscriptions for the requested service is 2000, you get 10 pages of subscriptions in the response.<br>If you requested for page #5, you get 200 subscriptions from position 800 to 1000 in the list.<br>
          Note: An empty result is returned if the page you requested is out of range. In the example above, you would get an empty result for any page after page #10.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          type: integer
        style: form
      - description: The number of subscriptions to include in the response. Works
          together with the 'page' parameter. The maximum number is 500. Any larger
          number specified still returns 500 subscriptions.
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: "500"
          type: string
        style: form
      - description: |-
          For all the APIs in the Application Operations for App Providers group, use only this authorization method.
          See the link for details about [how to obtain the access token](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/6391b5dfe4704c6c8b71a32126828e9c.html).
        example: Bearer <access-token-here>
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the type of data that is sent.
        example: <application/json>
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsListResponseObject'
          description: Ok
        "400":
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get application subscriptions
      tags:
      - Application Operations for App Providers
  /saas-manager/v1/application/subscriptions/batch:
    patch:
      description: "<b>Prerequisites</b>:\nYou have obtained the access token for\
        \ the application.<br><br>\nBatch-update the dependencies of a multitenant\
        \ application.<br>\nThis REST call is asynchronous.\nAfter executing the API,\
        \ a job to update dependencies is created.\nYou can update dependencies for\
        \ subscriptions with status: SUBSCRIBED, UPDATE_FAILED and UPDATE_PARAMETERS_FAILED.\n\
        After the API has been executed, you will get the notification specifying\
        \ the details of the created subscription job in the following format:<br>\n\
        “Job for update subscription batch of application: <i>&lt;appId&gt;</i>, was\
        \ created.”<br>\nWhere: \n* <i>&lt;appId&gt;</i> is the ID of the application\
        \ to which you subscribed the tenants.\n\nNote that if you enable the allowUpdateOnFailedSubscription\
        \ parameter, you can also use this API for subscriptions that are with a SUBSCRIBE_FAILED\
        \ or UNSUBSCRIBE_FAILED status, but only for the purpose of removing dependencies.\n\
        \n<br/><br/>Required scopes: $XSAPPNAME.subscription.write"
      operationId: batchUpdateApplicationAndTenantSubscriptionAsync
      parameters:
      - description: Whether to skip updating the dependencies that haven’t changed.
        explode: true
        in: query
        name: skipUnchangedDependencies
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          Whether to skip updating dependencies. If set to true, updateApplicationURL must also be set to true.
          This way, you can update the application URL without updating its dependencies.
        explode: true
        in: query
        name: skipUpdatingDependencies
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether to update the application URL returned from the app\
          \ callback. If set to true together with skipUpdatingDependencies, the API\
          \ call becomes synchronous."
        explode: true
        in: query
        name: updateApplicationURL
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether to update a dependency subscription tree when the state\
          \ of the root subscription is UNSUBSCRIBE_FAILED or SUBSCRIBE_FAILED. \n\
          Note that in such cases, you can only use the update feature for the purpose\
          \ of removing existing dependencies. "
        explode: true
        in: query
        name: allowUpdateOnFailedSubscription
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          For all the APIs in the Application Operations for App Providers group, use only this authorization method.
          See the link for details about [how to obtain the access token](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/6391b5dfe4704c6c8b71a32126828e9c.html).
        example: Bearer <access-token-here>
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the type of data that is sent.
        example: <application/json>
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/batchUpdateXsuaaSubscriptionDependencies'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "202":
          content:
            application/json:
              schema:
                type: string
          description: Accepted
          headers:
            Location:
              description: A path to job status. This path serves as the relative
                path for the base request URI of the API 'Get job status'.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                type: string
          description: Conflict
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal Server Error
      summary: Batch-update multitenant app subscription dependencies
      tags:
      - Application Operations for App Providers
  /saas-manager/v1/application/tenants/{tenantId}/subscriptions:
    delete:
      description: "Unsubscribe a consumer subaccount tenant from a multitenant application.\n\
        This REST call is asynchronous.\nAfter executing the API, a job to unsubscribe\
        \ the tenant is created.\nYou can unsubscribe tenants that are either in the\
        \ same global account, or in a different global account as the provider of\
        \ the application.\nYou can unsubscribe tenants with the following statuses:\
        \ SUBSCRIBED, SUBSCRIBE_FAILED, UNSUBSCRIBE FAILED, UPDATE_FAILED.\nAfter\
        \ the API has been executed, you will get the notification specifying the\
        \ details of the created subscription job in the following format: \n“Job\
        \ for the subscription of application: <i>&lt;appId&gt;</i> and tenant: <i>&lt;tenantId&gt;</i>\
        \ was created.”\nWhere: \n* <i>&lt;appId&gt;</i> is the ID of the application\
        \ to which you subscribed the tenant. \n* <i>&lt;tenantId&gt;</i> is the ID\
        \ of the subscribed tenant.\n\n<b>Prerequisites</b>:\nYou have obtained the\
        \ access token for the application.\n<br/><br/>Required scopes: $XSAPPNAME.subscription.write"
      operationId: deleteApplicationAndTenantSubscriptionAsync
      parameters:
      - description: The ID of the tenant to unsubscribe
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          For all the APIs in the Application Operations for App Providers group, use only this authorization method.
          See the link for details about [how to obtain the access token](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/6391b5dfe4704c6c8b71a32126828e9c.html).
        example: Bearer <access-token-here>
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the type of data that is sent.
        example: <application/json>
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                type: string
          description: Accepted
          headers:
            Location:
              description: A path to job status. This path serves as the relative
                path for the base request URI of the API 'Get job status'.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal Server Error
      summary: Unsubscribe tenant from an application
      tags:
      - Application Operations for App Providers
    patch:
      description: "Update the dependencies of a multitenant application.\nThis REST\
        \ call is asynchronous.\nAfter executing the API, a job to update dependencies\
        \ is created.\nYou can update dependencies for subscriptions with status:\
        \ SUBSCRIBED, UPDATE_FAILED and UPDATE_PARAMETERS_FAILED.\nAfter the API has\
        \ been executed, you will get the notification specifying the details of the\
        \ created subscription job in the following format: \n“Job for the subscription\
        \ of application: <i>&lt;appId&gt;</i> and tenant: <i>&lt;tenantId&gt;</i>\
        \ was created.”\nWhere: \n* <i>&lt;appId&gt;</i> is the ID of the application\
        \ to which you subscribed the tenant. \n* <i>&lt;tenantId&gt;</i> is the ID\
        \ of the subscribed tenant.\n\nNote that if you enable the allowUpdateOnFailedSubscription\
        \ parameter, you can also use this API for subscriptions that are with a SUBSCRIBE_FAILED\
        \ or UNSUBSCRIBE_FAILED status, but only for the purpose of removing dependencies.\n\
        <b>Prerequisites</b>:\nYou have obtained the access token for the application.\n\
        <br/><br/>Required scopes: $XSAPPNAME.subscription.write"
      operationId: updateApplicationAndTenantSubscriptionAsync
      parameters:
      - description: The ID of the tenant for which to update dependencies
        explode: false
        in: path
        name: tenantId
        required: true
        schema:
          type: string
        style: simple
      - description: Whether to skip updating the dependencies that haven’t changed.
        explode: true
        in: query
        name: skipUnchangedDependencies
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          Whether to skip updating dependencies. If set to true, updateApplicationURL must also be set to true.
          This way, you can update the application URL without updating its dependencies.
        explode: true
        in: query
        name: skipUpdatingDependencies
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether to update the application URL returned from the app\
          \ callback. If set to true together with skipUpdatingDependencies, the API\
          \ call becomes synchronous."
        explode: true
        in: query
        name: updateApplicationURL
        required: false
        schema:
          type: boolean
        style: form
      - description: "Whether to update a dependency subscription tree when the state\
          \ of the root subscription is UNSUBSCRIBE_FAILED or SUBSCRIBE_FAILED. \n\
          Note that in such cases, you can only use the update feature for the purpose\
          \ of removing existing dependencies. "
        explode: true
        in: query
        name: allowUpdateOnFailedSubscription
        required: false
        schema:
          type: boolean
        style: form
      - description: |-
          For all the APIs in the Application Operations for App Providers group, use only this authorization method.
          See the link for details about [how to obtain the access token](https://help.sap.com/viewer/65de2977205c403bbc107264b8eccf4b/Cloud/en-US/6391b5dfe4704c6c8b71a32126828e9c.html).
        example: Bearer <access-token-here>
        explode: false
        in: header
        name: Authorization
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies the type of data that is sent.
        example: <application/json>
        explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationDependenciesRequestPayload'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "202":
          content:
            application/json:
              schema:
                type: string
          description: Accepted
          headers:
            Location:
              description: A path to job status. This path serves as the relative
                path for the base request URI of the API 'Get job status'.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                type: string
          description: Conflict
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Too many requests
        "500":
          content:
            application/json:
              schema:
                type: string
          description: Internal Server Error
      summary: Update subscription dependencies
      tags:
      - Application Operations for App Providers
  /saas-manager/v1/applications:
    get:
      description: "List all the multitenant applications to which a subaccount is\
        \ entitled to subscribe, including their subscription details. Also useful\
        \ for finding the URLs to launch each of the entitled applications.<br/><br/>Required\
        \ scopes: $XSAPPNAME.subaccount.application.subscription.read"
      operationId: getEntitledApplications
      parameters:
      - description: Indicates the natural language and locale that the client prefers.
        example: '*'
        explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledApplicationsResponseCollection'
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get all entitled multitenant applications
      tags:
      - Subscription Operations for App Consumers
  /saas-manager/v1/applications/{appName}:
    get:
      description: "Get details of a specific multitenant application to which the\
        \ subaccount is entitled to subscribe. Also useful for finding the URL to\
        \ launch the application.<br/><br/>Required scopes: $XSAPPNAME.subaccount.application.subscription.read"
      operationId: getEntitledApplication
      parameters:
      - description: The name of the multitenant application to which a subaccount
          is entitled to subscribe.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: The name of the subscription plan to the multitenant application.
        explode: true
        in: query
        name: planName
        required: false
        schema:
          type: string
        style: form
      - description: "Whether appName is used as a commercialAppName. default is false,\
          \ means it is used as the appName."
        explode: true
        in: query
        name: useCommercialAppName
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Indicates the natural language and locale that the client prefers.
        example: '*'
        explode: false
        in: header
        name: Accept-Language
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitledApplicationsResponseObject'
          description: Ok
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get details of a multitenant application
      tags:
      - Subscription Operations for App Consumers
  /saas-manager/v1/applications/{appName}/subscription:
    delete:
      description: "Unsubscribe a multitenant application from a subaccount. This\
        \ process is asynchronous. All data related to the subscribed multitenant\
        \ application will be deleted in the respective subaccount. To show all application\
        \ entitlements, including application names, plan names, and subscription\
        \ status, in a subaccount, use GET /saas-manager/v1/applications/{appName}\
        \ <br/><br/>Required scopes: $XSAPPNAME.subaccount.application.subscription.update"
      operationId: deleteSubscriptionAsync
      parameters:
      - description: The name of the multitenant application from which to unsubscribe
          the subaccount.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: "Whether appName is used as a commercialAppName. default is false,\
          \ means it is used as the appName."
        explode: true
        in: query
        name: useCommercialAppName
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Provide a set of correlation parameters to be used by the initial\
          \ and subsequent components involved in the request: \n- The Root Context\
          \ ID (GUID) identifies the initial context within a complex scenario, for\
          \ example, the initiating user session. \n- The Transaction ID (GUID) identifies\
          \ a technical transaction. \n- Connection ID (GUID) and Connection Counter\
          \ uniquely identify together  every request or message leaving a component\
          \ via outbound communication."
        explode: false
        in: header
        name: SAP-PASSPORT
        required: false
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                type: string
          description: Conflict
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Unsubscribe an application from a subaccount
      tags:
      - Subscription Operations for App Consumers
    patch:
      description: "Change the parameters of an existing subscription to a multitenant\
        \ application. For example, you can change the application plan in a subscription.\
        \ To update subscription parameters, the subaccount must already be subscribed\
        \ to the application. <br/><br/>Required scopes: $XSAPPNAME.subaccount.application.subscription.update"
      operationId: updateSubscriptionParametersAsync
      parameters:
      - description: The name of the multitenant application to update.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: "Whether appName is used as a commercialAppName. default is false,\
          \ means it is used as the appName."
        explode: true
        in: query
        name: useCommercialAppName
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionRequestPayload'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unprocessable Entity
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Update parameters of a multitenant application subscription
      tags:
      - Subscription Operations for App Consumers
    post:
      description: |-
        Subscribe to a multitenant application from a subaccount.
        This process is asynchronous.
        You must be assigned to the subaccount admin role.
        To check which multitenant applications the subaccount can subscribe to, use the API: GET /saas-manager/v1/applications.<br/><br/>Required scopes: $XSAPPNAME.subaccount.application.subscription.update
      operationId: createSubscriptionAsync
      parameters:
      - description: The name of the multitenant application to subscribe to.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: "Whether appName is used as a commercialAppName. default is false,\
          \ means it is used as the appName."
        explode: true
        in: query
        name: useCommercialAppName
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "Provide a set of correlation parameters to be used by the initial\
          \ and subsequent components involved in the request: \n- The Root Context\
          \ ID (GUID) identifies the initial context within a complex scenario, for\
          \ example, the initiating user session. \n- The Transaction ID (GUID) identifies\
          \ a technical transaction. \n- Connection ID (GUID) and Connection Counter\
          \ uniquely identify together  every request or message leaving a component\
          \ via outbound communication."
        explode: false
        in: header
        name: SAP-PASSPORT
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequestPayload'
      responses:
        "202":
          description: Accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Conflict
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Subscribe to an application from a subaccount
      tags:
      - Subscription Operations for App Consumers
  /saas-manager/v1/applications/{appName}/subscription/labels:
    delete:
      description: "Remove all user-defined labels that are assigned to a consumer\
        \ subaccount's subscription to a multitenant application. \n\nTo remove specific\
        \ labels, use instead: PUT /saas-manager/v1/applications/{appName}/ subscription/labels\n\
        Required scope: $XSAPPNAME.subaccount.application.subscription.update \n"
      operationId: deleteSubscriptionLabels
      parameters:
      - description: The name of the multitenant application to which a subaccount
          is subscribed.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: "Whether appName is used as a commercialAppName. default is false,\
          \ means it is used as the appName."
        explode: true
        in: query
        name: useCommercialAppName
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelsResponseObject'
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Remove all labels from a multitenant application subscription
      tags:
      - Subscription Operations for App Consumers
    get:
      description: "Get all the user-defined labels that are assigned as key-value\
        \ pairs to a consumer subaccount's subscription to a multitenant application.\
        \ \n\nRequired scope: $XSAPPNAME.subaccount.application.subscription.read"
      operationId: getSubscriptionLabels
      parameters:
      - description: The name of the multitenant application to which a subaccount
          is subscribed.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: "Whether appName is used as a commercialAppName. default is false,\
          \ means it is used as the appName."
        explode: true
        in: query
        name: useCommercialAppName
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelsResponseObject'
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get labels for a multitenant application subscription
      tags:
      - Subscription Operations for App Consumers
    put:
      description: "Assign user-defined labels to a consumer subaccount's subscription\
        \ to a multitenant application. Labels are specified as key-value pairs. \n\
        \nRequired scope: $XSAPPNAME.subaccount.application.subscription.update\n"
      operationId: upsertSubscriptionLabels
      parameters:
      - description: The name of the multitenant application to which a subaccount
          is subscribed.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: "Whether appName is used as a commercialAppName. default is false,\
          \ means it is used as the appName."
        explode: true
        in: query
        name: useCommercialAppName
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelAssignmentRequestPayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelsResponseObject'
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Assign labels to a multitenant application subscription
      tags:
      - Subscription Operations for App Consumers
  /saas-manager/v1/applications/{appName}/subscription/parameters:
    get:
      description: "Get all user-defined consumer subaccount's subscription parameters\
        \ to a multitenant application. \n\nRequired scope: $XSAPPNAME.subaccount.application.subscription.read"
      operationId: getSubscriptionParams
      parameters:
      - description: The name of the multitenant application to which a subaccount
          is subscribed.
        explode: false
        in: path
        name: appName
        required: true
        schema:
          type: string
        style: simple
      - description: "Whether appName is used as a commercialAppName. default is false,\
          \ means it is used as the appName."
        explode: true
        in: query
        name: useCommercialAppName
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParamsResponseObject'
          description: Ok
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Not Supported
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Internal Server Error
      summary: Get subscription parameters
      tags:
      - Subscription Operations for App Consumers
  /saas-manager/v1/subscription-callback/{identifier}/result:
    put:
      description: "Use the async callback feature to subscribe a subaccount tenant\
        \ to a multitenant application if a subscription process is time-consuming.<br/><br/>Requires\
        \ one of the following scopes: $XSAPPNAME.subscription.write or $XSAPPNAME.subscription.service.write"
      operationId: subscriptionCallbackAsync
      parameters:
      - description: Unique identifier of the current subscription job.
        explode: false
        in: path
        name: identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaasAsyncSubscriptionRequestPayload'
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Ok
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad Request
        "401":
          description: Not Authorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "429":
          description: Rate Limit Exceeded
          headers:
            X-Ratelimit-Reset:
              description: "The time at which the rate limit will reset, expressed\
                \ in milliseconds. It indicates the timestamp when the client can\
                \ make additional requests without exceeding the rate limit."
              example: "167918400000"
              explode: false
              schema:
                format: long
                type: string
              style: simple
        "500":
          description: Internal Server Error
      summary: Subscribe a subaccount tenant to an application
      tags:
      - Asynchronous Callback Operations for SAP Authorization and Trust Management
        Service (XSUAA)
components:
  schemas:
    ApplicationResourceDto:
      description: The application resource reference in Unified Services. This object
        includes the name and path of the application resource.
      example:
        path: path
        groupVersionType:
          type: type
          version: version
          group: group
        name: name
      properties:
        groupVersionType:
          $ref: '#/components/schemas/GroupVersionType'
        name:
          type: string
        path:
          type: string
      type: object
    ApplicationSubscriptionsResponseObject:
      description: The list of the requested app subscriptions.
      example:
        amount: 6
        movedFromSaasProvisioning: true
        subaccountId: subaccountId
        code: code
        appName: appName
        serviceInstanceId: serviceInstanceId
        consumerTenantId: consumerTenantId
        error: error
        createdOn: createdOn
        changedOn: changedOn
        url: url
        dependencies:
        - xsappname: xsappname
          appName: appName
          appId: appId
          providerSubaccountID: providerSubaccountID
          error: error
          dependencies:
          - null
          - null
        - xsappname: xsappname
          appName: appName
          appId: appId
          providerSubaccountID: providerSubaccountID
          error: error
          dependencies:
          - null
          - null
        licenseType: licenseType
        isConsumerTenantActive: true
        appNameBeforeMovedFromSaasProvisioning: appNameBeforeMovedFromSaasProvisioning
        appId: appId
        subdomain: subdomain
        commercialAppName: commercialAppName
        subscriptionGUID: subscriptionGUID
        state: state
        globalAccountId: globalAccountId
      properties:
        amount:
          description: Specifies the ability to use the service plan of the subscribed
            application. The actual amount has no bearing on the maximum consumption
            limit of the application.
          format: int64
          type: integer
        appId:
          description: The appId of the master XSUAA instance provided when registering
            the multitenant application in saas registry.
          type: string
        appName:
          description: "The unique registration name of the deployed multitenant application,\
            \ as defined by the app developer."
          type: string
        appNameBeforeMovedFromSaasProvisioning:
          description: appName of the SaaS Provisioning multitenant application whose
            subscription was moved to the associated Subscription Manager Service
            (SMS) multitenant application.
          type: string
        changedOn:
          description: The date and time the subscription was last modified. Dates
            and times are in UTC format.
          type: string
        code:
          description: A subscription code for the application.
          type: string
        commercialAppName:
          description: The unique commercial registration name of the deployed multitenant
            application as defined by the app developer.
          type: string
        consumerTenantId:
          description: Tenant ID of the global account or subaccount of the consumer
            that has subscribed to the multitenant application.
          type: string
        createdOn:
          description: The date and time the subscription was created. Dates and times
            are in UTC format.
          type: string
        dependencies:
          description: Any reuse services used or required by a subscribed application
            and its services.
          items:
            $ref: '#/components/schemas/DependenciesResponseObject'
          type: array
        error:
          description: "Error description for the following statuses: SUBSCRIBE_FAILED,\
            \ UNSUBSCRIBE_FAILED, UPDATE_FAILED."
          type: string
        globalAccountId:
          description: ID of the associated global account.
          type: string
        isConsumerTenantActive:
          description: "Whether the consumer tenant is active. This field is returned\
            \ only if one of the following query parameters was used during the API\
            \ call: tenantId, subaccountId"
          type: boolean
        licenseType:
          description: The license type of the associated global account.
          type: string
        movedFromSaasProvisioning:
          description: Whether the subscription was moved from the SaaS Provisioning
            service to its associated Subscription Manager Service application.
          type: boolean
        serviceInstanceId:
          description: The ID of the multitenant application that is registered to
            the SAP SaaS Provisioning registry.
          type: string
        state:
          description: "State of the subscriptions. Possible states: IN_PROCESS, SUBSCRIBED,\
            \ SUBSCRIBE_FAILED, UNSUBSCRIBE_FAILED, UPDATE_FAILED."
          type: string
        subaccountId:
          description: ID of the associated subaccount.
          type: string
        subdomain:
          description: Consumer Subdomain
          type: string
        subscriptionGUID:
          description: "Unique subscription ID associated with the instance of the\
            \ dependent service to be used for future references, such as 'GET all\
            \ subscriptions' API call."
          type: string
        url:
          description: Application URL
          type: string
      type: object
    CreateSubscriptionRequestPayload:
      description: Create the request to subscribe to a multitenant application from
        a subaccount.
      example:
        subscriptionParams: "{}"
        planName: planName
      properties:
        planName:
          description: The name of the subscription plan to a multitenant application
          type: string
        subscriptionParams:
          description: "If needed, you can pass environment-specific configuration\
            \ parameters using a valid embedded JSON object.\nFor a list of supported\
            \ configuration parameters, see the documentation of the particular environment\
            \ offering.\nIn this example, additional configuration parameters 'id'\
            \ and 'email' are specified: \n{ \n\"instance_name\": \"myOrg\" \n} "
          type: object
      type: object
    DependenciesResponseObject:
      description: Any reuse services used or required by a subscribed application
        and its services.
      example:
        xsappname: xsappname
        appName: appName
        appId: appId
        providerSubaccountID: providerSubaccountID
        error: error
        dependencies:
        - null
        - null
      properties:
        appId:
          description: The appId of the master XSUAA instance provided when registering
            the reusable service in saas registry.
          type: string
        appName:
          description: The unique registration name of the linked dependency application.
          type: string
        dependencies:
          description: The list of relevant dependencies and their descriptions.
          items:
            $ref: '#/components/schemas/DependenciesResponseObject'
          type: array
        error:
          description: "In case there are errors during dependencies' assignments,\
            \ the descriptions are shown here."
          type: string
        providerSubaccountID:
          description: The ID of the provider subaccount.
          type: string
        xsappname:
          description: The xsappname configured in the security descriptor file used
            to create the XSUAA instance.
          type: string
      type: object
    EntitledApplicationsErrorResponseObject:
      description: The response object that contains details about an error in case
        the subscription failed.
      example:
        errorMessage: errorMessage
        appError: appError
      properties:
        appError:
          description: "A response object that contains details about the error an\
            \ app provider returns to the subscriber. It contains the error code,\
            \ a user-friendly, customer-oriented error message, technical details\
            \ about the error, and more."
          type: string
        errorMessage:
          description: 'The message that describes the error that occurred during
            the subscription. '
          type: string
      type: object
    EntitledApplicationsResponseCollection:
      example:
        applications:
        - metadata:
            empty: true
          displayName: displayName
          categoryDisplayName: categoryDisplayName
          applicationResource:
            path: path
            groupVersionType:
              type: type
              version: version
              group: group
            name: name
          description: description
          planName: planName
          customerDeveloped: true
          allowedTargetPlans:
          - allowedTargetPlans
          - allowedTargetPlans
          supportsGetParameters: true
          paramsSchema:
            empty: true
          platformEntityId: platformEntityId
          appId: appId
          quota: 1
          subscribedTenantId: subscribedTenantId
          commercialAppName: commercialAppName
          modifiedBy: modifiedBy
          subscriptionGUID: subscriptionGUID
          state: IN_PROCESS
          applicationCoordinates: "{}"
          globalAccountId: globalAccountId
          subscriptionError:
            errorMessage: errorMessage
            appError: appError
          appName: appName
          additionalPlanFeatures:
          - additionalPlanFeatures
          - additionalPlanFeatures
          formationSolutionName: formationSolutionName
          shortDescription: shortDescription
          incidentTrackingComponent: incidentTrackingComponent
          supportsParametersUpdates: true
          labels: "{}"
          supportsPlanUpdates: true
          authenticationProvider: XSUAA
          automationStateMessage: automationStateMessage
          automationState: PROCESSING
          createdDate: 0.8008281904610115
          createdBy: createdBy
          modifiedDate: 6.027456183070403
          tenantId: tenantId
          iconBase64: iconBase64
          planDescription: planDescription
          category: category
          subscriptionId: subscriptionId
          subscribedSubaccountId: subscribedSubaccountId
          subscriptionUrl: subscriptionUrl
        - metadata:
            empty: true
          displayName: displayName
          categoryDisplayName: categoryDisplayName
          applicationResource:
            path: path
            groupVersionType:
              type: type
              version: version
              group: group
            name: name
          description: description
          planName: planName
          customerDeveloped: true
          allowedTargetPlans:
          - allowedTargetPlans
          - allowedTargetPlans
          supportsGetParameters: true
          paramsSchema:
            empty: true
          platformEntityId: platformEntityId
          appId: appId
          quota: 1
          subscribedTenantId: subscribedTenantId
          commercialAppName: commercialAppName
          modifiedBy: modifiedBy
          subscriptionGUID: subscriptionGUID
          state: IN_PROCESS
          applicationCoordinates: "{}"
          globalAccountId: globalAccountId
          subscriptionError:
            errorMessage: errorMessage
            appError: appError
          appName: appName
          additionalPlanFeatures:
          - additionalPlanFeatures
          - additionalPlanFeatures
          formationSolutionName: formationSolutionName
          shortDescription: shortDescription
          incidentTrackingComponent: incidentTrackingComponent
          supportsParametersUpdates: true
          labels: "{}"
          supportsPlanUpdates: true
          authenticationProvider: XSUAA
          automationStateMessage: automationStateMessage
          automationState: PROCESSING
          createdDate: 0.8008281904610115
          createdBy: createdBy
          modifiedDate: 6.027456183070403
          tenantId: tenantId
          iconBase64: iconBase64
          planDescription: planDescription
          category: category
          subscriptionId: subscriptionId
          subscribedSubaccountId: subscribedSubaccountId
          subscriptionUrl: subscriptionUrl
      properties:
        applications:
          description: The response  list of all the multitenant applications to which
            a specified subaccount is entitled to subscribe.
          items:
            $ref: '#/components/schemas/EntitledApplicationsResponseObject'
          type: array
      type: object
    EntitledApplicationsResponseObject:
      description: The response  list of all the multitenant applications to which
        a specified subaccount is entitled to subscribe.
      example:
        metadata:
          empty: true
        displayName: displayName
        categoryDisplayName: categoryDisplayName
        applicationResource:
          path: path
          groupVersionType:
            type: type
            version: version
            group: group
          name: name
        description: description
        planName: planName
        customerDeveloped: true
        allowedTargetPlans:
        - allowedTargetPlans
        - allowedTargetPlans
        supportsGetParameters: true
        paramsSchema:
          empty: true
        platformEntityId: platformEntityId
        appId: appId
        quota: 1
        subscribedTenantId: subscribedTenantId
        commercialAppName: commercialAppName
        modifiedBy: modifiedBy
        subscriptionGUID: subscriptionGUID
        state: IN_PROCESS
        applicationCoordinates: "{}"
        globalAccountId: globalAccountId
        subscriptionError:
          errorMessage: errorMessage
          appError: appError
        appName: appName
        additionalPlanFeatures:
        - additionalPlanFeatures
        - additionalPlanFeatures
        formationSolutionName: formationSolutionName
        shortDescription: shortDescription
        incidentTrackingComponent: incidentTrackingComponent
        supportsParametersUpdates: true
        labels: "{}"
        supportsPlanUpdates: true
        authenticationProvider: XSUAA
        automationStateMessage: automationStateMessage
        automationState: PROCESSING
        createdDate: 0.8008281904610115
        createdBy: createdBy
        modifiedDate: 6.027456183070403
        tenantId: tenantId
        iconBase64: iconBase64
        planDescription: planDescription
        category: category
        subscriptionId: subscriptionId
        subscribedSubaccountId: subscribedSubaccountId
        subscriptionUrl: subscriptionUrl
      properties:
        additionalPlanFeatures:
          description: The list of features specific to this plan.
          items:
            description: The list of features specific to this plan.
            type: string
          type: array
        allowedTargetPlans:
          description: "List of plans to which the existing subscription can switch.\
            \ Includes upgrades, downgrades, and other types of transitions."
          items:
            description: "List of plans to which the existing subscription can switch.\
              \ Includes upgrades, downgrades, and other types of transitions."
            type: string
          type: array
        appId:
          description: The ID returned by XSUAA after the app provider has performed
            a bind of the multitenant application to a XSUAA service instance.
          type: string
        appName:
          description: The unique registration name of the deployed multitenant application
            as defined by the app developer.
          type: string
        applicationCoordinates:
          description: The application coordinates provided in metadata for customer-facing
            UIs.
          type: object
        applicationResource:
          $ref: '#/components/schemas/ApplicationResourceDto'
        authenticationProvider:
          description: |
            The authentication provider of the multitenant application.
            * XSUAA is the SAP Authorization and Trust Management service that defines scopes and permissions for users as tenants at the global account level.
            * IAS is Identity Authentication Service that defines scopes and permissions for users in zones (common data isolation systems across systems, SaaS tenants, and services).
          enum:
          - XSUAA
          - IAS
          type: string
        automationState:
          description: The state of the automation solution.
          enum:
          - PROCESSING
          - OK
          - PROCESSING_FAILED
          type: string
        automationStateMessage:
          description: The message that describes the automation solution state.
          type: string
        category:
          description: The technical name of the category defined by the app developer
            to which the multitenant application is grouped in customer-facing UIs.
          type: string
        categoryDisplayName:
          description: The display name of the category for customer-facing UIs.
          type: string
        commercialAppName:
          description: The commercial name of the deployed multitenant application
            as defined by the app developer.
          type: string
        createdBy:
          description: Details about the user or client that created this subscription.
          type: string
        createdDate:
          description: The date the subscription was created. Dates and times are
            in UTC format.
          format: date-time
          type: number
        customerDeveloped:
          description: "Whether the application was developed by a customer. If not,\
            \ then the application is developed by the cloud operator, such as SAP."
          type: boolean
        description:
          description: The description of the multitenant application for customer-facing
            UIs.
          type: string
        displayName:
          description: The display name of the application for customer-facing UIs.
          type: string
        formationSolutionName:
          description: Name of the formations solution associated with the multitenant
            application.
          type: string
        globalAccountId:
          description: ID of the associated global account.
          type: string
        iconBase64:
          description: The icon of the multitenant application for customer-facing
            UIs.
          type: string
        incidentTrackingComponent:
          description: The application's incident-tracking component provided in metadata
            for customer-facing UIs.
          type: string
        labels:
          description: "User-defined labels that are assigned as key-value pairs in\
            \ a JSON array to the multitenant application subscription. \n\nExample:\n\
            \n{\n\n  \"Cost Center\": [\"19700626\"],\n\n  \"Department\": [\"Sales\"\
            ],\n\n  \"Contacts\": [\"name1@example.com\",\"name2@example.com\"],\n\
            \n  \"EMEA\":[]\n\n}"
          type: object
          example: null
        metadata:
          $ref: '#/components/schemas/EntitledApplicationsResponseObject_metadata'
        modifiedBy:
          description: Details about the user or client that last modified this subscription.
          type: string
        modifiedDate:
          description: The date the subscription was last modified. Dates and times
            are in UTC format.
          format: date-time
          type: number
        paramsSchema:
          $ref: '#/components/schemas/EntitledApplicationsResponseObject_paramsSchema'
        planDescription:
          description: The description of the plan for customer-facing UIs.
          type: string
        planName:
          description: The plan name of the application to which the consumer has
            subscribed.
          type: string
        platformEntityId:
          description: ID of the landscape-specific environment.
          type: string
        quota:
          description: Total amount the subscribed subaccount is entitled to consume.
          format: int32
          type: integer
        shortDescription:
          description: The short description of the multitenant application for customer-facing
            UIs.
          type: string
        state:
          description: The subscription state of the subaccount regarding the multitenant
            application.
          enum:
          - IN_PROCESS
          - SUBSCRIBED
          - SUBSCRIBE_FAILED
          - UNSUBSCRIBE_FAILED
          - UPDATE_FAILED
          - UPDATE_PARAMETERS_FAILED
          - NOT_SUBSCRIBED
          type: string
        subscribedSubaccountId:
          description: The ID of the subaccount which is subscribed to the multitenant
            application.
          type: string
        subscribedTenantId:
          description: The ID of the tenant which is subscribed to a multitenant application.
          type: string
        subscriptionError:
          $ref: '#/components/schemas/EntitledApplicationsErrorResponseObject'
        subscriptionGUID:
          description: "Unique subscription ID associated with the instance of the\
            \ dependent service to be used for future references, such as 'GET all\
            \ subscriptions' API call."
          type: string
        subscriptionId:
          description: Technical ID generated by XSUAA for a multitenant application
            when a consumer subscribes to the application.
          type: string
        subscriptionUrl:
          description: URL for app users to launch the subscribed application.
          type: string
        supportsGetParameters:
          description: Specifies whether a subaccount can provide its subscriptions
            parameters.
          type: boolean
        supportsParametersUpdates:
          description: "Specifies whether a consumer, whose subaccount is subscribed\
            \ to the application, can change its subscriptions parameters."
          type: boolean
        supportsPlanUpdates:
          description: "Specifies if a consumer, whose subaccount is subscribed to\
            \ the application, can change the subscription to a different plan that\
            \ is available for this application and subaccount."
          type: boolean
        tenantId:
          description: Tenant ID of the application provider.
          type: string
      type: object
    ErrorResponse:
      example:
        error:
          code: 6
          description: description
          correlationID: correlationID
          details:
          - code: 1
            message: message
          - code: 1
            message: message
          message: message
          target: target
      properties:
        error:
          $ref: '#/components/schemas/ErrorResponse_error'
      type: object
    GroupVersionType:
      example:
        type: type
        version: version
        group: group
      properties:
        group:
          type: string
        type:
          type: string
        version:
          type: string
      type: object
    JobErrorResponseObject:
      description: Error message when the state is FAILED.
      example:
        exception: exception
        paths: paths
        error: error
        message: message
        status: 0
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        error:
          description: Description of the error.
          type: string
        exception:
          description: The runtime exception for the error.
          type: string
        message:
          description: The message associated with the current error.
          type: string
        paths:
          description: Path of the exception received from the server.
          type: string
        status:
          description: Error status code.
          format: int32
          type: integer
        timestamp:
          description: Timestamp of the error.
          format: date-time
          type: string
      type: object
    JobParameter:
      example:
        identifying: true
        type: STRING
        value: "{}"
      properties:
        identifying:
          type: boolean
        type:
          enum:
          - STRING
          - DATE
          - LONG
          - DOUBLE
          type: string
        value:
          type: object
          example: null
      type: object
    JobStateResponseObject:
      example:
        createdBy: createdBy
        id: id
        state: CREATED
        error:
          exception: exception
          paths: paths
          error: error
          message: message
          status: 0
          timestamp: 2000-01-23T04:56:07.000+00:00
        stateDetails:
          key: "{}"
      properties:
        createdBy:
          description: The service instance ID of the SAP SaaS Provisioning service
            (saas-registry) that the application is using.
          type: string
        error:
          $ref: '#/components/schemas/JobErrorResponseObject'
        id:
          description: ID of the corresponding job.
          type: string
        state:
          description: |-
            The current state of the corresponding job. Possible values:
            * <b>CREATED:</b> Job processing has created.
            * <b>STARTED:</b> Job processing has started.
            * <b>SUCCEEDED:</b> The job has completed.
            * <b>FAILED:</b> The job failed and did not complete.
            * <b>RETRY:</b> Subscription has timed out and job processing is pending a retry.
          enum:
          - CREATED
          - STARTED
          - SUCCEEDED
          - FAILED
          - RETRY
          type: string
        stateDetails:
          additionalProperties:
            description: The state details of the corresponding job.
            type: object
            example: null
          description: The state details of the corresponding job.
          type: object
      type: object
    JobStatusResponseObject:
      example:
        customParams:
          key: "{}"
        description: description
        jobParams:
          key:
            identifying: true
            type: STRING
            value: "{}"
        statusDetails:
          key: "{}"
        status: IN_PROGRESS
      properties:
        customParams:
          additionalProperties:
            type: object
            example: null
          type: object
        description:
          description: A description of the exit status of a job when it ends.
          type: string
        jobParams:
          additionalProperties:
            $ref: '#/components/schemas/JobParameter'
          type: object
        status:
          description: "The current state of the job. \n* <b>IN_PROGRESS:</b> The\
            \ job is being executed.\n* <b>COMPLETED:</b> The job has completed.\n\
            * <b>FAILED:</b> The job failed and did not complete. The job can be restarted."
          enum:
          - IN_PROGRESS
          - COMPLETED
          - FAILED
          type: string
        statusDetails:
          additionalProperties:
            type: object
            example: null
          type: object
      required:
      - description
      - status
      type: object
    LabelAssignmentRequestPayload:
      description: JSON object with labels as key-value pairs that specify custom
        attributes of the entity.
      example:
        labels: "{}"
      properties:
        labels:
          description: |-
            Labels as key-value pairs in JSON format. An entity is allowed up to 10 labels. The key of each label is mandatory and is limited to 63 characters. Standard labels can have any name (key) that you define, with only a single optional value assigned per key. To define a special type of label, called tags, specify the key with the name 'tags' and associate up to 10 values per tag in the array. The key 'tags' (in any casing variation) can only be used once per entity. Note that label values (not keys) are case-sensitive -- be careful not to create duplicate variants of the same value with a different casing (example: "myValue" and "MyValue").

            For example: {

            "Cost Center":"2624061970"

            "Department":"Sales"

            "tags": ["Green", "Pharma", "Audited"]

            }
          type: object
          example: null
      type: object
    LabelsResponseObject:
      description: Labels assigned as key-value pairs to the entity.
      type: object
    NestingErrorDetailsResponseObject:
      example:
        code: 1
        message: message
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
      type: object
    ParamsResponseObject:
      description: Params assigned as key-value pairs.
      type: object
    RegistrationDetailsResponseObject:
      example:
        providerTenantId: providerTenantId
        xsappname: xsappname
        appName: appName
        displayName: displayName
        appUrls: appUrls
        description: description
        serviceInstanceId: serviceInstanceId
        formationSolutionName: formationSolutionName
        organizationGuid: organizationGuid
        messageOnAutomationFailure: messageOnAutomationFailure
        spaceGuid: spaceGuid
        automationSolutionName: automationSolutionName
        failSubscriptionOnAutomationFailure: true
        paramsSchema:
          empty: true
        propagateParams: true
        appType: appType
        appId: appId
        commercialAppName: commercialAppName
        category: category
        globalAccountId: globalAccountId
      properties:
        appId:
          description: The ID returned by an xsuaa service instance after the app
            provider has connected the multitenant application to an xsuaa service
            instance.
          type: string
        appName:
          description: The unique registration name of the deployed multitenant application
            as defined by the app developer.
          type: string
        appType:
          description: |-
            The plan used to register the multitenant application or reusable service.
            <b>- saasApplication:</b> Registered entity is a multitenant application.
            <b>- saasService:</b> Registered entity is a reuse service.
          type: string
        appUrls:
          description: Any callback URLs that the multitenant application exposes.
          type: string
        automationSolutionName:
          description: Name of the cloud automation solution associated with the multitenant
            application.
          type: string
        category:
          description: "The category to which the application is grouped in the Subscriptions\
            \ page in the cockpit. If left empty, it gets assigned to the default\
            \ category."
          type: string
        commercialAppName:
          description: The unique commercial registration name of the deployed multitenant
            application as defined by the app developer.
          type: string
        description:
          description: The description of the multitenant application for customer-facing
            UIs.
          type: string
        displayName:
          description: The display name of the application for customer-facing UIs.
          type: string
        failSubscriptionOnAutomationFailure:
          description: A flag to determine wheater to fail subscription when automation
            solution fails or not.
          type: boolean
        formationSolutionName:
          deprecated: true
          description: Name of the formations solution associated with the multitenant
            application.
          type: string
        globalAccountId:
          description: ID of the global account associated with the multitenant application.
          type: string
        messageOnAutomationFailure:
          description: Error message to return when automation solution fails.
          type: string
        organizationGuid:
          description: The unique ID of the Cloud Foundry org where the app provider
            has deployed and registered the multitenant application.
          type: string
        paramsSchema:
          $ref: '#/components/schemas/EntitledApplicationsResponseObject_paramsSchema'
        propagateParams:
          description: Whether the parameters are transferred to the application’s
            dependencies.
          type: boolean
        providerTenantId:
          description: The unique ID of the tenant that provides the multitenant application.
          type: string
        serviceInstanceId:
          description: The ID of the multitenant application that is registered to
            the SAP SaaS Provisioning service registry.
          type: string
        spaceGuid:
          description: The unique ID of the Cloud Foundry space where the app provider
            has deployed and registered the multitenant application.
          type: string
        xsappname:
          description: The xsappname configured in the security descriptor file used
            to create the xsuaa service instance for the multitenant application.
          type: string
      type: object
    SaasAsyncSubscriptionRequestPayload:
      description: The details of the subaccount tenant subscription an app provider
        sends to users.
      example:
        additionalOutput:
          key: "{}"
        message: message
        status: SUCCEEDED
        subscriptionUrl: subscriptionUrl
      properties:
        additionalOutput:
          additionalProperties:
            description: Additional output for callback response.
            type: object
            example: null
          description: Additional output for callback response.
          type: object
        message:
          description: 'Additional details accompanying the subscription process.
            Relates mostly to the cases when the subscription process status is FAILED. '
          type: string
        status:
          description: Status of the subscription job.
          enum:
          - SUCCEEDED
          - FAILED
          type: string
        subscriptionUrl:
          description: The URL the multitenant application is exposing for a subscription.
          type: string
      type: object
    SubscriptionsListResponseObject:
      example:
        subscriptions:
        - amount: 6
          movedFromSaasProvisioning: true
          subaccountId: subaccountId
          code: code
          appName: appName
          serviceInstanceId: serviceInstanceId
          consumerTenantId: consumerTenantId
          error: error
          createdOn: createdOn
          changedOn: changedOn
          url: url
          dependencies:
          - xsappname: xsappname
            appName: appName
            appId: appId
            providerSubaccountID: providerSubaccountID
            error: error
            dependencies:
            - null
            - null
          - xsappname: xsappname
            appName: appName
            appId: appId
            providerSubaccountID: providerSubaccountID
            error: error
            dependencies:
            - null
            - null
          licenseType: licenseType
          isConsumerTenantActive: true
          appNameBeforeMovedFromSaasProvisioning: appNameBeforeMovedFromSaasProvisioning
          appId: appId
          subdomain: subdomain
          commercialAppName: commercialAppName
          subscriptionGUID: subscriptionGUID
          state: state
          globalAccountId: globalAccountId
        - amount: 6
          movedFromSaasProvisioning: true
          subaccountId: subaccountId
          code: code
          appName: appName
          serviceInstanceId: serviceInstanceId
          consumerTenantId: consumerTenantId
          error: error
          createdOn: createdOn
          changedOn: changedOn
          url: url
          dependencies:
          - xsappname: xsappname
            appName: appName
            appId: appId
            providerSubaccountID: providerSubaccountID
            error: error
            dependencies:
            - null
            - null
          - xsappname: xsappname
            appName: appName
            appId: appId
            providerSubaccountID: providerSubaccountID
            error: error
            dependencies:
            - null
            - null
          licenseType: licenseType
          isConsumerTenantActive: true
          appNameBeforeMovedFromSaasProvisioning: appNameBeforeMovedFromSaasProvisioning
          appId: appId
          subdomain: subdomain
          commercialAppName: commercialAppName
          subscriptionGUID: subscriptionGUID
          state: state
          globalAccountId: globalAccountId
        total: 1
        morePages: true
        totalPages: 5
        page: 0
      properties:
        morePages:
          description: Whether there are more pages.
          type: boolean
        page:
          description: The current page number.
          format: int32
          type: integer
        subscriptions:
          description: The list of the requested app subscriptions.
          items:
            $ref: '#/components/schemas/ApplicationSubscriptionsResponseObject'
          type: array
        total:
          description: Total numbers of results.
          format: int64
          type: integer
        totalPages:
          description: Total numbers of pages.
          format: int32
          type: integer
      type: object
    UpdateApplicationDependenciesRequestPayload:
      description: Send custom property values in the form of key-value pairs to dependent
        services (provider applications) during the update to notify them about a
        change related to an existing subscription.
      example:
        appProviderCustomProperties:
          key: "{}"
      properties:
        appProviderCustomProperties:
          additionalProperties:
            description: A JSON object with key-value pairs. Values can further be
              JSON objects. (nested structure)
            type: object
            example: null
          description: A JSON object with key-value pairs. Values can further be JSON
            objects. (nested structure)
          type: object
      type: object
    UpdateSubscriptionRequestPayload:
      description: Create the request to update parameters in an existing subscription
        from a subaccount.
      example:
        subscriptionParams:
          key: "{}"
        planName: planName
      properties:
        planName:
          description: The new plan of the multitenant application to update in the
            existing subscription.
          type: string
        subscriptionParams:
          additionalProperties:
            description: Additional subscription parameters determined by the application
              provider.
            type: object
            example: null
          description: Additional subscription parameters determined by the application
            provider.
          type: object
      type: object
    batchUpdateXsuaaSubscriptionDependencies:
      description: The payload for a batch operation. Specify either GUIDs or tenant
        IDs (but not both) of multitenant (xsuaa-utilizing) app subscriptions whose
        dependencies need updating. Use the wildcard character (*) instead of individual
        IDs to update all subscription dependencies. Send custom property values in
        the form of key-value pairs to dependent services (provider applications)
        during the update to notify them about a change related to an existing subscription.
      properties:
        appProviderCustomProperties:
          additionalProperties:
            description: A JSON object with key-value pairs. Values can further be
              JSON objects. (nested structure)
            type: object
            example: null
          description: A JSON object with key-value pairs. Values can further be JSON
            objects. (nested structure)
          type: object
        subscriptionGuids:
          items:
            type: string
          type: array
        tenantIds:
          items:
            type: string
          type: array
      type: object
    EntitledApplicationsResponseObject_metadata:
      additionalProperties:
        description: JSON schema that describes the metadata that the consumer provide
          when subscribing to the application.
        type: object
        example: null
      description: JSON schema that describes the metadata that the consumer provide
        when subscribing to the application.
      example:
        empty: true
      properties:
        empty:
          type: boolean
      type: object
    EntitledApplicationsResponseObject_paramsSchema:
      additionalProperties:
        description: JSON schema that describes the parameters that the consumer must
          provide when subscribing to the application.
        type: object
        example: null
      description: JSON schema that describes the parameters that the consumer must
        provide when subscribing to the application.
      example:
        empty: true
      properties:
        empty:
          type: boolean
      type: object
    ErrorResponse_error:
      example:
        code: 6
        description: description
        correlationID: correlationID
        details:
        - code: 1
          message: message
        - code: 1
          message: message
        message: message
        target: target
      properties:
        code:
          description: Technical code of the error as a reference for support
          format: int32
          type: integer
        correlationID:
          description: Log correlation ID to track the event
          type: string
        description:
          type: string
        details:
          description: Nesting of error responses
          items:
            $ref: '#/components/schemas/NestingErrorDetailsResponseObject'
          type: array
        message:
          description: User-friendly description of the error.
          type: string
        target:
          description: "Describes a data element (for example, a resource path: /online-store/v1/products/123)"
          type: string
      required:
      - code
      - correlationID
      - message
      type: object
  securitySchemes:
    OAuth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: "https://{identityzone}.authentication.eu10.hana.ondemand.com/oauth/token"
        password:
          scopes: {}
          tokenUrl: "https://{identityzone}.authentication.eu10.hana.ondemand.com/oauth/token"
      type: oauth2
x-sap-shortText: Register and provision subscriptions for multitenant applications
  and services.
x-sap-stateInfo:
  state: Active
x-servers:
- templates:
    landscape:
      default: eu10
      enum:
      - eu10
      - us10
      - ap21
  url: "https://saas-manager.cfapps.{landscape}.hana.ondemand.com"
